# ----- Packet declaration -----
# Packet [logical packet size]
packet 10.0

# -------------------- Scheduling Unit --------------------
# ----- ResourceDB declaration -----
# ResourceDB [name] [ResourceDB]
ResourceDB db NormalResourceDB(1000, 1000)

# ----- NetworkMonitor declaration -----
# NetworkMonitor [name] \
# [NetworkMontor([ResourceDB name], [interval of probing], [probe data size])]
NetworkMonitor nm NormalNetworkMonitor(db, Constant(60.0), Constant(500))

# ----- ServerMonitor declaration -----
# ServerMonitor [name] \
# [ServerMontor([ResourceDB name], [interval of probing], [trackingTime])]
ServerMonitor sm NormalServerMonitor(db, Constant(10), 10)

# ----- Precictor declaration -----
# Predictor [name] ([ResourceDB name], [Predictor] ...)
# if no Predictor, the simulator selects 
# NonNetworkPredictor and NonServerPredictor
Predictor pr (db)

# ----- Scheduler declaration -----
# Scheduler [name] [Scheduler([Predictor name]([argument] ..))]
Scheduler loadthru LoadThroughputScheduler(pr)


# -------------------- Grid Computing Enviromnent --------------------
# ----- Server declaration -----
# Server [name] [Queue([performance] [argument] ..)]\
#  [OthersData([num of instructions], [intararrival time])]
#server s0 QueueFCFS(Constant(100.0)) \
server s0 QueueTimeSharing(Constant(100.0)), 2.0 \
	OthersData(ExponentRandom(10.0, 0), ExponentRandom(1.0, 21468))

# ----- Client declaration -----
# Client [name] [Scheduler name] \
#  RequestData([data size for send], [data size for receive], \
#              [num of instruction], [interval of invoking]), ...)
client c0 loadthru \
	Requests(Constant(10), Constant(10.0), \
	         Constant(2000.0), Constant(120))
client c1 loadthru \
	Requests(Constant(10), Constant(10.0),\
	 	 Constant(2000.0), Constant(120))
client c2 loadthru \
	Requests(Constant(10), Constant(10.0),\
	 	 Constant(2000.0), Constant(120))


# ----- Network declaration -----
# Network [name] [Queue([throughput] [argument] ..) \
#  OthersData([data size], [intararrival time])
network c0s0 QueueFCFS(\
	InterpolationThroughput(SplineOrLinear, 1201, ns0_nws.dat) \
	OthersData(ExponentRandom(PACKET_SIZE, 12122), Infinity())
network s0c0 QueueFCFS(\
	InterpolationThroughput(SplineOrLinear, 1446, nr0_nws.dat) \
	OthersData(ExponentRandom(PACKET_SIZE, 7000), Infinity())
network c1s0 QueueFCFS(\
	InterpolationThroughput(SplineOrLinear, 1201, ns0_nws.dat) \
	OthersData(ExponentRandom(PACKET_SIZE, 12122), Infinity())
network s0c1 QueueFCFS(\
	InterpolationThroughput(SplineOrLinear, 1446, nr0_nws.dat) \
	OthersData(ExponentRandom(PACKET_SIZE, 7000), Infinity())
network c2s0 QueueFCFS(\
	InterpolationThroughput(SplineOrLinear, 1201, ns0_nws.dat) \
	OthersData(ExponentRandom(PACKET_SIZE, 12122), Infinity())
network s0c2 QueueFCFS(\
	InterpolationThroughput(SplineOrLinear, 1446, nr0_nws.dat) \
	OthersData(ExponentRandom(PACKET_SIZE, 7000), Infinity())


# ----- Link declaration -----
# Link [source Node] - [destination Node], ..
link c0-c0s0:ExponentRandom(23479), c0s0-s0, s0-s0c0:ExponentRandom(9992), s0c0-c0
link c1-c1s0:ExponentRandom(12782), c1s0-s0, s0-s0c1:ExponentRandom(23097), s0c1-c1
link c2-c2s0:ExponentRandom(12782), c2s0-s0, s0-s0c2:ExponentRandom(23097), s0c2-c2


