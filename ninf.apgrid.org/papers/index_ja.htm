<HTML>
<HEAD>
<TITLE> Pdperf Papers </TITLE>
</HEAD>
<BODY bgcolor="#ffffff">
<H1> <img align="middle" alt="pd-mark" src="../pd-mark.gif">
Papers
</H1>
<hr>
<h2>
<a href="index.html"> 英文の論文はこちら</a>
</h2>
<hr>
<dl>
<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="fd99.ps.gz"> fd99.ps.gz : </a>
佐藤三久, 草野 和寛(新情報処理開発機構),
 中田秀基, 関口智嗣(電子技術総合研究所), 松岡聡(東京工業大学)
"グローバルコンピューティングシステムNinfを用いた
数値流体解析コンポーネント netCFD",
第10回計算流体シンポジウム，1999.
 <DD>
概要：
グローバルコンピューテングのためのミドルウエアである、ネットワーク情報
ライブラリNinfを用いて、広域ネットワーク上のクライアントから、利用可能
な数値流体解析コンポーネント netCFDとこれを用いたjava Appletによる可視
化のデモシステムについて述べる。計算サーバを並列機などの高性能コンピュー
タにすることによって、高性能な計算資源を広域な環境で手軽に利用できる。
<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="OKINAWA99-OS-15.ps.gz"> OKINAWA99-OS-15.ps.gz : </a>
田中 良夫,佐藤 三久,中田 秀基,関口 智嗣
"globusを用いたグローバルコンピューティングの性能評価"
情報処理学会システムソフトウェアとオペレーティングシステム研究会，1999.
 <DD>
概要：
globusを用いたMPICHの実装であるMPICH-Gを用いて探索問題の並列解法を実装
し，グローバルコンピューティング環境でその実行性能を測定した．グローバ
ルコンピューティング環境で並列計算を行なう場合，通信量の抑制と負荷分散
が効率に大きな影響を与える．これらの点に留意してプログラミングを行なう
ことにより，十分実用的な性能が得られることがわかった．
<P>
<DT><IMG SRC="icons/hand.right.gif" ALT="">
<A HREF="IPSJ99-COMPaS.ps.gz"> IPSJ99-COMPaS.ps.gz:</A>
田中良夫, 松田元彦,久保田和人,佐藤三久,
"COMPaS: Pentium Proを用いたSMPクラスタとその評価",
情報処理学会論文誌, 1999.
<DD>
概要:
我々はPentium Proを4台搭載した対称型マルチプロセッサであるサーバ型PC8
台をMyrinetと100Base-T Ethernetで結合したSMPクラスタCOMPaSを構築した．
階層構造を持つクラスタシステムにおいて高い性能を獲得するため，通常の分
散プログラミングとマルチスレッドプログラミングを組み合わせたプログラミ
ング（共有/分散融合プログラミング）を行なってCOMPaSの性能を測定した．
COMPaSの性能は，データの局所性（アクセスパターン）に依存する．主記憶に対
して高いバンド幅を必要とするプログラムにおいてはメモリバスの性能がネッ
クとなるが，データの局所性が高く，キャッシュを有効に利用することができ
る場合には高い性能を得ることができる．

<P>
<DT><IMG SRC="icons/hand.right.gif" ALT="">
<A HREF="IPSJ99-NICAM.ps.gz">IPSJ99-NICAM.ps.gz:</A>
松田元彦, 田中良夫, 久保田和人, 佐藤三久,
"SMP クラスタ向けネットワーク・インタフェース AM 通信",
情報処理学会論文誌, 1999.
<DD>
概要:
NICAM は，通信オーバヘッドと同期レイテンシの低減を
目的とする SMP PC クラスタのために設計した Myrinet 上の通信であり，
ネットワーク・インタフェース（NI）上の
マイクロ・プロセッサを活用することを特徴としている．
通信処理を NI 上で直接行うことで，
ポーリング等の負担からホスト・プロセッサを解放し
オーバヘッドを低減する．
また，同期プリミティブを NI 間で処理することで，
ホスト−NI 間のインタラクションを不要にし，
オーバヘッドと同時にレイテンシを低減する．
NICAM では，NI 上のプログラムに拡張性を持たせるため，
アクティブ・メッセージ（AM）の枠組みを利用している．
AM を使うことにより，データ転送と同期を組み合わせる等の
新しい通信プリミティブの定義が容易になる．
これは NI 上の比較的低速なプロセッサによる実行を補うために，
処理回数を減らすのに効果がある．
NICAM を用いたデータ並列計算を行う実験では，
低オーバヘッドな通信が計算／通信のオーバラップに有効であることを示す．
また，NI 上で処理するバリア同期の応用として，
データ並列ライブラリでの同期コストを完全に隠蔽可能であることを示す．

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="HOKKE99-HPC-7.ps.gz"> HOKKE99-HPC-7.ps.gz : </a>
佐藤 三久,田中 良夫,草野 和寛,中田 秀基,関口 智嗣,
長嶋 雲兵,松岡 聡,
"Ninfによる遠隔計算資源アクセスシステムの構築と
グローバルコンピューティングシステムの性能評価",
情報処理学会ハイパフォーマンスコンピューティング研究会，HOKKE'99,1999.
 <DD>
概要：
グローバルコンピューティングのためのミドルウエアである、ネットワーク情
報ライブラリNinfを用いて、広域のネットワークで接続された計算機を利用す
るいくつかのシステムを試作している。Ninfにより、遠隔の計算資源をクライ
アン
ト側のプログラムの一つの計算コンポーネントとして利用できるようになる。
プロトタイプとして、
数値流体解析コンポーネントnetCFDと分子軌道計算コンポーネントnetMOを開
発した。流体計算では、途中結果の大量のデータの出力が必要となることがあ
るが、計算とデータの入出力をオーバーラップさせることによって、遠隔の計
算資源でも効率的に利用できる。netCFDを利用したデモシステムとして、Java
appletを用いて広域ネットワーク上のWebブラウザから利用可能なシステム
を構築した。appletはサーバ上でNinfインタフェースでサービスされている
流体解析解析プログラムを起動して計算を行い、call backのインタフェース
により計算途中でappletの可視化ルーチンを起動することで可視化させる
ことができる。
<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="HPC-sendai.ps.gz"> HPC-sendai.ps.gz : </a>
佐藤 茂久, 草野 和寛, 松田 元彦, 田中 良夫, 佐藤 三久，
"SMPクラスタにおけるコレスキー分解の並列化"
情報処理学会ハイパフォーマンスコンピューティング研究会，Vol. 98, No. 73,
pp.49-54, 1998.
 <DD>
概要：
SPLASH2の中のCholeskyを、Solarisスレッドとリモートメモリ転送を用いて並列化し、SMPクラスタCOMPaS上で性能を評価した。
COMPaSは4個のPentiumProを持つノードをMyrinetを用いて8台接続している。
ノード内の並列処理はSolarisスレッドを用いて行ない、ノード間の並列処理はMyrinetを通したリモートメモリ転送を行なうSPMD方式で実現した。
Choleskyは疎行列のコレスキー分解を行なうプログラムで、不規則に通信が発生し、グローバルな同期を持たないという特徴を持つ。
同数のプロセッサを持つ分散メモリシステムとSMPクラスタでは、後者の方がデータ共有のオーバーヘッドは小さくなるが、Choleskyの場合、負荷の不均衡による性能の低下が大きかった。
<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="IPSJ98-HPC-39.ps.gz"> IPSJ98-HPC-39.ps.gz : </a>
草野 和寛，佐藤 三久,
"共有メモリワークステーション向けCコンパイラの並列化機能による並列化",
情報処理学会ハイパフォーマンスコンピューティング研究会，Vol. 98，No. 39，
pp. 13--18，1998.
 <DD>
概要：
共有メモリマルチプロセッサ構成のWSやPCが一般に利用されるようになってき
ている。
このようなシステムの性能を引き出すには、従来の逐次実行プログラムを並列
化する必要がある。
しかし、並列化は非常に困難な作業であり、コンパイラの並列化などシステム
のサポートが非常に重要である。
そこで、我々はベンチマークプログラムの自動並列化およびpragmaを用いた並
列化を行うことで、Cコンパイラの並列化機能について調査した。
その結果、プログラムによっては自動並列化のみでも性能は向上するが、十分
な性能向上を得るためにはpragmaを用いた並列化指示が有効であった。
また、自動並列化およびpragmaを用いた並列化は、プログラムの並列化作業に
おいてユーザの負担を軽減するのに有効であった。

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="SWoPP98-HPC-2.ps.gz"> SWoPP98-HPC-2.ps.gz : </a>
久保田 和人，板倉 憲一，佐藤 三久，朴 泰祐,
"高精度大規模並列プログラムシミュレーション環境によるNPBの挙動解析"
情報処理学会ハイパフォーマンスコンピューティング研究会，Vol. 98, No. 72,
pp.7--12, 1998.
 <DD>
概要：
千台規模の並列計算機上でのNAS Parallel Benchmark(NPB) Class B
問題の挙動をシミュレーションした。
プロセッサ台数を1024台まで変化させ、キャッシュサイズやネットワー
クのバンド幅、レイテンシ等の様々なハードウェアパラメータを変化さ
せた場合の挙動を解析した。
シミュレーション結果より、全ての問題に関して、キャッシュサイズは
実行時間にさほど影響を与えないことがわかった。
ネットワーク性能に関しては、EPを除く全ての問題について、通信オーバー
ヘッドが大きく影響した。
バンド幅は、ネットワーク全体の高いスループットが必要な問題(CG)で
影響が表れた。

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="SWoPP98-TEA.ps.gz"> SWoPP98-TEA.ps.gz : </a>
佐藤 三久, 建部 修見, 関口 智嗣,朴 泰祐,
"自動適応並列プログラム性能最適化ツール TEA Expert"
情報処理学会ハイパフォーマンスコンピューティング研究会，Vol. 98, No. 72,
pp. 13--18, 1998.
 <DD>
概要：
TEA Expertは、プログラム中に記述した最適化要素に対応したパラメータを変
化させ、自動的に実行することによって、最適なパラメータセットを決定し、
プログラムの最適化を支援するツール群である。プログラムの最適化の作業を
容易にするだけでなく、試行を自動化することによって、異なるプラットフォー
ムにおいても、自動的に最適なパラメータ値を検索することにより、
そのプラットフォームに容易に適応できるようになる。
ワークステーションからPC、ワークステー
ションクラスタからMPPなど、異なるプラットフォームごとに逐次および並列
プログラムを自動的にチューニングされるソフトウエアのフレームワークを提
供
する。

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="SWoPP98-HPC-21.ps.gz"> SWoPP98-HPC-21.ps.gz : </a>
田中 良夫，松田 元彦，久保田 和人，佐藤 三久，
"SMPクラスタ上でのリモートメモリ転送を用いた通信と計算のオーバーラッ
プによる性能改善"
情報処理学会ハイパフォーマンスコンピューティング研究会，Vol. 98, No. 72,
pp. 121--126, 1998.
 <DD>
概要：
SMPクラスタは高性能計算のためのプラットフォームとして広がりつつある．
各SMPノードのプロセッサ性能が向上するにつれ，ノード間通信のコストを隠
すことが，SMPクラスタで高い性能を得るためにより重要となる．我々はリモー
トメモリ転送を用いたノード間通信と計算とをオーバーラップさせることによ
り，SMPクラスタ上でのプログラムの実行性能を向上させた．我々のリモート
メモリ転送機能は低オーバーヘッドであり，ホストプロセッサに負荷を与えな
いため，通信と計算をオーバーラップさせることにより性能を大きく向上させ
ることが可能となる．本稿では通信と計算のオーバーラップの方法およびその
結果に関して報告する．我々の実験では，いくつかのベンチマークにおいてノー
ド間通信にかかる時間のほとんどが隠蔽され，実行時間は最大で24%短縮され
た．

<P>
<DT><img src="icons/hand.right.gif" alt="">
<a href="SWoPP98-ARC-25.ps.gz">SWoPP98-ARC-25.ps.gz:</a>
松田 元彦, 田中 良夫, 久保田 和人, 手塚 宏史, 石川 裕, 佐藤 三久,
"Windows NT クラスタ上での Myrinet による通信の実現".
情報処理学会計算機アーキテクチャ研究会，Vol.98, No.70, pp.145--150, 1998.
<DD>
RWC PC クラスタ環境は, 現在 PC 上の Unix 系 OS 上で実現されている.
クラスタ環境の主な構成要素は, Myrinet 通信レイヤ PM,
マルチ・ユーザ／マルチ・ジョブ環境 SCore-D,
MPI の実装 MPICH-PM である.
このうち PM と MPI を Windows NT に移植し簡単な性能測定を行った.
移植に際して未解決の課題は Unix のシグナルの代替機能である.
性能面では, ユーザ・レベル通信を使用することから OS に依存しない
ハードウェアの通信性能が得られることを確認した.
また OS に依存するページの物理メモリへのロック性能も Unix 系 OS に
大差ない結果が得られた.

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="JSPP98-COMPaS.ps.gz"> JSPP98-COMPaS.ps.gz : </a>
田中 良夫，松田 元彦，安藤 誠，久保田 和人，佐藤 三久,
"COMPaS: Pentium Proを用いたSMPクラスタとその評価",
並列処理シンポジウム JSPP'98，IPSJ Symposium Series Vol. 98, No. 7,
pp. 343--350, 1998.
  <DD>
概要：
我々はPentium Proを4台搭載した対称型マルチプロセッサであるサーバ型PC8
台をMyrinetと100Base-T Ethernetで結合したSMPクラスタCOMPaSを構築した．
また，Myrinet上に低オーバヘッドで高いバンド幅を提供するリモートメモリ
転送に基づくユーザレベルの通信レイヤを開発した．本稿では，COMPaS上での
共有/分散融合プログラミングおよびその性能に関して報告する．COMPaSの性
能は，データの局所性(アクセスパターン)に依存する．主記憶に対して高いバ
ンド幅を必要とするプログラムにおいてはメモリバスの性能がネックとなるが，
データの局所性が高く，キャッシュを有効に利用することができる場合には高
い性能を得ることができる．
<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="JSPP98-LSSIM.ps.gz"> JSPP98-LSSIM.ps.gz : </a>
久保田 和人，板倉 憲一，佐藤 三久, 朴 泰祐,
"大規模データ並列プログラムの性能予測手法とNPB2.3の性能評価",
並列処理シンポジウム JSPP'98，IPSJ Symposium Series Vol. 98, No. 7,
pp. 71--78, 1998.
  <DD>
概要：
大規模な並列プログラムの挙動を予測する手法と、この手法
を用いたNAS Parallel Benchmark(NPB) ver 2.3の解析結果について述べる。
提案手法は、インスツルメントツールEXCITで取得した通信トレースファ
イルをINSPIREを用いて生成したネットワークシミュレータで
解析するもので、キャッシュサイズやネットワークのバンド幅
といった様々な条件を仮定した場合のプログラムの挙動を調べる
ことができる。
千台規模の並列プログラムを実用的な時間で予測できる。
実例として、NPB ver2.3のMGとLUを解析した。
MG、LUともにキャッシュサイズが小さくても、さほど性能低下
が起こらないことがわかった。
また、通信オーバーヘッドが、全体の性能に大きく
影響を与えることがわかった。

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="HOKKE98-HPC-9.ps.gz"> HOKKE98-HPC-9.ps.gz : </a>
田中 良夫，松田 元彦，佐藤 三久,
"SMPクラスタCOMPaSの性能評価",
情報処理学会ハイパフォーマンスコンピューティング研究会，Vol. 98，No. 18，
pp. 49--54，1998.
 <DD>
概要：
我々はPentium Proを4台搭載した対称型マルチプロセッサ(SMP:Symmetric
Multi-Processor)であるサーバ型PC8台をMyrinetと100Base-T Ethernetで結合
したSMPクラスタCOMPaSを構築した．また，Myrinet上に低オーバヘッドで高い
バンド幅を提供するリモートメモリ転送に基づくユーザレベルの通信レイヤを
設計・実装した．本稿ではいくつかのベンチマークプログラムによるCOMPaSの
性能を示す．COMPaSの性能は，データの局所性およびノード間通信の負荷の大
きさに依存する．主記憶へのアクセスが集中するようなプログラムにおいては
メモリバスの性能がネックとなるが，データの局所性が高く，キャッシュを有
効に利用することができる場合には高い性能を得ることができる．

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="SWoPP97-HPC-9.ps.gz"> SWoPP97-HPC-9.ps.gz : </a>
安藤 誠，田中 良夫，久保田 和人，松田 元彦，秋山 泰，佐藤 三久,
"Knapsack問題における共有メモリ型/分散メモリ型並列計算機の性能比較",
情報処理学会ハイパフォーマンスコンピューティング研究会，Vol. 97，No. 75，
pp. 49--54，1997.
 <DD>
概要：
Knapsack問題を分枝限定法で並列に解くプログラムをベンチマークとして用い
て，共有メモリ型と分散メモリ型の並列計算機の性能特性を解析・比較した．
多くの場合，共有メモリ型並列計算機のほうが良い性能を示したが，探索空間
内において，貪欲解から離れた幅広い範囲を走査しなければ最適解を得られな
いような難しい例題においては，分散メモリ型並列計算機が良い性能を示す場
合もみられた．

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="SWoPP97-HPC-11.ps.gz"> SWoPP97-HPC-11.ps.gz : </a>
田中 良夫，松田 元彦，安藤 誠，久保田 和人，佐藤 三久,
"SMPクラスタでの共有/分散融合プログラミング",
情報処理学会ハイパフォーマンスコンピューティング研究会，Vol. 97，No. 75，
pp. 61--66，1997.
 <DD>
概要：
SMPクラスタCOMPaS上での共有/分散融合プログラミング上の経験およびその初
期的な評価に関して報告する．

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="SWoPP97-ARC-10.ps.gz"> SWoPP97-ARC-10 </a>
松田 元彦, 手塚 宏史, 田中 良夫, 久保田 和人, 安藤 誠, 佐藤 三久,
"<B>SMPクラスタ向けネットワーク・インタフェース上AM通信</B>",
情報処理学会計算機アーキテクチャ研究会資料,
Vol.97, No.125, pp.55--60, 1997.
<DD>
概要：
SMP ノードを用いてクラスタを構成した場合,
メッセージ・パッシングによる通信では
各ノード上のスレッドに対してバッファ管理に排他制御が必要になり
バッファへのコピーが共有資源であるバスに負荷をかけるといった問題がある.
これらは通信プリミティブをリモート・メモリ転送にすることで
避けることができる.
本稿では, この実装にネットワーク・インタフェース (NI) 上の
アクティブ・メッセージ (AM) 通信を使用することを提案する.
データ転送は NI 上の DMA の起動によって実行されるので,
NI-NI 間で要求をやり取りする NI 上の AM にうまく適合する.
リモート・メモリ転送ベースの並列計算では明示的な同期が必要になるが,
この同期も NI 上の AM で実現する.
これはホスト-NI 間のオーバヘッドを削減するので高速に実装できる.

<P>
  <DT>  <img src="icons/hand.right.gif" alt=""> 
<a href="na-sympo97.ps.gz"> na-sympo97.ps.gz : </a>
佐藤 三久、Jens Gerlach、松田 元彦、西川 宜孝, 
"テンプレート機能による数値計算プログラミングとその性能", 
第26回数値解析シンポジウム予稿集, 1997.
 <DD>
概要：
C++のテンプレート機能を使ったプログラミングについて概観し、
その性能とプログラムの機能について従来のプログラムと比較する。

<P>
  <DT>  <img src="icons/hand.right.gif" alt=""> 
<a href="ipsj97.ps.gz">ipsj97.ps.gz</a>
松田 元彦, 石川 裕, 佐藤 三久,
"<B>C++テンプレートを使ったデータ並列処理ライブラリの効率化手法</B>",
情報処理学会論文誌, Vol.38, No.9, pp.1781--1789, 1997.
<DD>
概要：
C 言語のデータ並列拡張である C* 言語を C++ 言語の機能を利用することで
コンパイラに遜色ないライブラリとして実装することを試みた．
一般にアレイ演算等の低レベルなデータ並列ライブラリは
実装の容易さや移植性の点で優れるが，
演算に一時変数が必要になるなどコンパイラによる実装よりも性能が悪い．
本研究ではコンパイラに対する性能差の主要因と考えられる
演算中の一時変数除去と規則的通信パターン検出を可能にした．
一時変数除去には C++ 言語のテンプレート機能を使用する
テンプレート・クロージャの手法を提案する．
この手法では個々の演算は式を表現する木構造を生成するとともに
その構造をタイプ情報に反映させる．
このタイプ情報によりコンパイラは
式全体の値を効率良く評価するコードを生成可能である．
規則的通信パターン検出には規則的パターンを表す式に固有のタイプを与えることで，
C++ 言語のタイプ・システムによる検出を可能にした．
実装したライブラリを CM-5 上で 3 つの例題に対して性能比較した結果，
C* コンパイラに対して同等か 1.5 倍程度の実行時間に
抑えることが可能となった．

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="HOKKE97-ARC-12.ps.gz"> HOKKE97-ARC-12.ps.gz : </a>
久保田 和人, 板倉 憲一, 佐藤 三久, 朴 泰祐,
"インスツルメンテーションに基づく性能評価環境の高精度化",
情報処理学会計算機アーキテクチャ研究会，Vol. 123，No. 12，
pp. 67--72，1997.
<DD>
概要：
インスツルメンテーションによってプログラムの挙動を解析するツール
ExCit(ExC instrument tool)について述べ、ExCitによる実行時間予測
の精度を評価する。

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="HOKKE97-HPC-13.ps.gz"> HOKKE97-HPC-13.ps.gz : </a>
田中 良夫，久保田 和人，佐藤 三久，関口 智嗣，
"Collective通信を用いたデータ並列プログラムの性能予測",
情報処理学会ハイパフォーマンスコンピューティング研究会，Vol. 97，No. 21，
pp. 69--74，1997.
<DD>
概要：
collective通信の基本性能データベースを用いたデータ並列プログラムの性能
予測に関して，その方法および実験結果を報告する．

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="SWOPP96-HPC-4.ps.gz"> SWOPP96-HPC-4.ps.gz : </a>
田中 良夫，久保田 和人，佐藤 三久，関口 智嗣，
"並列アルゴリズムにおけるCollective通信の性能比較"，
情報処理学会ハイパフォーマンスコンピューティング研究会，Vol. 96，No. 81，
pp. 19--26，1997.
<DD>
概要：
いくつかの並列計算機上でのCollective通信の性能測定方法およびその結果に
関して報告する．

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="SWoPP96-HPC-21.ps.gz"> SWoPP96-HPC-21 </a>
松田 元彦, 佐藤 三久, 石川 裕,
"<B>テンプレート・クロージャによる並列アレイ・ライブラリ</B>",
情報処理学会ハイパフォーマンスコンピューティング研究会資料,
Vol.96, No.62", pp.123--128, 1996.
<DD>
概要：
テンプレート・クロージャは演算の評価を遅延し式全体として評価することで,
C++ においてアレイ・ライブラリ実装時に問題となる一時変数を除去する方法である.
この手法を拡張することで, HPC++ アレイ・クラスで採用される
アレイ・セクションによる表記やゴーストセルを持つ実装方法に対応できる.
また, 一時変数を除去する別手法である
式を表現するツリー構造をランタイムに作る方法と比較した場合,
よりオーバヘッドが少なく, より一般的な場合に適用可能である.

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="JSPP96a.ps.gz"> JSPP96a.ps.gz : </a>
久保田 和人,
"並列プログラムを多角的に表示する可視化ツール",
JSPP'96，pp.259-266, 1996.
<DD>
概要：
本可視化ツールは、(1)並列プログラムをユーザの視点から可視化、(2)可視化の
ためのデータをオンラインベースとオフラインベースの二つ方式で取得、(3)可視
化画面からオンラインデバッガへフィードバックをかける。という特徴を持つ。

<P>
  <DT> <img src="icons/hand.right.gif" alt="">
	<a href="IPSJ-96-HPC-61.ps.gz"> IPSJ-96-HPC-61.ps.gz : </a>
久保田 和人,
"並列プログラム可視化ツール",
情報処理学会計算機アーキテクチャ研究会，Vol. 96，No. 50，
pp.1--6，1996.
<DD>
概要：
並列プログラムをユーザの視点から表示できる可視化ツールを設計、開発した。

</dl>

<HR>
 <img src="icons/images/Balls/orange.gif" alt="|">
 <A HREF="http://www.rwcp.or.jp/lab/mpperf/"> 
   MP Perf. Lab.</A>
 <img src="../icons/images/Balls/orange.gif" alt="|">
 <A HREF="http://www.rwcp.or.jp/"> Home Page of RWCP</A>
<HR>
<!--#config timefmt="%d-%b-%y" -->
<!Last modified time is <!--#echo var="LAST_MODIFIED"--><br>
</BODY>
</HTML>
