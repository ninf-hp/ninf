The Computational Grid is a promising platform
for the deployment of various high-performance computing
applications.  A number of projects have addressed the
idea of software as a service on the network. These
systems usually implement client-server architectures
with many servers running on distributed Grid resources
and have commonly been referred to as Network-enabled
servers (NES). 
An important question is that of scheduling in this multi-client 
multi-server scenario. Note that in this context most
requests are computationally intensive as they are generated
by high-performance computing applications. 
The Bricks simulation framework has been developed and extensively 
used to evaluate scheduling strategies for NES systems. 
In this paper we first present recent developments and extensions to
the Bricks simulation models. We discuss a deadline scheduling
strategy that is appropriate for the multi-client multi-server case, 
and augment it with ``Load Correction'' and ``Fallback'' 
mechanisms which could improve the performance of the algorithm.
We then give Bricks simulation results. The results show that future NES 
systems should use deadline-scheduling with multiple fallbacks 
and it is possible to allow users to make a trade-off between 
failure-rate and cost by adjusting the level of conservatism of 
deadline-scheduling algorithms.
