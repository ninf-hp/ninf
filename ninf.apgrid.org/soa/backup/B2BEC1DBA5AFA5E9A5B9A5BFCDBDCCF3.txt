>>>>>>>>>> 1151014260
6/22 打ち合わせ
- 初版は VM クラスタの start/stop のみ行えればよい。
- VMware Roll は作成済み。
- VMware console はユーザには見せない。
--VMware player 起動には X の DISPLAY が必要。
--VNC サーバを X サーバとして VMware を立ち上げるなど。
- テーブル設計については適宜メールで打合せ
- VMware 起動/停止
--起動スクリプト
+++VM MAC アドレス決定
+++VM IP アドレス決定
+++insert-ethers ダンプを DB に入れる。
+++各ノード VM 起動指示
--停止スクリプト
+++vm_run で shutdown 実行
(VMware plkayer には当該コマンドは存在しない。
製品版を用いるかは要検討)
- テーブル構成

--予約テーブル
   開始時刻
   終了時刻
   N 個の以下の情報
        Rocks Appliance Type
        node 数
        ネットワーク
        ストレージ
   必要とするネットワーク
   必要とするストレージ

--VM テーブル
   MAC アドレス
   IP アドレス
   物理ノード ID

次回
 6/29(木) 10:00-



[[FrontPage]]
>>>>>>>>>> 1151266741
6/22 打ち合わせ
- 初版は VM クラスタの start/stop のみ行えればよい。
- VMware Roll は作成済み。
- VMware console はユーザには見せない。
--VMware player 起動には X の DISPLAY が必要。
--VNC サーバを X サーバとして VMware を立ち上げるなど。
- テーブル設計については適宜メールで打合せ
- VMware 起動/停止
--起動スクリプト
+++VM MAC アドレス決定
+++VM IP アドレス決定
+++insert-ethers ダンプを DB に入れる。
+++各ノード VM 起動指示
--停止スクリプト
+++vm_run で shutdown 実行
(VMware plkayer には当該コマンドは存在しない。
製品版を用いるかは要検討)
- テーブル構成

--予約テーブル
   開始時刻
   終了時刻
   N 個の以下の情報
        Rocks Appliance Type
        node 数
        ネットワーク
        ストレージ
   必要とするネットワーク
   必要とするストレージ

--VM テーブル
   MAC アドレス
   IP アドレス
   物理ノード ID

次回
 6/29(木) 10:00-
----
6/26
- cgi から SQL アクセスを行う実験
http://qac00/cgi-bin/vc_reg/teest.cgi
- 不安だったので、qac00/cgi-bin 以下は localhost からのみアクセス許可するよう修正
   <Directory "/var/www/cgi-bin">
       AllowOverride None
       Options None
       Order allow,deny
 -     Allow from all
 +     Allow from 127.0.0.1
   </Directory>
----


[[FrontPage]]
>>>>>>>>>> 1151486719
6/22 打ち合わせ
- 初版は VM クラスタの start/stop のみ行えればよい。
- VMware Roll は作成済み。
- VMware console はユーザには見せない。
--VMware player 起動には X の DISPLAY が必要。
--VNC サーバを X サーバとして VMware を立ち上げるなど。
- テーブル設計については適宜メールで打合せ
- VMware 起動/停止
--起動スクリプト
+++VM MAC アドレス決定
+++VM IP アドレス決定
+++insert-ethers ダンプを DB に入れる。
+++各ノード VM 起動指示
--停止スクリプト
+++vm_run で shutdown 実行
(VMware plkayer には当該コマンドは存在しない。
製品版を用いるかは要検討)
- テーブル構成

--予約テーブル
   開始時刻
   終了時刻
   N 個の以下の情報
        Rocks Appliance Type
        node 数
        ネットワーク
        ストレージ
   必要とするネットワーク
   必要とするストレージ

--VM テーブル
   MAC アドレス
   IP アドレス
   物理ノード ID

次回
 6/29(木) 10:00-
----
6/26
- cgi から SQL アクセスを行う実験
http://qac00/cgi-bin/vc_reg/teest.cgi
- 不安だったので、qac00/cgi-bin 以下は localhost からのみアクセス許可するよう修正
   <Directory "/var/www/cgi-bin">
       AllowOverride None
       Options None
       Order allow,deny
 -     Allow from all
 +     Allow from 127.0.0.1
   </Directory>
----
6/28
- テスト用ページ http://qac00/vc_reg/
----
[[FrontPage]]
>>>>>>>>>> 1151518889
6/22 打ち合わせ
- 初版は VM クラスタの start/stop のみ行えればよい。
- VMware Roll は作成済み。
- VMware console はユーザには見せない。
--VMware player 起動には X の DISPLAY が必要。
--VNC サーバを X サーバとして VMware を立ち上げるなど。
- テーブル設計については適宜メールで打合せ
- VMware 起動/停止
--起動スクリプト
+++VM MAC アドレス決定
+++VM IP アドレス決定
+++insert-ethers ダンプを DB に入れる。
+++各ノード VM 起動指示
--停止スクリプト
+++vm_run で shutdown 実行
(VMware plkayer には当該コマンドは存在しない。
製品版を用いるかは要検討)
- テーブル構成

--予約テーブル
   開始時刻
   終了時刻
   N 個の以下の情報
        Rocks Appliance Type
        node 数
        ネットワーク
        ストレージ
   必要とするネットワーク
   必要とするストレージ

--VM テーブル
   MAC アドレス
   IP アドレス
   物理ノード ID

次回
 6/29(木) 10:00-
----
6/26
- cgi から SQL アクセスを行う実験
http://qac00/cgi-bin/vc_reg/teest.cgi
- 不安だったので、qac00/cgi-bin 以下は localhost からのみアクセス許可するよう修正
   <Directory "/var/www/cgi-bin">
       AllowOverride None
       Options None
       Order allow,deny
 -     Allow from all
 +     Allow from 127.0.0.1
   </Directory>
----
6/28
- テスト用ページ http://qac00/vc_reg/
----
6/29 打ち合わせ
- IP アドレスは同時に稼働している仮想クラスタ間で重複させない
- テーブル vcresource の 'frontend' は 'gateway' が望ましい
- insert-ethers -dump のダンプ出力の形式で insert-etehrs を実行すると
クラスタ DB への登録が可能。これを用いて仮想クラスタの DB 設定を行う。
-- rack には仮想クラスタ番号を指定する
- MySQL クラスタ DB へのアクセスは、root でなく apache が利用可能ではないか。
-- apache ではパスワード指定は不要。
-- ただし、テーブル生成はできない。
-- テーブル変更なら可能か？要確認。
- MySQL のライセンスは？ GPL で配布しなければならない？要確認。
- VMware Roll の入ったマシンをテスト用に準備。
-- cron 起動により仮想クラスタ起動/停止を行うスクリプトを作る。
- 夏休みの日程が決まったら連絡
----
7/6 打ち合わせ
----
7/13 打ち合わせ
----
7/20 打ち合わせ
----
[[FrontPage]]
>>>>>>>>>> 1151877250
6/22 打ち合わせ
- 初版は VM クラスタの start/stop のみ行えればよい。
- VMware Roll は作成済み。
- VMware console はユーザには見せない。
--VMware player 起動には X の DISPLAY が必要。
--VNC サーバを X サーバとして VMware を立ち上げるなど。
- テーブル設計については適宜メールで打合せ
- VMware 起動/停止
--起動スクリプト
+++VM MAC アドレス決定
+++VM IP アドレス決定
+++insert-ethers ダンプを DB に入れる。
+++各ノード VM 起動指示
--停止スクリプト
+++vm_run で shutdown 実行
(VMware plkayer には当該コマンドは存在しない。
製品版を用いるかは要検討)
- テーブル構成

--予約テーブル
   開始時刻
   終了時刻
   N 個の以下の情報
        Rocks Appliance Type
        node 数
        ネットワーク
        ストレージ
   必要とするネットワーク
   必要とするストレージ

--VM テーブル
   MAC アドレス
   IP アドレス
   物理ノード ID

次回
 6/29(木) 10:00-
----
6/26
- cgi から SQL アクセスを行う実験
http://qac00/cgi-bin/vc_reg/teest.cgi
- 不安だったので、qac00/cgi-bin 以下は localhost からのみアクセス許可するよう修正
   <Directory "/var/www/cgi-bin">
       AllowOverride None
       Options None
       Order allow,deny
 -     Allow from all
 +     Allow from 127.0.0.1
   </Directory>
----
6/28
- テスト用ページ http://qac00/vc_reg/
----
6/29 打ち合わせ
- IP アドレスは同時に稼働している仮想クラスタ間で重複させない
- テーブル vcresource の 'frontend' は 'gateway' が望ましい
- insert-ethers -dump のダンプ出力の形式で insert-etehrs を実行すると
クラスタ DB への登録が可能。これを用いて仮想クラスタの DB 設定を行う。
-- rack には仮想クラスタ番号を指定する
- MySQL クラスタ DB へのアクセスは、root でなく apache が利用可能ではないか。
-- apache ではパスワード指定は不要。
-- ただし、テーブル生成はできない。
-- テーブル変更なら可能か？要確認。→設定／変更可能なことを確認(7/3)
- MySQL のライセンスは？ GPL で配布しなければならない？要確認。
- VMware Roll の入ったマシンをテスト用に準備。
-- cron 起動により仮想クラスタ起動/停止を行うスクリプトを作る。
- 夏休みの日程が決まったら連絡
----
7/6 打ち合わせ
----
7/13 打ち合わせ
----
7/20 打ち合わせ
----
[[FrontPage]]
>>>>>>>>>> 1152716546
6/22 打ち合わせ
- 初版は VM クラスタの start/stop のみ行えればよい。
- VMware Roll は作成済み。
- VMware console はユーザには見せない。
--VMware player 起動には X の DISPLAY が必要。
--VNC サーバを X サーバとして VMware を立ち上げるなど。
- テーブル設計については適宜メールで打合せ
- VMware 起動/停止
--起動スクリプト
+++VM MAC アドレス決定
+++VM IP アドレス決定
+++insert-ethers ダンプを DB に入れる。
+++各ノード VM 起動指示
--停止スクリプト
+++vm_run で shutdown 実行
(VMware plkayer には当該コマンドは存在しない。
製品版を用いるかは要検討)
- テーブル構成

--予約テーブル
   開始時刻
   終了時刻
   N 個の以下の情報
        Rocks Appliance Type
        node 数
        ネットワーク
        ストレージ
   必要とするネットワーク
   必要とするストレージ

--VM テーブル
   MAC アドレス
   IP アドレス
   物理ノード ID

次回
 6/29(木) 10:00-
----
6/26
- cgi から SQL アクセスを行う実験
http://qac00/cgi-bin/vc_reg/teest.cgi
- 不安だったので、qac00/cgi-bin 以下は localhost からのみアクセス許可するよう修正
   <Directory "/var/www/cgi-bin">
       AllowOverride None
       Options None
       Order allow,deny
 -     Allow from all
 +     Allow from 127.0.0.1
   </Directory>
----
6/28
- テスト用ページ http://qac00/vc_reg/
----
6/29 打ち合わせ
- IP アドレスは同時に稼働している仮想クラスタ間で重複させない
- テーブル vcresource の 'frontend' は 'gateway' が望ましい
- insert-ethers -dump のダンプ出力の形式で insert-etehrs を実行すると
クラスタ DB への登録が可能。これを用いて仮想クラスタの DB 設定を行う。
-- rack には仮想クラスタ番号を指定する
- MySQL クラスタ DB へのアクセスは、root でなく apache が利用可能ではないか。
-- apache ではパスワード指定は不要。
-- ただし、テーブル生成はできない。
-- テーブル変更なら可能か？要確認。→設定／変更可能なことを確認(7/3)
- MySQL のライセンスは？ GPL で配布しなければならない？要確認。
- VMware Roll の入ったマシンをテスト用に準備。
-- cron 起動により仮想クラスタ起動/停止を行うスクリプトを作る。
- 夏休みの日程が決まったら連絡
----
7/6 打ち合わせ
- 仮想ノード立ち上げ手順の確認
++ DISPLAY を設定 (frontend の vnc)
++ nvram を /opt/vmplayer/bios から vmware にコピー
++ vmware_control.sh を呼び出し、vmware 設定ファイル .vmx を生成
++ DHCP に IP アドレス/MAC アドレスを設定
++ フロントエンド vmware 起動
++ フロントエンド vmware 上で insert-ethers 実行
++ compute vmware 起動
- 仮想ノード停止は、仮想ノードに対応する vmware プロセスに signal を送る
- VMware のライセンス
-- 仮想イメージ作成/配布については問題ない
-- 仮想計算機を他者に提供することに問題はないか。要確認。
- VMware でディスクタイプを scsi にすると問題が起こる場合があるらしい。ide にするとよい。
- GSXServer のオープンソース版が存在する
- 各ノードの仮想ディスクイメージを copy-on-write で共有できるとよい。ファイルシステムレベルで実現できるなら xen でも利用可。
----
7/13 打ち合わせ
----
7/20 打ち合わせ
----
[[FrontPage]]
>>>>>>>>>> 1158773385
操作方法

+ ターミナルから ssh でフロントエンドノードにログインする。
--ssh ポートフォワーディングにより、フロントエンドノードの web サーバ(ポート80) にアクセスするため。
--また、ターミナルから iscsi ターゲットに ssh ログインできる準備をしておく。
ブラウザに表示される公開鍵を iscsi ターゲットに設定する必要があるため(後述)。
+ フロントエンドノードの /vc/index.html にアクセスする。
--例えば、ローカルホストの 8080 番にポートフォワーディングされている場合:
 http://localhost:8080/vc/
-- 以下のメニューが選択可能
--- 'iscsi target setup'
--- 'registration page'
--- 'registration page(iscsi)'
--- 'tables' (←デバッグ用)
+ メニュー 'iscsi target setup' を選択し、iscsi ターゲットの IP アドレスを設定する。
--このとき、フロントエンドノードの公開鍵が表示されるので、この公開鍵を
iscsi ターゲットの ~root/.ssh/authorized_keys に追加する。
これにより、クラスタ側から iscsi ターゲットへのアクセスが可能となる。
+ メニュー 'registration page' を選択し、仮想クラスタを予約する。
--利用開始時刻/使用終了時刻および、使用する(compute)ノード数を設定する。
 注意: iscsi を使用する場合、このメニューでの予約後に iscsi マウントを指定する。
 iscsi マウント設定前に仮想ノードが起動しないように使用開始時刻を設定すること。
 また、ここでの予約内容は変更できない(変更するcgiインターフェースは未整備)ので注意。
+ メニュー 'registration page(iscsi)' を選択し、iscsi マウントを設定する。
--仮想クラスタの各ノードに対し、マウントポイント、iscsi ターゲット(リストから選択)、使用容量を
設定する。
+ 利用開始時刻として指定した時刻になるまで待つ。

tips:
- 仮想クラスタの起動/停止は 5 分間隔の cron 実行によって行っている。
時刻を無視して特定の仮想クラスタを起動/停止したい場合には、
フロントエンドノード上で以下を実行する。
++ crontab -e で cron 起動を停止する(/opt/vc/sbin/vc_cron.py 呼び出しを削除/コメントアウト)。
++ /opt/vc/sbin/vc_ct.py で仮想クラスタを起動/停止する。
--- 指定 rack 番号の仮想クラスタを起動
 /opt/vc/sbin/vc_ctl.py start <rack番号>
--- 指定 rack 番号の仮想クラスタを停止
 /opt/vc/sbin/vc_ctl.py stop <rack番号>
- VLAN 切り替え
-- フロントエンドノード上で以下のコマンドを実行すると、全仮想ノード / iscsi ターゲットの VLAN 切り替えが可能。
--- VLAN 設定
 /opt/vc/sbin/grivon-vlan.py add <rack番号>
--- VLAN 解除
 /opt/vc/sbin/grivon-vlan.py del <rack番号>
- rack 番号はメニュー 'registration page(iscsi)' で確認する。
>>>>>>>>>> 1161820802
操作方法

+ ターミナルから ssh でフロントエンドノードにログインする。
--ssh ポートフォワーディングにより、フロントエンドノードの web サーバ(ポート80) にアクセスするため。
--また、ターミナルから iscsi ターゲットに ssh ログインできる準備をしておく。
ブラウザに表示される公開鍵を iscsi ターゲットに設定する必要があるため(後述)。
+ フロントエンドノードの /vc/index.html にアクセスする。
--例えば、ローカルホストの 8080 番にポートフォワーディングされている場合:
 http://localhost:8080/vc/
-- 以下のメニューが選択可能
--- 'iscsi target setup' iscsi ターゲットのアドレスを登録する
--- 'Regist a New Virtual Cluster' 新しい仮想クラスタを追加する
--- 'View Registration' 登録状態を参照する
--- 'Show All Tables' (←デバッグ用)
+ メニュー 'iscsi target setup' を選択し、iscsi ターゲットの IP アドレスを設定する。
--このとき、フロントエンドノードの公開鍵が表示されるので、この公開鍵を
iscsi ターゲットの ~root/.ssh/authorized_keys に追加する。
これにより、クラスタ側から iscsi ターゲットへのアクセスが可能となる。
+ メニュー 'Regist a New Virtual Cluster' を選択し、仮想クラスタを予約する。以下の設定を行う。
--利用開始時刻/使用終了時刻
開始時刻は予約時点での時刻より前であってもよい。
--使用するゲートウェイノード数
--非ゲートウェイノード数
--各ノードの使用メモリ、使用ディスク
--iscsiマウントポイント
+ メニュー 'View Registration' を選択し、予約状態を参照することができる。
--現在停止中の仮想クラスタ(未実行あるいは停止済み)はこのメニューから削除できる。
+ 利用開始時刻として指定した時刻になるまで待つ。

tips:
- 仮想クラスタの起動/停止は 1 分間隔の cron 実行によって行っている。
時刻を無視して特定の仮想クラスタを起動/停止したい場合には、
フロントエンドノード上で以下を実行する。
++ crontab -e で cron 起動を停止する(/opt/vc/sbin/vc_cron.py 呼び出しを削除/コメントアウト)。
++ /opt/vc/sbin/vc_ct.py で仮想クラスタを起動/停止する。
--- 指定 rack 番号の仮想クラスタを起動
 /opt/vc/sbin/vc_ctl.py start <rack番号>
--- 指定 rack 番号の仮想クラスタを停止
 /opt/vc/sbin/vc_ctl.py stop <rack番号>
- VLAN 切り替え
-- フロントエンドノード上で以下のコマンドを実行すると、全仮想ノード / iscsi ターゲットの VLAN 切り替えが可能。
--- VLAN 設定
 /opt/vc/sbin/grivon-vlan.py add <rack番号>
--- VLAN 解除
 /opt/vc/sbin/grivon-vlan.py del <rack番号>
- rack 番号はメニュー 'View Registration' で確認する。
>>>>>>>>>> 1163016707
操作方法

+ ターミナルから ssh でフロントエンドノードにログインする。
--ssh ポートフォワーディングにより、フロントエンドノードの web サーバ(ポート80) にアクセスするため。
--また、ターミナルから iscsi ターゲットに ssh ログインできる準備をしておく。
ブラウザに表示される公開鍵を iscsi ターゲットに設定する必要があるため(後述)。
+ フロントエンドノードの /vc/index.html にアクセスする。
--例えば、ローカルホストの 8080 番にポートフォワーディングされている場合:
 http://localhost:8080/vc/
-- 以下のメニューが選択可能
--- 'iscsi target setup' iscsi ターゲットのアドレスを登録する
--- 'Regist a New Virtual Cluster' 新しい仮想クラスタを追加する
--- 'View Registration' 登録状態を参照する
--- 'Show All Tables' (←デバッグ用)
+ メニュー 'iscsi target setup' を選択し、iscsi ターゲットの IP アドレスを設定する。
--このとき、フロントエンドノードの公開鍵が表示されるので、この公開鍵を
iscsi ターゲットの ~root/.ssh/authorized_keys に追加する。
これにより、クラスタ側から iscsi ターゲットへのアクセスが可能となる。
+ メニュー 'Regist a New Virtual Cluster' を選択し、仮想クラスタを予約する。以下の設定を行う。
--利用開始時刻/使用終了時刻
開始時刻は予約時点での時刻より前であってもよい。
--使用するゲートウェイノード数
--非ゲートウェイノード数
--各ノードの使用メモリ、使用ディスク
--iscsiマウントポイント
+ メニュー 'View Registration' を選択し、予約状態を参照することができる。
--現在停止中の仮想クラスタ(未実行あるいは停止済み)はこのメニューから削除できる。
+ 利用開始時刻として指定した時刻になるまで待つ。

tips:
- 仮想クラスタの起動/停止は 1 分間隔の cron 実行によって行っている。
時刻を無視して特定の仮想クラスタを起動/停止したい場合には、
フロントエンドノード上で以下を実行する。
++ crontab -e で cron 起動を停止する(/opt/vc/sbin/vc_cron.py 呼び出しを削除/コメントアウト)。
++ /opt/vc/sbin/vc_ct.py で仮想クラスタを起動/停止する。
--- 指定 rack 番号の仮想クラスタを起動
 /opt/vc/sbin/vc_ctl.py start <rack番号>
--- 指定 rack 番号の仮想クラスタを停止
 /opt/vc/sbin/vc_ctl.py stop <rack番号>
- 仮想クラスタの削除~
'View Registration' ページから仮想クラスタを選択し、'delete' ボタンを押すと
当該仮想クラスタを DB から削除できる。
ただし、削除は当該クラスタが停止しているときにしかできない。
動作中の仮想クラスタを削除したい場合には以下の手順を実施する。
++ crontab -e で cron 起動を停止する ( '#' でコメントアウト)
++ /opt/vc/sbin/vc_ctl.py stop <番号> で当該仮想クラスタを停止する。
++ 'View Registration' ページから仮想クラスタを削除する。
++ crontab -e で cron 起動を再開する (コメントアウトを元に戻す)
- VLAN 切り替え
-- フロントエンドノード上で以下のコマンドを実行すると、全仮想ノード / iscsi ターゲットの VLAN 切り替えが可能。
--- VLAN 設定
 /opt/vc/sbin/grivon-vlan.py add <rack番号>
--- VLAN 解除
 /opt/vc/sbin/grivon-vlan.py del <rack番号>
- rack 番号はメニュー 'View Registration' で確認する。
>>>>>>>>>> 1164903206
beta 版 操作方法

+ ターミナルから ssh でフロントエンドノードにログインする。
--ssh ポートフォワーディングにより、フロントエンドノードの web サーバ(ポート80) にアクセスするため。
--また、ターミナルから iscsi ターゲットに ssh ログインできる準備をしておく。
ブラウザに表示される公開鍵を iscsi ターゲットに設定する必要があるため(後述)。
+ フロントエンドノードの /vc/index.html にアクセスする。
--例えば、ローカルホストの 8080 番にポートフォワーディングされている場合:
 http://localhost:8080/vc/
-- 以下のメニューが選択可能
--- 'iscsi target setup' iscsi ターゲットのアドレスを登録する
--- 'Regist a New Virtual Cluster' 新しい仮想クラスタを追加する
--- 'View Registration' 登録状態を参照する
--- 'Show All Tables' (←デバッグ用)
+ メニュー 'iscsi target setup' を選択し、iscsi ターゲットの IP アドレスを設定する。
--このとき、フロントエンドノードの公開鍵が表示されるので、この公開鍵を
iscsi ターゲットの ~root/.ssh/authorized_keys に追加する。
これにより、クラスタ側から iscsi ターゲットへのアクセスが可能となる。
+ メニュー 'Regist a New Virtual Cluster' を選択し、仮想クラスタを予約する。以下の設定を行う。
--利用開始時刻/使用終了時刻
開始時刻は予約時点での時刻より前であってもよい。
--使用するゲートウェイノード数
--非ゲートウェイノード数
--各ノードの使用メモリ、使用ディスク
--iscsiマウントポイント
+ メニュー 'View Registration' を選択し、予約状態を参照することができる。
--現在停止中の仮想クラスタ(未実行あるいは停止済み)はこのメニューから削除できる。
+ 利用開始時刻として指定した時刻になるまで待つ。

tips:
- 仮想クラスタの起動/停止は 1 分間隔の cron 実行によって行っている。
時刻を無視して特定の仮想クラスタを起動/停止したい場合には、
フロントエンドノード上で以下を実行する。
++ crontab -e で cron 起動を停止する(/opt/vc/sbin/vc_cron.py 呼び出しを削除/コメントアウト)。
++ /opt/vc/sbin/vc_ct.py で仮想クラスタを起動/停止する。
--- 指定 rack 番号の仮想クラスタを起動
 /opt/vc/sbin/vc_ctl.py start <rack番号>
--- 指定 rack 番号の仮想クラスタを停止
 /opt/vc/sbin/vc_ctl.py stop <rack番号>
- 仮想クラスタの削除~
'View Registration' ページから仮想クラスタを選択し、'delete' ボタンを押すと
当該仮想クラスタを DB から削除できる。
ただし、削除は当該クラスタが停止しているときにしかできない。
動作中の仮想クラスタを削除したい場合には以下の手順を実施する。
++ crontab -e で cron 起動を停止する ( '#' でコメントアウト)
++ /opt/vc/sbin/vc_ctl.py stop <番号> で当該仮想クラスタを停止する。
++ 'View Registration' ページから仮想クラスタを削除する。
++ crontab -e で cron 起動を再開する (コメントアウトを元に戻す)
- VLAN 切り替え
-- フロントエンドノード上で以下のコマンドを実行すると、全仮想ノード / iscsi ターゲットの VLAN 切り替えが可能。
--- VLAN 設定
 /opt/vc/sbin/grivon-vlan.py add <rack番号>
--- VLAN 解除
 /opt/vc/sbin/grivon-vlan.py del <rack番号>
- rack 番号はメニュー 'View Registration' で確認する。

--------

仮想 frontend 対応

仮想 frontend 化と同時に以下の修正を行う。
+ 現状で、iscsi ターゲットのマウントは各仮想ノードが行っているが、仮想 frontend のみ iscsi ターゲットのマウントを行うこととする。その他のノードは NFS クライアントとして当該領域をマウントする

このためにデータベーステーブルを一部変更する。

+ ノードに関連づけていた iscsi マウントポイント情報 (vciscsi) を vcregist&appliance に関連づける。
+ vcregist&appliance に関連づけた nfsclient 情報を設ける。
+ vcregist&appliance に関連づけた nfsserver 情報を設ける。

