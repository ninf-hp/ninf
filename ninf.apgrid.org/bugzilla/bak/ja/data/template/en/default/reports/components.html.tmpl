#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.09
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1022787502',
        'name' => 'reports/components.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "<!-- 1.0\@bugzilla.org -->\n";
    $output .=  "\n\n";
    $output .=  "\n";
    
    # CAPTURE
    $stash->set('filtered_product', do {
        my $output = '';
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
        $output;
    });
    
    $output .=  $context->process('global/header.html.tmpl', { 'title' => ("Components for " . $stash->get('product')), 'h2' => $stash->get('filtered_product') });
    $output .=  "\n";
    if ($stash->get(['Param', [ 'useqacontact' ]])) {
    $stash->set('numcols', 3);
    }
    else {
    $stash->set('numcols', 2);
    }
    
    $output .=  "\n";
    if ($stash->get(['components', 0, 'size', 0]) eq 0) {
    $output .=  "\n  This product has no components.";
    }
    else {
    $output .=  "\n  <table>\n    <tr>\n      <th align=\"left\">Component</th>\n      <th align=\"left\">Default Owner</th>";
    if ($stash->get(['Param', [ 'useqacontact' ]])) {
    $output .=  "\n        <th align=\"left\">Default QA Contact</th>";
    }
    
    $output .=  "\n    </tr>\n";
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('components');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'comp'} = $value;
    $output .=  $context->include('describe_comp');;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    <tr>\n      <td colspan=\"";
    $output .=  $stash->get('numcols');
    $output .=  "\">\n        <hr>\n      </td>\n    </tr>\n  </table>";
    }
    
    $output .=  "\n";
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'describe_comp' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        $output .=  "\n  <tr>\n    <td colspan=\"";
        $output .=  $stash->get('numcols');
        $output .=  "\">\n      <hr>\n    </td>\n  </tr>\n  <tr>\n    <td rowspan=\"2\">\n      <a name=\"";
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['comp', 0, 'name', 0]);
            
            &$filter($output);
        };
        
        $output .=  "\">";
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['comp', 0, 'name', 0]);
            
            &$filter($output);
        };
        
        $output .=  "</a>\n    </td>\n    <td>\n      <a href=\"mailto:";
        $output .=  $stash->get(['comp', 0, 'initialowner', 0]);
        $output .=  $stash->get(['Param', [ 'emailsuffix' ]]);
        $output .=  "\">";
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['comp', 0, 'initialowner', 0]);
            
            &$filter($output);
        };
        
        $output .=  "</a>\n    </td>";
        if ($stash->get(['Param', [ 'useqacontact' ]])) {
        $output .=  "\n      <td>\n        <a href=\"mailto:";
        $output .=  $stash->get(['comp', 0, 'initialqacontact', 0]);
        $output .=  $stash->get(['Param', [ 'emailsuffix' ]]);
        $output .=  "\">";
        $output .=  $stash->get(['comp', 0, 'initialqacontact', 0]);
        $output .=  "</a>\n      </td>";
        }
        
        $output .=  "\n  </tr>\n  <tr>\n    <td colspan=\"";
        $output .=  $stash->get('numcols') - 1;
        $output .=  "\">";
        $output .=  $stash->get(['comp', 0, 'description', 0]);
        $output .=  "\n    </td>\n  </tr>";
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
    },
});
