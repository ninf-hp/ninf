%!PS-Adobe-2.0
%%Creator: dvipsk 5.58e2 Copyright 1986, 1994 Radical Eye Software
%%Title: pas.dvi
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Helvetica-Bold
%%EndComments
%DVIPSCommandLine: dvips pas
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1996.12.27:1606
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (pas.dvi)
@start /Fa 42 122 df<1560EC01E0EC03C0EC0700140E5C143C5C5C495A495A13075C
49C7FC5B131E5B137C137813F85B12015B12035B1207A25B120FA290C8FC5AA2121E123E
A3123C127CA31278A212F8A35AAF12701278A21238A2123C121CA27EA27E6C7E12011B4A
75B71F>40 D<14301438A28080A2140F801580A2140315C0A4140115E0A81403A415C0A3
1407A31580140FA315005CA3141E143EA2143C147CA25CA25C13015C13035C13075C130F
91C7FC131E133E133C5B5B485AA2485A485A48C8FC121E5A12705A5A1B4A7EB71F>I<EA
0380EA0FE0121FA5EA0760120013E013C0A2120113801203EA07001206120E5A5A5A5A5A
0B177A8718>44 D<B51280A46C1300110579911B>I<121C127F12FFA412FE1238080877
8718>I<161C163CA2167C16FCA21501821503A2ED077E150F150E151CA21538A2157015
F015E0EC01C0A2913803807F82EC0700A2140E141E141C5CA25CA25C49B6FCA25B913880
003F49C7EA1F80A2130E131E131C133C13385B13F05B12011203D80FF0EC3FC0D8FFFE90
3807FFFEA32F367BB539>65 D<DB1FF013C09238FFFC010203EBFF03913A0FF00F878091
393F8003CF9139FE0001EF4948EB00FFD903F01500D90FE080495A49488091C8123E137E
13FE485A4848153CA2485AA248481538A2485A94C7FC123F5BA3127F90CBFCA412FEA2EE
03C0A25F127E160794C7FC5E160E007F151E6C5D5E6C6C147016F06C6C495A6C6CEB07C0
6C6C49C8FC6C6C133E6CB413FC90387FFFF0011F13C0D903FEC9FC323775B437>67
D<0107B712F05B18E0903A003F80001F1707170392C7FC17015C18C0147EA214FEA24A13
0EA20101EC1E03041C13804A91C7FC163C13035E9138F001F891B5FC5B5EECE001150013
0F5E5C1707011F01015BEEC00E0280141E92C7121C133F173C91C812381778495DA2017E
14014C5A01FE14074C5A49141F00014AB45A007FB7FCB8FC94C7FC34337CB234>69
D<92391FE001809238FFF8030207EBFE07913A1FF01F0F0091393F80079F9139FE0003DF
D901F86DB4FCD907F05C49481300495A4948147E49C8127C137E13FE485A48481578A248
5AA248481570A2485A94C7FC123F5BA3127F90CBFCA400FE91383FFFFCA25F9238003F80
94C7FCA2007E5DA2167EA2007F15FE7E5E6C6C1301A26C6C495A6D13076C6CEB0F786C6C
133E3A00FF01FC3090387FFFF0011F01C0C8FCD903FEC9FC313775B43B>71
D<0107B548B512C0495CA2903C003FC0000FF0004B5CA292C75BA24A141F60147EA202FE
143F95C7FC5CA201015D177E5CA2010315FE5F5C91B6FC5B5F9138E00001A2010F14035F
5CA2011F14075F5CA2013F140F5F91C7FCA249141F5F137EA201FE143F94C8FC5B00015D
3B7FFFF01FFFFCB55BA23A337BB239>I<010FB51280A216009038003FC05DA292C7FCA2
5CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA213
3FA291C8FCA25BA2137EA213FEA25B1201B512F8A25C21337BB21E>I<0107B512C05BA2
9026003FC0C7FC5DA292C8FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A2
5CA2130FA25C17E0011F140117C05C1603013F1580160791C7FCEE0F005B5E017E143EA2
01FE5CED01FC4913030001EC1FF8007FB6FCB7FC5E2B337CB230>76
D<902607FFC0ED7FFC4917FF81D9003F4B1300611803023BED077CA2027BED0EFC610273
151C1838DAF1F01439F071F014E118E10101ED01C36102C1EC0383EF070301031607050E
5BEC80F8171C0107ED380F6102001470A249EDE01FDC01C090C7FC130EEE0380011E017C
5C933807003E011C140EA2013C4A137E187C01385C5E017816FC6F485B1370ED3FC001F0
EC80016000011500D807F81503277FFF803E90B512C0B5EB3C01151C46337BB245>I<90
2607FF8090383FFFC0496D5BA2D9001F913803F8004A6C6D5A6060EC3BF0027B140360EC
71F8A202F11407DAF0FC91C7FC14E0A20101017E5B170E14C0810103151EEE801CEC801F
A20107ECC03C030F1338140016E049010713781770010E14F01503011E15F0705A011C13
01A2013C14FD03005B133816FF0178147F5F0170143FA213F070C8FC1201EA07F8267FFF
807FB5140EA23A337BB239>I<ED1FE0913801FFFC913807E03F91391F800FC091393E00
03E002F8EB01F0495A4948EB00F8494814FC4948147C49C8127E133E017E153E49153F48
5AA2485A12075B120F5B121F177F5B123FA348C912FEA4EE01FC12FEEE03F8A217F01607
17E0160F007E16C0EE1F80A2EE3F006C157E5E5E6C6C495A000F4A5A6D495A0007EC1F80
6C6C013EC7FCD801F813FC39007E07F090383FFF80D907FCC8FC303775B43B>I<0107B6
12C04915F883903A003F8001FEEE003FEF1F8092C713C0170F5C18E0147EA214FEEF1FC0
5CA201011680173F4A1500177E010315FE5F4AEB03F8EE07E00107EC3FC091B6C7FC16F8
02E0C9FC130FA25CA2131FA25CA2133FA291CAFCA25BA2137EA213FEA25B1201387FFFF0
B5FCA233337CB234>I<913901FC018091380FFF03023F13C791387E07EF903A01F801FF
0049487E4A7F495A4948133E131F91C7FC5B013E143CA3137E1638A293C7FC137FA26D7E
14E014FE90381FFFC06D13F86D7F01017F6D6C7E020F7F1400153F6F7E150FA4120EA200
1E5D121CA2151F003C92C7FCA2003E143E5D127E007F5C6D485A9038C007E039F3F80FC0
00F0B5C8FC38E03FFC38C00FF029377AB42B>83 D<0003B812C05A1880903AF800FC003F
260FC001141F0180150F01005B001EEE07001403121C003C4A5BA200380107140E127800
705CA2020F141E00F0161CC74990C7FCA2141FA25DA2143FA292C9FCA25CA2147EA214FE
A25CA21301A25CA21303A25CA21307A25C497E001FB512F05AA2323374B237>I<B53CC0
3FFFF003FFF8601480280FF00001FCC7EA7F806C484AEC3E00193CA21938611503611507
4E5A030F140361031D4AC7FCA2DB38FC130EA203705C15F06C6C01E05C140103C05CDA03
8014F060DA0700130160020E4A5AA24A4AC8FCA24A140E147802705C5C5FD9F1C0147817
70D9F3805CA201F7C7EA7FC0A201FE5DA26C4892C9FCA249147E5B167C5B167849147045
3570B24D>87 D<EB03F0EB0FF890383E1C6090387C0FF0EBF807EA01F0EA03E00007EB03
E0EA0FC0A2381F800715C0EA3F00A2140F481480127EA2141F00FE14005A1506EC3F07EC
3E0F150E147E007C141EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF0
3901F003C0202278A027>97 D<137EEA0FFE121F5B1200A35BA21201A25BA21203A25BA2
1207A2EBC3E0EBCFF8380FDC3EEBF81F497E01E01380EA1FC0138015C013005AA2123EA2
007E131F1580127CA2143F00FC14005AA2147EA25CA2387801F85C495A6C485A495A6C48
C7FCEA0FFCEA03F01A3578B323>I<14FCEB07FF90381F078090383E03C0EBFC013801F8
033803F0073807E00F13C0120F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14
C0EC01E0A2EC03C06CEB0F80EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023>
I<ED0FC0EC03FFA21680EC001FA31600A25DA2153EA2157EA2157CA215FCA2903803F0F8
EB0FF8EB3E1DEB7C0F496C5AEA01F0EA03E000071303D80FC05BA2381F8007A2D83F005B
A2140F5A007E5CA2141F12FE4891C7FC1506EC3F075DEC3E0E147E007C141EECFE1CEB01
FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003C0223578B327>I<EB03F8
EB0FFEEB3E0F9038F807803801F003EA03E0EA07C0120FEA1F801407D83F0013005C007E
133EEB03F8387FFFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC1F0000
3C133E6C13F8380F03E03807FF80D801FCC7FC1A2277A023>I<151FED7FC0EDF0E00201
13F0EC03E3A2EC07C316E0EDC1C091380FC0005DA4141F92C7FCA45C143E90381FFFFEA3
D9007EC7FC147CA414FC5CA513015CA413035CA413075CA3130FA25CA3131F91C8FCA35B
133E1238EA7E3CA2EAFE7812FC485AEA78E0EA3FC0000FC9FC244582B418>I<143FECFF
80903803E1E6903807C0FF90380F807FEB1F00133E017E133F49133EA24848137EA24848
137CA215FC12074913F8A21401A2D80FC013F0A21403120715E01407140F141F3903E03F
C00001137FEBF0FF38007FCF90381F0F801300141FA21500A25C143E1238007E137E5C00
FE5B48485A387803E0387C0F80D81FFFC7FCEA07F820317CA023>I<EB0FC0EA03FFA25C
EA001FA391C8FCA25BA2133EA2137EA2137CA213FCA29038F83F80ECFFE03901FBE0F090
38FF80F8EC007849137C485A5B5BA2484813FC5D5BA2000F13015D1380A2001F13035DEB
0007EDC0C048ECC1E0020F13C0003E1481A2007E1483ED0380007C1407160000FC140E15
1E48EB07F80070EB01F023357BB327>I<EB0180EB07E0A2130FEB07C0EB038090C7FCAB
EA01F0EA03FCEA0F1E120E121C123C1238EA783E1270A2137EEAF07CEA60FCC65AA21201
5BA212035BA2000713C0EBC1E0000F13C01381A21383EB038013071400130E131EEA07F8
EA01F013337AB118>I<1538157C15FCA315701500AB143EECFF80903801E3C090380383
E0EB0701130FEB0E03131C133C133814071378013013C01300140FA21580A2141FA21500
A25CA2143EA2147EA2147CA214FCA25CA21301A25CA213035C1238387E07C0A238FE0F80
4848C7FCEAF83EEA787CEA3FF0EA0F801E4283B118>I<EB0FC0EA01FF5A5CEA001FA391
C7FCA25BA2133EA2137EA2137CA213FCA2491378EC01FE0001EB078FEC0E0F9038F01C3F
143800031370ECE03E9038E1C01C9038E38000D807E7C7FC13EE5B13F8120F13FFEB9FC0
EB83F0EA1F81EB80F81300150C48141E151C123EA2007E143C1538127C157800FCEB7870
15E048EB3FC00070EB0F8020357BB323>I<133FEA07FF5A13FEEA007EA3137CA213FCA2
13F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380A2121FA21300A25AA212
3EA2127EA2127C1318EAFC1C133CEAF838A21378137012F013F0EAF8E01279EA3FC0EA0F
00103579B314>I<2703C003F8137F3C0FF00FFE01FFC03C1E783C1F07C1E03C1C7CF00F
8F01F03B3C3DE0079E0026383FC001FC7FD97F805B007001005B5E137ED8F0FC90380FC0
0100E05FD860F8148012000001021F130360491400A200034A13076049013E130FF08180
0007027EEC83C0051F138049017C1403A2000F02FC1407053E130049495CEF1E0E001F01
015D183C010049EB0FF0000E6D48EB03E03A227AA03F>I<3903C007F0390FF01FFC391E
787C1E391C7CF01F393C3DE00F26383FC01380EB7F8000781300EA707EA2D8F0FC131F00
E01500EA60F8120000015C153E5BA20003147E157C4913FCEDF8180007153C0201133801
C013F0A2000F1578EDE070018014F016E0001FECE1C015E390C7EAFF00000E143E26227A
A02B>I<14FCEB07FF90381F07C090383E03E09038FC01F0EA01F83903F000F8485A5B12
0F484813FCA248C7FCA214014814F8127EA2140300FE14F05AA2EC07E0A2007CEB0FC015
80141FEC3F006C137E5C381F01F0380F83E03803FF80D800FCC7FC1E2278A027>I<011E
137C90387F81FF9039F3C387C09039E3EF03E03901E1FE01D9C1FC13F0EBC3F8000313F0
018314F814E0EA07871307000313C01200010F130316F01480A2011F130716E01400A249
EB0FC0A2013EEB1F80A2017EEB3F00017F133E5D5D9038FF81F09038FDC3E09038F8FF80
027EC7FC000190C8FCA25BA21203A25BA21207A25BB5FCA325307FA027>I<3903C00FC0
390FF03FF0391E78F078391C7DE03C393C3FC0FC00381380EB7F00007814F8D8707E1370
1500EAF0FC12E0EA60F812001201A25BA21203A25BA21207A25BA2120FA25BA2121FA290
C8FC120E1E227AA020>114 D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F000313
1F13C0A2EBE00414007FEBFF8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800
FC133CA3147C00F013784813F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F
>I<1303EB0F80A3131FA21400A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A2
1201A25BA21203A25BA21207A25BA2120FA25B1460001F13F014E01300130114C0130300
1E1380EB07005BEA0F1EEA07F8EA01E015307AAE19>I<EA01F0D803FC1307D80F1E5B00
0E5C121C123C00385CD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C
5BA2140100035C13E0166002031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1
EC1FC3000190383FE3809038F071E73A007FE0FF0090381F803C24227AA029>I<01F013
38D803FC13FCEA0F1E120E121C123C0038147CEA783E0070143CA2137ED8F07C1338EA60
FCC65A1578000114705BA215F0000314E05BA2EC01C0A2EBC003158014071500EBE00EA2
6C6C5A3800F878EB7FE0EB1F801E227AA023>I<D801F01538D803FC010E13FCD80F1E13
1E000E143E121C123C0038027E137CD8783E137C0070163CA2017E13FCD8F07C491338EA
60FCC65A0201147800014A137013F0A2020314F0000316E001E05BA2160117C001C013C0
0207EB0380A29039E00FE0071700021F130E3A01F03DF01E3A00F878F83C90393FF03FF0
90390FC00FC02E227AA033>I<13F0D803FC1307D80F1E130F000E141F121C123C003814
3FD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC000114F85BA21401000314
F013E0A2140315E0EA07C0A20003130715C0EBE00F141F0001133F9038F07F8038007FEF
EB1F8FEB001F1500A25C003E133E007E137E147C5C007C5BEA7001495A38380780D83C1F
C7FCEA0FFCEA07F020317AA025>121 D E /Fb 62 125 df<123C127EB4FCA21380A212
7F123D1201A412031300A25A1206120E120C121C5A5A126009177A8715>44
D<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<EB0FE0EB7FFCEB
F83E3903E00F803907C007C0EB8003000F14E0391F0001F0A24814F8A2003E1300007E14
FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007C0A23903E00F
803900F83E00EB7FFCEB0FE01F347DB126>48 D<13075B5B137FEA07FFB5FC13BFEAF83F
1200B3B3A2497E007FB51280A319327AB126>I<EB3FC0EBFFF0000313FC380F80FF391E
007F80001CEB3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3007E1307123C
C7FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A49C7FC133E13
3C4913185B485A48481330485A48C7FC001C1470001FB512F05A5AB612E0A31D327CB126
>I<EB1FE0EBFFFC4813FF3907E03F80390F001FC0001EEB0FE0001CEB07F0123F018013
F8140313C01380A2381F0007C7FC15F0A2EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE0
14FCEB003FEC1FC0EC0FE0EC07F015F8140315FC140115FEA3127EB4FCA415FC48130312
780070EB07F86C14F0003C130F001FEB1FE0390FE03F800003B51200C613FCEB1FE01F34
7DB126>I<EC01C0A214031407A2140F141FA2143F147F146F14CF1301EB038F140F1307
130E130C131C13381330137013E013C0EA0180120313001206120E120C5A123812305A12
E0B71280A3C7380FC000A94A7E0107B51280A321337EB226>I<000C14C0380FC00F90B5
128015005C5C14F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8EBF07C380FC03F9038001F
80EC0FC0120E000CEB07E0A2C713F01403A215F8A41218127E12FEA315F0140712F80060
14E01270EC0FC06C131F003C14806CEB7F00380F80FE3807FFF8000113E038003F801D34
7CB126>I<14FE903807FF80011F13E090383F00F0017C13703901F801F8EBF003EA03E0
1207EA0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1FFC38FE381F9038700F8090
38E007C039FFC003E0018013F0EC01F8130015FC1400A24814FEA5127EA4127F6C14FCA2
6C1301018013F8000F14F0EBC0030007EB07E03903E00FC03901F81F806CB51200EB3FFC
EB0FE01F347DB126>I<1230123C003FB6FCA34814FEA215FC0070C71238006014301570
15E04814C01401EC0380C7EA07001406140E5C141814385CA25CA2495A1303A3495AA213
0FA3131F91C7FCA25BA55BA9131C20347CB126>I<EB0FE0EB7FF8EBFFFE3803F83F3907
E00F80390FC007C0D81F8013E0EC03F0EA3F0048EB01F8127EA200FE14FC1400A415FEA5
007E1301A2127F7E1403EA1F80000F13073807C00E3803E01C3801F03838007FF090381F
C0FC90C7FC1401A215F8A215F01403001F14E0383F800715C0140FEC1F809038003F0000
1C137E381F01FC380FFFF0000313C0C690C7FC1F347DB126>57 D<123C127E12FFA4127E
123C1200B0123C127E12FFA4127E123C08207A9F15>I<15E0A34A7EA24A7EA34A7EA3EC
0DFE140CA2EC187FA34A6C7EA202707FEC601FA202E07FECC00FA2D901807F1507A24948
6C7EA301066D7EA2010E80010FB5FCA249800118C77EA24981163FA2496E7EA3496E7EA2
0001821607487ED81FF04A7ED8FFFE49B512E0A333367DB53A>65
D<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFC
D97F80130701FEC7120348481401000315005B4848157C485A173C485A171C123F5B007F
160CA390C9FC481600AB7E6D150CA3123F7F001F161C17186C7E17386C6C15306C6C1570
6D15E012016C6CEC01C0D97F80EB0380D91FC0EB0F00D90FF0131ED903FE13FC0100B512
F0023F13C0DA03FEC7FC2E377CB437>67 D<B77E16F016FE3A01FE0001FF00009138003F
C0EE0FE0707E707E707E707E177E177FEF3F80A2EF1FC0A3EF0FE0A418F0AA18E0A3171F
18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE3FC000014AB45AB748C7FC16F81680
34337EB23B>I<B812C0A3D803FCC7127F0001150FEE03E01601A21600A21760A4030613
30A41700150EA2151E157E90B512FEA39038FC007E151E150EA21506170CA3171892C7FC
A41738A21770A217F01601160316070003157FB812E0A32E337DB234>I<B81280A3D803
FCC7FC0001151FEE07C01603A21601A21600A41760150CA31700A2151CA2153C15FC90B5
FCA3EBFC00153C151CA2150CA592C8FCAB487EB512FEA32B337DB232>I<DA03FE130C91
393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FE
C7120348481401000315005B4848157C485A173C485A171C123F5B007F160CA390C9FC48
93C7FCAA0303B512E07E7F92390003FE00705A123F7F121FA26C7E7F12076C7E7F6C6C14
036C7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903FEEBF81C0100B5EAF00C023F01C0C7
FCDA03FEC8FC33377CB43C>I<B5D8FE03B512F8A3000190C73807FC006C486E5AB390B7
FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335337EB23A>I<B512FEA3000113006C
5AB3B3A7487EB512FEA317337EB21C>I<017FB5FCA39038003FE0EC1FC0B3B1127EB4FC
A4EC3F805A0060140000705B6C13FE6C485A380F03F03803FFC0C690C7FC20357DB227>
I<B500FE903807FFF8A3000190C7000113006C48EC00FC17F04C5A4C5A4CC7FC160E5E5E
5E5E4B5A4B5A4BC8FC150E5D5D15F84A7E14034A7EEC0EFF5C4A6C7E4A6C7EECE01FD9FF
C07F4A6C7E4A6C7E5B6F7E6F7EA26F7E707EA2707E707E160F83707E707EA283486C9138
07FF80B500FE013F13FCA336337EB23C>I<B512FEA3D803FEC9FC6C5AB3A9EE0180A416
031700A45EA25E5E5E5E16FE00031407B7FCA329337DB230>I<D8FFFC923801FFF86D5D
A20003EFFE00D801BFED06FCA3D99F80140CA2D98FC01418A3D987E01430A2D983F01460
A3D981F814C0A3D980FCEB0180A2027EEB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA2
6E6C5AA36E6C5AA3913800FD80A2037FC7FCA3486C133ED80FF04B7EB5011C90387FFFF8
A33D337CB246>I<D8FFFE91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EB
C7F8EBC3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED
3FC0ED1FE0A2ED0FF0ED07F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F16
07A216031601A2486C1400D807F81578B500C01438A2171835337EB23A>I<EC07FC9138
7FFFC0903901FC07F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E
48486E7EA248486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA2
4817E0AB6C17C06D153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A
5A00015E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F0903900
7FFFC0DA07FCC8FC33377CB43C>I<B612FEEDFFC016F03A03FC0007FC0001EC00FE167F
EE3F80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B65A16
8001FCC9FCB3A2487EB512F8A32C337DB234>I<B612FCEDFF8016F03A01FE0007FC0000
EC01FEED007F707E707E83160F83A65FA24C5AA24C5A047EC7FC4B5AED0FF090B612C093
C8FC9039FE001FC0ED07F06F7E6F7E150082167E167FA583A5180C17C0A2043F131C486C
1618B500FEEB1FE0040F1338933807F070C93801FFE09338003F8036357EB239>82
D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E80814880A20078
8000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C68001
3F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A21507A37EA26CEC0F
80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026C003FEC7FC
22377CB42B>I<007FB712FEA390398007F001D87C00EC003E0078161E0070160EA20060
160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<B500FE9038
1FFFF8A3000190C813006C48153C1718B3AF1738017F1530A217706D6C1460011F15E06E
495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC91383FFFF0020F13C0020190
C8FC35357EB23A>I<B500F0903803FFF8A3D807FEC8EA7FC06C48ED1F000001161E6D15
1C00001618A26D15386D1530A26D6C5CA26E14E0011F5DA26D6C495AA28001074AC7FCA2
6D6C1306A28001015CA26E131C01001418806E5BA2ED8070023F1360A26E6C5AA215E102
0F5BA2DA07F3C8FCA215FBEC03FEA36E5AA26E5AA31570A235357EB23A>I<B5D8F007B5
39800FFFF0A3000390C7273FF000011300D801FC6E48EB007C1A386D140F00001930836D
020715706D1860A26E496C14E0013F60A26ED919FC1301011F60A26ED930FE1303010F95
C7FCA26ED9607F5B01071706A26E9039C03F800E0103170CA2913BFC01801FC01C010117
18A2913BFE03000FE03801001730A2DAFF06EB07F0027F5EA2038CEB03F8023F5EA203D8
EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207157EA24B143E0203153CA24B
141C020115184C357FB24F>I<EAFFF0A4EAF000B3B3B3ADEAFFF0A40C4B79B715>91
D<EAFFF0A41200B3B3B3AD12FFA40C4B7FB715>93 D<EB7F803803FFF0380F80FC381C00
3E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07EA0FF0EA1F
C0EA3F80127F13004815C05AA3140FA26C131F6C133B3A3F8071F180391FC1E1FF2607FF
C013003900FE003C22237DA126>97 D<EA03F012FFA312071203AEEC3F80ECFFE09038F3
C0F89038F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A2150316F8AA16F0150716E0
A2ED0FC07F6DEB1F8001ECEB3F0001CF137C90388381F8903801FFE0C76CC7FC25357EB3
2B>I<EB07F8EB3FFF9038FC07C03901F000E03903E003F03807C007120FEA1F80123F90
380003E04890C7FCA2127E12FEAA127FA26C14187F001F14386D1330000F14706C6C13E0
3903F001C03900FC0F8090383FFE00EB07F01D237EA122>I<153FEC0FFFA3EC007F81AE
EB07F0EB3FFCEBFC0F3901F003BF3907E001FF48487E48487F8148C7FCA25A127E12FEAA
127E127FA27E6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E3FEB3FFCD90FE013
0026357DB32B>I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390FC007E0381F8003
15F0EA3F0014014814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C1418A26C6C1338
000F14306D13706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01
FCEB07FF90381F078090383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3
D803F0C7FCB3A7487E387FFFE0A31A357FB417>I<151F90391FC07F809039FFF8E3C039
01F07FC73907E03F033A0FC01F83809039800F8000001F80EB00074880A66C5CEB800F00
0F5CEBC01F6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121EA2121F380FFFFEEC
FFC06C14F06C14FC4880381F0001003EEB007F4880ED1F8048140FA56C141F007C15006C
143E6C5C390FC001F83903F007E0C6B51280D91FFCC7FC22337EA126>I<EA03F012FFA3
12071203AEEC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E13FE497FA25BA25BB348
6CEB7F80B538C7FFFCA326347EB32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAA
EA07E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215>I<EB03C0EB07E0EB0FF0A4EB
07E0EB03C090C7FCAAEB03F013FFA313071303B3B01238127C00FE13E0130714C0130F00
7C138038381F00EA1FFCEA07F0144384B217>I<EA03F012FFA312071203AF913803FFE0
A36E1300EC00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF8
7F496C7E141F6E7E8114076E7E8114016E7E81486CEBFF80B500C313F0A324347EB329>
I<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<2703F01FE013FF00FF
90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD803FE147049
6D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F0
1FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25BB3486CEB7F
80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007C03903C001E000
078048486C7E48C7127CA248147E003E143E007E143FA300FE1580A8007E1500A36C147E
A26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FCEB07F021237EA1
26>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48EB1F804914C049
130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F80160001FF13FC
9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA02B>I<3803E07C
38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512
E0A31A217FA01E>114 D<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27E
A200FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F
140F6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<13
30A51370A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403A814073801F806
A23800FC0EEB7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB00
7F000380B35DA35D12016D4813800000903803BFFC90387E073FEB1FFED907F813002622
7EA02B>I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D131C00011418A26C
6C5BA26D1370017E1360137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D
5AA26D5AA36D5AA2146024217E9F29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049
EB1E0000030100141C816C6C017C1318A26D017E1338000002FE1330A290267E01FF5B15
9F168090263F030F5BA216C0903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC
13F6ECF80116FE6D486C5AA36D481378A36D48133034217F9F37>I<B53801FFF8A32603
FE0013806C48EB7C0000001478017E1370017F5B90383F81C090381F8380D90FC3C7FCEB
07E614FE6D5A6D5A6D7E80805B9038039F809038071FC09038060FE0EB0C0790381C03F0
496C7E01707FEBF000000180000FECFF8026FFFC0313FCA326207F9F29>I<3A7FFF807F
F8A33A07F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E1318A26D5BA2EC
8070011F1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB01FEA26D5AA314
78A21430A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0F
C025307F9F29>I<003FB512F0A2EB000F003C14E00038EB1FC00030EB3F800070137F15
00006013FE495A13035CC6485A495AA2495A495A49C7FC153013FE485A12035B48481370
485A001F14604913E0485A387F000348130F90B5FCA21C207E9F22>I<BC12F0A24C0280
944D>124 D E /Fc 2 111 df<4BB4FC031F13F09238FE01FC913903F0007EDA07C0EB1F
80DA1F80EB0FC0023EC7EA07E002FCEC03F0495A4948EC01F8495A4948EC00FC495A49C9
12FE49167E13FE49167F1201485AA2485AA2120F5B001F17FFA2485AA34848ED01FEA400
FFEE03FC90C9FCA2EF07F8A2EF0FF0A218E0171F18C0EF3F806C167F180017FE4C5A6C6C
5D1603001F4B5A6D4A5A000FED1F806C6C4AC7FC6D147E0003EC01F8D801FC495AD8007E
EB0FC090263F807FC8FC903807FFF801001380383D7CBA3F>79 D<D803E0137F3A07F801
FFE03A0E3C0781F03A1C3E1E00F826383F387F00305B4A137C00705B00605BA200E090C7
12FC485A137EA20000140101FE5C5BA2150300015D5B15075E120349010F133016C0031F
13700007ED80605B17E0EE00C0000F15014915801603EE0700001FEC0F0E49EB07FC0007
C7EA01F02C267EA432>110 D E /Fd 81[51 55[46 51 28 46 32
1[51 51 51 74 1[46 1[23 51 51 28 46 51 46 51 46 12[51
1[60 1[55 1[60 1[51 5[51 2[60 13[46 46 46 46 46 2[23
28 45[{}34 83.333336 /Helvetica-Bold rf /Fe 41 122 df<003C131E007F137F48
1480A66C1400A6007E7FA6003E133EA3003C131E001C131C191977B32C>34
D<143814FC13011303EB07F8EB0FF0EB1FC0EB3F80EB7F0013FE485A485A5B12075B120F
5B485AA2123F90C7FCA25A127EA312FE5AAC7E127EA3127F7EA27F121FA26C7E7F12077F
12037F6C7E6C7E137FEB3F80EB1FC0EB0FF0EB07F8EB03FC130113001438164272B92C>
40 D<127012FC7E7E6C7E6C7EEA0FE06C7E6C7E6C7E6C7E137F7F1480131F14C0130FEB
07E0A214F01303A214F81301A314FC1300AC130114F8A3130314F0A2130714E0A2EB0FC0
131F1480133F14005B13FE485A485A485A485AEA3FC0485A48C7FC5A5A1270164279B92C
>I<EB0380497EA60020140800F8143E00FE14FE00FF13C1EBC7C7EBE7CF003FB512F800
0F14E0000314806C140038007FFCA248B5FC481480000F14E0003F14F839FFE7CFFEEBC7
C7EB07C100FE13C000F8143E0020140800001400A66D5A1F247AAA2C>I<EA0F80EA1FE0
EA3FF0EA7FF8A213FCA3123F121F120F120013F8A21201EA03F01207EA1FE0EA7FC0EAFF
80130012FC12700E17718A2C>44 D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00
0B0B708A2C>46 D<1507ED0F80151FA2153F16005D157E15FE5D14015D14035DA214075D
140F5D141F5D143F92C7FC5C147E14FE5CA213015C13035C13075C130F5C131F5CA2133F
91C8FC5B137E13FE5B12015B12035B12075BA2120F5B121F5B123F90C9FC5A127E12FE5A
A25A127821417BB92C>I<EA0F80EA1FC0EA3FE0EA7FF0A5EA3FE0EA1FC0EA0F80C7FCAE
EA0F80EA1FC0EA3FE0127F13F0A4123F121F120F1201120313E01207EA0FC0A2EA3F80EA
7F005A5A12F812700C3071A32C>59 D<003FB612E04815F0B712F8A36C15F0CAFCA8007F
B612F0B712F8A36C15F06C15E025147DA22C>61 D<14FE497EA4497FA214EFA2130781A2
14C7A2010F7FA314C390381F83F0A590383F01F8A490387E00FCA549137E90B512FEA348
80A29038F8003FA34848EB1F80A4000715C049130FD87FFEEBFFFC6D5AB514FE6C15FC49
7E27347EB32C>65 D<007FB512E015F8B612FE6C8016C03903F0003FED0FE0ED07F01503
A2ED01F8A6ED03F0A21507ED0FE0ED1FC0EDFF8090B612005D5D15FF16C09039F0001FE0
ED07F0ED03F81501ED00FCA216FE167EA616FE16FC1501ED03F8150FED3FF0007FB612E0
16C0B712806CECFE0015F027337FB22C>I<02FF13700107EBE0F84913F9013F13FD4913
FFEBFF813901FE007F4848131FD807F0130F1507485A491303485A150148C7FCA25A007E
EC00F01600A212FE5AAB7E127EA3007F15F06CEC01F8A26C7EA26C6C13036D14F06C6C13
0716E0D803FC131F6C6CEB3FC03A00FF81FF806DB512006D5B010F5B6D13F00100138025
357DB32C>I<007FB5FCB612C015F0816C803907E003FEEC00FFED7F80153FED1FC0ED0F
E0A2150716F0150316F81501A4ED00FCACED01F8A3150316F0A2150716E0150FED1FC015
3FED7F80EDFF00EC03FE007FB55AB65A5D15C06C91C7FC26337EB22C>I<D87FF0EB7FFC
486CEBFFFEA27F007FEC7FFCD807FEEB07C013DEA213DF13CFA2148013C714C0A213C314
E0A213C114F0A213C014F8A2147CA3143EA2141E141FA2140F1587A2140715C7A2140315
E71401A215F71400A215FFD87FFC137F487E153FA26C48EB1F8027337EB22C>78
D<387FFFFCB67E15E015F86C803907E007FE1401EC007F6F7E151FA26F7EA64B5AA2153F
4BC7FCEC01FE140790B55A5D15E081819038E007FCEC01FE1400157F81A8160FEE1F80A5
D87FFEEB1FBFB5ECFF00815E6C486D5AC8EA01F029347EB22C>82
D<3B7FFF803FFFC0B56C4813E0A36C496C13C03B03F00001F800B3AF6D130300015DA26D
130700005D6D130F017F495A6D6C485AECE0FF6DB5C7FC6D5B010313F86D5B9038003F80
2B3480B22C>85 D<387FFFFCB512FEA314FC00FCC7FCB3B3B3B512FC14FEA36C13FC1741
6FB92C>91 D<387FFFFCB512FEA37EC7127EB3B3B3387FFFFEB5FCA36C13FC17417DB92C
>93 D<007FB6FCB71280A46C150021067B7D2C>95 D<3801FFF0000713FE001F6D7E15E0
48809038C01FF81407EC01FC381F80000006C77EC8127EA3ECFFFE131F90B5FC1203120F
48EB807E383FF800EA7FC090C7FC12FE5AA47E007F14FEEB8003383FE01F6CB612FC6C15
FE6C14BF0001EBFE1F3A003FF007FC27247CA32C>97 D<EA7FF0487EA3127F1201AAEC1F
E0ECFFF801FB13FE90B6FC16809138F07FC09138801FE091380007F049EB03F85BED01FC
491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138801FE09138E07F
C091B51280160001FB5B01F813F83900F03FC027337FB22C>I<903803FFE0011F13F801
7F13FE48B5FC48804848C6FCEA0FF0485A49137E4848131890C9FC5A127EA25AA8127EA2
127F6C140F6DEB1F806C7E6D133F6C6CEB7F003907FE03FF6CB55A6C5C6C6C5B011F13E0
010390C7FC21247AA32C>I<EC0FFE4A7EA380EC003FAAEB07F8EB3FFE90B512BF4814FF
5A3807FC0F380FF00348487E497E48487F90C7FC007E80A212FE5AA87E007E5CA2007F5C
6C7E5C6C6C5A380FF0073807FC1F6CB612FC6CECBFFE6C143FEB3FFC90390FF01FFC2733
7DB22C>I<EB03FE90381FFFC0017F13F048B57E48803907FE03FE390FF800FFD81FE0EB
3F805B4848EB1FC090C7120F5A007E15E015075AB7FCA416C000FCC9FC7E127EA2127F6C
EC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001FF13FF000190B512806C1500013F13FC
010F13F00101138023247CA32C>I<EC0FF8EC3FFE91B5FC4914805B903807FC7F14F090
390FE03F0014C092C7FCA6007FB512FEB7FCA36C5C26000FC0C7FCB3A8003FB512F04880
A36C5C21337DB22C>I<ED03F8903907F80FFC90391FFE3FFE017FB6FC48B7FC48ECFE7F
9038FC0FF82607F003133E3A0FE001FC1CD9C0001300001F8049137EA66D13FE000F5CEB
E0016C6C485A3903FC0FF048B5FC5D481480D99FFEC7FCEB87F80180C8FCA37F6C7E90B5
12F06C14FE48ECFF804815E04815F03A3FC0001FF848C7EA03FC007E1400007C157C00FC
157E48153EA46C157E007E15FCD87F801303D83FE0EB0FF8D81FFCEB7FF06CB612E00003
15806C1500D8003F13F8010713C028387EA42C>I<EA7FF0487EA3127F1201AAEC1FE0EC
7FFC9038F9FFFE01FB7F90B6FC9138F03F80ECC01F02807FEC000F5B5BA25BB3267FFFE0
B5FCB500F11480A36C01E0140029337FB22C>I<1307EB1FC0A2497EA36D5AA20107C7FC
90C8FCA7387FFFC080B5FC7EA2EA0007B3A8007FB512FCB612FEA36C14FC1F3479B32C>
I<387FFFE0B57EA37EEA0003B3B3A5007FB61280B712C0A36C158022337BB22C>108
D<3A7F83F007E09039CFFC1FF83AFFDFFE3FFCD87FFF13FF91B57E3A07FE1FFC3E01FCEB
F83F496C487E01F013E001E013C0A301C01380B33B7FFC3FF87FF0027F13FFD8FFFE6D13
F8D87FFC4913F0023F137F2D2481A32C>I<397FF01FE039FFF87FFC9038F9FFFE01FB7F
6CB6FC00019038F03F80ECC01F02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A3
6C01E0140029247FA32C>I<EB07FCEB1FFF017F13C048B512F048803907FC07FC390FF0
01FE48486C7E0180133F003F158090C7121F007EEC0FC0A348EC07E0A76C140F007E15C0
A2007F141F6C15806D133F6C6CEB7F006D5B6C6C485A3907FC07FC6CB55A6C5C6C6C13C0
011F90C7FCEB07FC23247CA32C>I<397FF01FE039FFF8FFF801FB13FE90B6FC6C158000
019038F07FC09138801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE6D
14FCA2ED01F86D13036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01F8
13F8EC3FC091C8FCAD387FFFE0B57EA36C5B27367FA32C>I<903903FC078090391FFF0F
C0017F13CF48B512EF4814FF3807FE07380FF00148487E49137F4848133F90C7FC48141F
127E150F5AA87E007E141FA26C143F7F6C6C137F6D13FF380FF0033807FC0F6CB6FC6C14
EF6C6C138F6D130FEB07F890C7FCAD0203B5FC4A1480A36E140029367DA32C>I<D87FFE
EB3FC0B53801FFF0020713F8021F13FC6C5B39003F7FE1ECFF019138FC00F84A13704A13
005CA25C5CA391C8FCAF007FB512E0B67EA36C5C26247EA32C>I<90387FF8700003B512
F8120F5A5A387FC00F387E00034813015AA36CEB00F0007F140013F0383FFFC06C13FE6C
EBFF80000314E0C66C13F8010113FCEB0007EC00FE0078147F00FC143F151F7EA26C143F
6D133E6D13FE9038F007FC90B5FC15F815E000F8148039701FFC0020247AA32C>I<131E
133FA9007FB6FCB71280A36C1500D8003FC8FCB1ED03C0ED07E0A5EC800F011FEB1FC0EC
E07F6DB51280160001035B6D13F89038003FE0232E7EAD2C>I<3A7FF003FF80486C487F
A3007F7F0001EB000FB3A3151FA2153F6D137F3900FE03FF90B7FC6D15807F6D13CF9026
03FE07130029247FA32C>I<3A7FFF01FFFCB514FE148314016C15FC3A03E0000F80A26D
131F00011500A26D5B0000143EA26D137E017C137CA2017E13FC013E5BA2EB3F01011F5B
A21483010F5BA214C701075BA214EF01035BA214FF6D90C7FCA26D5A147C27247EA32C>
I<3A3FFF03FFF048018713F8A36C010313F03A00FC007E005D90387E01F8013F5BEB1F83
EC87E090380FCFC0903807EF80EB03FF6D90C7FC5C6D5A147C14FE130180903803EF8090
3807CFC0EB0FC7EC83E090381F01F0013F7FEB7E00017C137C49137E0001803A7FFF01FF
FC1483B514FE6C15FC140127247EA32C>120 D<3A7FFF01FFFCB5008113FE148314816C
010113FC3A03E0000F806C7E151F6D140012005D6D133E137C017E137E013E137CA2013F
13FC6D5BA2EB0F815DA2EB07C1ECC3E0A2EB03E3ECE7C0130114F75DEB00FFA292C7FC80
A2143EA2147E147CA214FC5CA2EA0C01003F5BEA7F83EB87E0EA7E0F495A387FFF806C90
C8FC6C5A6C5AEA07E027367EA32C>I E /Ff 17 117 df<123E127FEAFF80A5EA7F0012
3E0909738823>46 D<EC0380EC07C0140FA2141F1580143F15005C147EA214FE5C13015C
13035C13075CA2130F5C131F5C133F91C7FCA25B137E13FE5B12015BA212035B12075B12
0F5B121F5BA2123F90C8FC5A127E12FE5AA25A12781A347CAD23>I<123E127FEAFF80A5
EA7F00123EC7FCAB123E127FEAFF80A5EA7F00123E091D739C23>58
D<397FC01FF800FFEB3FFC13E0A2397FF01FF8390F7003C0A213781338A2133CA2131C13
1EA2130E130FA3EB0783A3EB03C3A3130114E3A2130014F3A21473A2147B143BA2387FE0
3F38FFF01FA2140FD87FE013801E297EA823>78 D<3803FF80000F13E04813F8487F80EB
80FFEC3F80381F001FC7FC140F14FF137F0003B5FC120F5A387FF00F130012FCA25A141F
7E6C133F387F81FF90B512FC6C14FE7E000713C73901FE01FC1F1D7D9C23>97
D<EB3FC0EBFFF800037F4813FF481480381FF07F393F801FC0EB000F007E130715E05AB6
FCA415C000F8C8FC7EA2007EEB01C0007FEB03E0383F800713E0391FF81FC06CB5FC6C14
800001EBFE006C6C5AEB1FE01B1D7D9C23>101 D<147F903801FFC0010713E05B5BEB3F
CF140F90383E07C091C7FCA4007FB51280B612C0A36C1480D8003EC7FCB3383FFFFE487F
A36C5B1B297EA823>I<EC01F090383F07FC9038FFDFFE000313FF5A48147E381FE1FE90
38807E18393F003F00A2003E7FA4003F5BA2381F807EEBE1FE6CB45A485B5C001E13C001
3FC7FC90C8FC121F1340380FFFFCECFF804814C04814F0397E0007F8007C130048147CA2
48143CA36C147C6C14FC007FEB03F8EBE01F6CB512F0000F14C06C14800001EBFE003800
3FF01F2E7E9D23>I<B47E7FA41207A7EBC1FCEBC7FF01DF138090B512C0A29038FE0FE0
EBF807EBF00313E0A313C0AD39FFFE1FFF5CA38020297FA823>I<133813FEA5133890C7
FCA6EA7FFC487EA3127FEA003EB3387FFFFEB6FCA36C13FE182A7AA923>I<14E0EB03F8
A5EB00E01400A63803FFF04813F8A37EC7FCB3AB13011238387C03F012FEEB0FE0B5FC14
C06C13006C5AEA0FF815397DA923>I<EA7FFEB5FCA37EEA001FB3AD007FB512C0B612E0
A36C14C01B297CA823>108 D<38FF81FCEBC7FF01DF138090B512C0A23907FE0FE0EBF8
07EBF00313E0A313C0AD39FFFE1FFF5CA380201D7F9C23>110 D<133F3801FFE0487F48
7F487F381FC0FE383F807F383E001F007E1480007C130F00FC14C0481307A66C130FA200
7C1480007E131F6CEB3F006D5A381FE1FE6CB45A6C5B6C5B6C5BD8003FC7FC1A1D7C9C23
>I<38FF81FCEBC7FF01DF13C090B512E015F03907FE0FF8EBF8039038F001FCEBE000A2
49137EA2153EA5157E7F15FC7F14019038F803F89038FE0FF090B5FC15E001DF138001CF
1300EBC3F801C0C7FCAAEAFFFEA51F2C7F9C23>I<3801FF9C000F13FE5A127FA2EAFF00
00FC137E48133EA26C131C6C1300EA7FF0383FFF80000F13E06C13F838007FFCEB01FEEB
007F0070133F00F8131F7E143F7E38FF80FFEBFFFE14FC14F814F000701380181D7B9C23
>115 D<137013F8A7007FB51280B612C0A36C1480D800F8C7FCACEC01C0EC03E0A3EBFC
07140F9038FE1FC0EB7FFF158090383FFE00EB0FFCEB07F01B257EA423>I
E /Fg 33 122 df<003C13F0387E01F838FF03FCA2EB83FEA2EA7F81383D80F600011306
A30003130EEB000CA248131C00061318000E13384813704813E0387001C0006013801715
7EAD23>34 D<123C127EB4FCA21380A2127F123D1201A312031300A25A1206120E5A5A5A
126009157A8714>44 D<123C127E12FFA4127E123C08087A8714>46
D<B512F8A2D803FCC8FC6C5AB3A7160CA41618A41638A2167816F81501ED07F00003141F
B7FCA2262D7EAC2C>76 D<D8FFF8903803FFFC7F00019138003FC06DEC0F006D1406EBBF
80A2EB9FC0EB8FE0138780EB83F8138180EB80FE147E147FEC3F80EC1FC0140F15E0EC07
F0140315F8EC01FC140015FE157FED3F86151F16C6ED0FE6150716F6ED03FE1501A21500
167E163EA2486C141ED80FF0140EB5FC16062E2D7DAC35>78 D<B612C015FC3903F8007F
0001EC0FC06F7E6F7E6F7E82150082A55E15015E4B5A4B5A4B5A037FC7FC90B512FC15F0
9038F800FC153E6F7E150F826F7EA582A5170316F815031707486C903801FC0EB539F000
FE1CEE3FF8C9EA07E0302E7DAC34>82 D<007FB712F8A29039000FC003007C1500007016
38A200601618A200E0161CA248160CA5C71500B3A94A7E011FB512E0A22E2D7EAC33>84
D<B539F003FFFCA2D803FCC7EA3FC06C48EC0F001606B3AB160E0000150C7F161C017C14
18017E14386D5C6D146090390F8001E0903907E00380902601F80FC7FC9038007FFCEC0F
F02E2E7DAC35>I<0003130C48131C000E13384813704813E0003013C0EA700100601380
A2EAE00300C01300A300DE137800FF13FCEB83FEA2EA7F81A2383F00FC001E1378171577
AD23>92 D<13FF000713C0380F01F0381C00F8003F137C80A2143F001E7FC7FCA4EB07FF
137F3801FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE14065AA3143F7E007E137F007FEB
EF8C391F83C7FC390FFF03F83901FC01E01F207D9E23>97 D<EB1FE0EB7FFC3801F01E38
03E0073907C01F80EA0F80EA1F005A003EEB0F00007E90C7FCA2127C12FCA9127EA215C0
7E6C130101801380380FC0033907E007003801F03E38007FF8EB1FC01A207E9E1F>99
D<15F8141FA214011400ACEB0FE0EB7FF83801F81E3803E0073807C003380F8001EA1F00
481300123E127EA25AA9127C127EA2003E13017EEB8003000F13073903E00EFC3A01F03C
FFC038007FF090391FC0F800222F7EAD27>I<EB1F80EBFFF03803E0783807C03E380F80
1E381F001FEC0F80123E007E130715C0127C12FCA3B6FCA200FCC8FCA5127EA2003E14C0
123F6C1301390F80038001C013003803E00F3801F03C38007FF8EB1FC01A207E9E1F>I<
EB03F0EB0FFCEB3E1EEB7C3F13F8EA01F0A23803E00C1400AAB512E0A23803E000B3A648
7E387FFF80A2182F7FAE16>I<013F13F89038FFC3FE3903E1FF1E3807807C000F140C39
1F003E00A2003E7FA76C133EA26C6C5A00071378380FE1F0380CFFC0D81C3FC7FC90C8FC
A3121E121F380FFFF814FF6C14C04814F0391E0007F848130048147C12F848143CA46C14
7C007C14F86CEB01F06CEB03E03907E01F803901FFFE0038003FF01F2D7E9D23>I<EA07
C012FFA2120F1207AC14FE9038C3FF809038C703E09038DE01F013F8496C7EA25BA25BB2
486C487E3AFFFE1FFFC0A2222E7EAD27>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FC
A8EA07C012FFA2120F1207B3A5EA0FE0EAFFFCA20E2E7EAD14>I<130FEB1F80EB3FC0A4
EB1F80EB0F0090C7FCA8EB07C013FFA2130F1307B3AD1230127838FC0F80A21400485AEA
783EEA3FF8EA07E0123C83AD16>I<EA07C012FFA2120F1207ADEC1FFEA2EC0FF0EC07C0
5D020EC7FC5C5C5C5CEBC3C013C7EBCFE0EBDFF013F9EBF0F8497EEBC07E143E80816E7E
14076E7E816E7E486C487E3AFFFE07FF80A2212E7EAD25>I<EA07C012FFA2120F1207B3
B3A3EA0FE0EAFFFEA20F2E7EAD14>I<2607C07FEB07F03BFFC3FFC03FFC903AC783F078
3F3C0FCE01F8E01F803B07DC00F9C00F01F8D9FF8013C04990387F000749137EA249137C
B2486C01FEEB0FE03CFFFE0FFFE0FFFEA2371E7E9D3C>I<3807C0FE39FFC3FF809038C7
03E0390FDE01F0EA07F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2221E7E9D27>I<
EB1FE0EB7FF83801F03E3803C00F3907800780390F0003C04814E0003EEB01F0A248EB00
F8A300FC14FCA9007C14F8A26CEB01F0A26CEB03E0A2390F8007C03907C00F803901F03E
0038007FF8EB1FE01E207E9E23>I<3807C0FE39FFC7FF809038CF03E0390FDC01F03907
F800FC49137E49133E49133FED1F80A3ED0FC0A8151F1680A2ED3F00A26D137E6D137C5D
9038FC01F09038CE07E09038C7FF80D9C1FCC7FC01C0C8FCA9487EEAFFFEA2222B7E9D27
>I<90380FE01890387FF8383801F81C3903E00E783807C007390F8003F8001F1301EA3F
00A2007E1300A212FE5AA8127EA36C13017EEB8003380FC0073803E00E3801F03C38007F
F0EB1FC090C7FCA94A7E91381FFFC0A2222B7E9D25>I<380781F838FF87FEEB8E3FEA0F
9CEA07B813B0EBF01EEBE000A45BB0487EB5FCA2181E7E9D1C>I<3801FE183807FFB838
1E01F8EA3C00481378481338A21418A27E7EB41300EA7FF06CB4FC6C13C06C13F0000113
F838001FFC130138C0007E143EA26C131EA27EA26C133CA26C137838FF01F038E3FFC000
C0130017207E9E1C>I<1360A413E0A312011203A21207121FB512F0A23803E000AF1418
A714383801F03014703800F860EB3FE0EB0F80152A7FA81B>I<D807C013F800FF131FA2
000F130100071300B21401A314033803E007EC0EFC3A01F81CFFC038007FF890391FE0F8
00221F7E9D27>I<3AFFFC01FFC0A23A0FE0007E000007147C15380003143015706C6C13
60A26C6C5BA390387C0180A26D48C7FCA2EB3F07EB1F06A2EB0F8CA214DCEB07D8A2EB03
F0A36D5AA26D5A221E7F9C25>I<3BFFFC3FFE07FFA23B0FE003F001F801C09038E000F0
0007010114E0812603E00314C0A2913807F8012701F006781380A29039F80E7C030000D9
0C3C1300A290397C181E06A2151F6D486C5AA2168C90391F600798A216D890390FC003F0
A36D486C5AA36DC75A301E7F9C33>I<3AFFFC07FF80A23A0FF003FC000003EB01F00001
14C06D485A000091C7FCEB7C06EB3E0E6D5A14B8EB0FB0EB07E013036D7E497E1307EB06
7C497EEB1C1F01387FEB700F496C7E6E7ED803C07F00076D7E391FE003FC3AFFF007FFC0
A2221D7F9C25>I<3AFFFC01FFC0A23A0FE0007E000007147C1538000314306D13700001
1460A26C6C5BA2EBFC01017C5BEB7E03013E90C7FCA2EB1F06A2148EEB0F8CA2EB07D8A2
EB03F0A36D5AA26D5AA2495AA2130391C8FC1278EAFC06A25B131CEA7838EA7070EA3FE0
EA0F80222B7F9C25>I E /Fh 1 50 df<13E01201120712FF12F91201B3A7487EB512C0
A212217AA01E>49 D E /Fi 1 16 df<EB0FE0EB7FFC497E0003EBFF804814C04814E048
14F04814F8A24814FCA3B612FEA86C14FCA36C14F8A26C14F06C14E06C14C06C1480C6EB
FE006D5AEB0FE01F207BA42A>15 D E /Fj 134[46 3[51 30 36
41 1[51 46 51 76 25 2[25 51 46 30 41 1[41 1[46 12[61
51 2[56 1[66 1[61 2[36 4[66 66 1[66 11[46 46 46 46 46
2[23 4[30 30 40[{}34 91.666664 /Times-Bold rf /Fk 3 52
df<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>49
D<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15
005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA018039030003
0012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C00
30137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC3800
01E06D7E147C80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F01
F03807FFC0C690C7FC19277DA521>I E /Fl 76 125 df<DA0FF813FC91397FFF07FF90
3B01F807DF83C0903A07E001FF0F903B1F8007FE1FE090393F000FFC137E16F85B9338F0
07804848010790C7FC1503ACB812F8A32801F80003F0C7FCB3AB486C497E267FFFE0B512
F0A3333B7FBA30>11 D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E09038
3F0007017E497EA25BA2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA
486C497E267FFFE0B512C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807
E00790381F800FEB3F00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E26
7FFFE0B512C0A32A3B7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C
07E001CFC00380903C1F8000FF0001C090273F0007FE130F017E4948497EA2495CA24848
5C03076E5A03030203C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C49
6C497E267FFFE0B500C1B51280A3413B7FBA45>I<121C127FEAFF80A213C0A3127F121C
1200A412011380A2120313005A1206120E5A5A5A12600A1979B917>39
D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B120F90C7FC
A25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E
1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>I<12C07E12707E7E7E120F
6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0
B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A25BA2485A485AA2485A48C7
FC120E5A5A5A5A5A13527CBD20>I<15301578B3A6007FB812F8B912FCA26C17F8C80078
C8FCB3A6153036367BAF41>43 D<121C127FEAFF80A213C0A3127F121C1200A412011380
A2120313005A1206120E5A5A5A12600A19798817>I<B512FCA516057F941C>I<121C127F
EAFF80A5EA7F00121C0909798817>I<150C151E153EA2153C157CA2157815F8A215F014
01A215E01403A215C01407A21580140FA215005CA2141E143EA2143C147CA2147814F8A2
5C1301A25C1303A2495AA25C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B
1201A25B1203A25B1207A25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A
12601F537BBD2A>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007
147C48487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C15
80A36C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FC
EB03F8233A7DB72A>I<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB5
12F0A31C3879B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E
486D7E123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D
4A5A5D140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B491303
48481400485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF
4913C03901F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC8
5A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E
7EED7F80A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070
ECFF006C495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A
>I<1538A2157815F8A2140114031407A2140F141F141B14331473146314C313011483EB
030313071306130C131C131813301370136013C01201EA038013005A120E120C5A123812
305A12E0B712F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780
133C9038F003F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE903878
0F803907E007E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490
C71300485C12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E03F8000
01B5C7FC38007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90
383F800790387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2
485AA3127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E
497FA249148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B
15FE6C6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<123012
38123E003FB612E0A316C05A168016000070C712060060140E5D151800E01438485C5D5D
C712014A5A92C7FC5C140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495A
A3133FA5137FA96DC8FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901
E001F848486C7E4848137C90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C6C
133E01FC133C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13
F801F07F3903E07FFE3907801FFF48486C1380481303003E6D13C0003CEB007F007C143F
0078EC0FE000F814075A1503A21501A36C15C012781503007C15806CEC07006C5C6C6C13
1ED807E0137C3903F803F0C6B55A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF
017F13C09038FC07E03903F803F048486C7E48486C7E49137E121F48487FA2007F158090
C7FCA248EC1FC0A616E0A56C143FA27F123F001F147FA26C6C13FF6C6C13DF0003130139
01F0039F3900FC0F1FD93FFC13C0EB07F090C7FC153F1680A316005D000F147E487E486C
5BA24A5A4A5A49485A6C48485A001C495A260F807FC7FC3807FFFC000113F038003FC023
3A7DB72A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C09
2479A317>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127F5A1380A4127F121D1201
A412031300A25A1206A2120E5A121812385A1260093479A317>I<1538A3157CA315FEA3
4A7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202
707FEC6003A202C07F1501A2D901807F81A249C77F167FA20106810107B6FCA24981010C
C7121FA2496E7EA3496E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B5
12FEA3373C7DBB3E>65 D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E
707EA2707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE
1FE0EE07F0707E707E83707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8
486DEB7FF0B812C094C7FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8
903A01FF807E07903A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01
FE153F12014848151F4848150FA248481507A2485A1703123F5B007F1601A35B00FF93C7
FCAD127F6DED0180A3123F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618
017F15386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC
020F13F002011380313D7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0
EE0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8
A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80
B8C7FC16F816C036397DB83F>I<B812FCA30001903880000F6C90C71201EE007E173E17
1E170EA31706A317078316C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A2
1500A21860A318E093C712C0A41701A3EF0380A21707A2170F173F177F486D903807FF00
B9FCA333397DB839>I<B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2
170CA4170E1706A2ED0180A21700A41503A21507151F91B5FCA3EC001F15071503A21501
A692C8FCAD4813C0B612C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF
803F03903A03FC000787D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A48
48150F48481507A248481503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E
9338007FE0EF3FC0A2123F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D
6C14EFD90FF8EB03C7D903FEEB0783903A00FFC03F0191393FFFFC00020F01F013000200
1380383D7CBA41>I<B648B512FEA30001902680000313006C90C76C5AB3A491B6FCA391
C71201B3A6486D497EB648B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD49
7EB612C0A31A397EB81E>I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80EA
FFC0A44A5A1380D87F005B0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F80
233B7DB82B>I<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F
5F4C5A4C5A4CC8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E
140E4A6C7E4A6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707E
A2707E707EA2707E707F8484486D497FB6011FEBFF80A339397DB841>I<B612E0A30001
01C0C8FC6C90C9FCB3AD1718A517381730A31770A317F0A216011603160FEE1FE0486D13
FFB8FCA32D397DB834>I<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE0
1533A3D9C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C
130CA36E6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300
A2ED7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B5
12F8A2ED018045397DB84C>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F
001706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E
7E168080ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE
3FE6A2EE1FF6EE0FFEA216071603A216011600A2177E486C153E487ED80FFC151EB500C0
140EA2170637397DB83E>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F80
49486D7ED93F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A248
48ED1FC0A2001F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D15
0FA3003F17F0A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C
4A5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381F
FFE0020390C8FC363D7BBA41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE
0FE0EE07F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0
923801FF0091B512FC16F091C9FCB3A5487FB6FCA330397DB839>I<B612FEEDFFE016F8
000190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5A
EE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E707EA2161F83A5
83A6F00180A217F8160F1803486D01071400B66D6C5A04011306933800FE0ECAEA3FFCEF
07F0393B7DB83D>82 D<D90FF813C090383FFE0190B512813903F807E33907E000F74848
137F4848133F48C7121F003E140F007E1407A2007C140312FC1501A36C1400A37E6D1400
6C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F
020713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E0
6C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C001
90C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F0007816
0000701770A300601730A400E01738481718A4C71600B3B0913807FF80011FB612E0A335
397DB83C>I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B217
0E6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7
FC91387F807E91381FFFF8020713E09138007F80373B7DB83E>I<B500FC91387FFF80A3
0003018091380FFC006C90C8EA07E0715A6C705A6E1403017F93C7FCA280013F1506A26E
140E011F150C80010F5DA28001075DA26E147001031560A26D6C5CA2806D4A5AA2ED8003
027F91C8FCA291383FC006A215E0021F5BA2EDF01C020F1318A26E6C5AA215FC02035BA2
EDFEE002015BA26E6C5AA36FC9FCA3153EA2151CA3393B7EB83E>I<B5D8FC07B5D8F001
B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F
6C1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5B
EE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC
9338C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1F
E6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A202
0093C8FC4B80503B7EB855>I<007FB590383FFFFCA3C601F801071380D97FE0D903FCC7
FC013FEC01F06D6C5C5F6D6C5C6D6C13034CC8FC6D6C1306160E6D6C5B6DEB8018163891
387FC0306E6C5A16E06E6C5A91380FF18015FB6EB4C9FC5D14036E7EA26E7F6F7EA24B7E
15DF9138019FF09138038FF8150F91380607FC91380E03FE140C4A6C7EEC38000230804A
6D7E14E04A6D7E49486D7E130391C76C7E01066E7E130E010C6E7E011C1401013C8101FE
822607FF80010713E0B500E0013FEBFF80A339397EB83E>I<EAFFF8A4EAF000B3B3B3B3
A3EAFFF8A40D5378BD17>91 D<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>93
D<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5A
C8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA314
01A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007
C026277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F
809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16
FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E9038
00FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F8
3907E001FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127F
A26C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381F
FF00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F
9038F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA12
7E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90
381FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001
F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5
127EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C13709038
7E03E090381FFF80903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790
383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8
A31C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903
E007C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D
48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815
C03A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0
003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A
>I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF7
0013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0
487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<
EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C12
7E00FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F0
12FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E14
38147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F
811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3
AD487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E0
7E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2
495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000
FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C
497EB500C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848
137C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9
007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C
13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038
F1E07E9039F3801F803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC150016
FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F0090
38F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C09038
1FFE0190387E07819038FC01C33903F000E3000714774848133749133F001F141F485A15
0F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39
007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00
FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300
A45BB3A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F
00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380
EB007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1
FFF038C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FC
A2D801F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220
>I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F00
00EC77F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538
803FFEA33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E
017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7
FCA214FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000F
F86C48017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E
9038EFC00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6
001360A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E
4A130E0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC
017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A
7E8114CF903801C7E090380383F090380703F8EB0601496C7E011C137E49137F01787F49
6D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000F
F06C48EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC0
70010F1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A2
14701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC02735
7EA32C>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0
EC3F800060137F150014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA248
5A485A0007140E5B4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247E
A325>I<BD12C0A25202809653>124 D E /Fm 39 122 df<EE3FFC4BB51280923907E007
C092391F8001E0DB3F0013F0037E13034B1307A24A5A18E04A48EB038094C7FCA314075D
A4140F5DA3010FB7FCA25F903A001F80007EA217FE023F5C92C7FCA216015F5C147E1603
5FA214FE4A13075FA30101140F5F4AECC1C0A2161F1783010316805CA2EF870013074A5C
EE0F8EEE079EEE03FC010FEC00F04A91C7FCA35C131FA2001C90CAFC127E5BEAFE3E133C
137CEAF878EA78F0EA3FE0EA0F80344C82BA2F>12 D<150C151C153815F0EC01E0EC03C0
EC0780EC0F00141E5C147C5C5C495A1303495A5C130F49C7FCA2133EA25BA25BA2485AA2
12035B12075BA2120F5BA2121FA290C8FCA25AA2123EA2127EA2127CA412FC5AAD1278A5
7EA3121C121EA2120E7EA26C7E6C7EA212001E5274BD22>40 D<140C140E80EC0380A2EC
01C015E0A2140015F0A21578A4157C153CAB157CA715FCA215F8A21401A215F0A21403A2
15E0A21407A215C0140F1580A2141F1500A2143EA25CA25CA2495AA2495A5C1307495A91
C7FC5B133E133C5B5B485A12035B48C8FC120E5A12785A12C01E527FBD22>I<EA03C0EA
07F0120F121F13F8A313F0EA07B0EA003013701360A213E013C01201EA038013005A120E
5A5A5A5A5A0D197A8819>44 D<387FFFF8A2B5FCA214F0150579941E>I<120EEA3F8012
7F12FFA31300127E123C0909778819>I<EB0780EB0FC0EB1FE0133FA314C01480EB0E00
90C7FCB2EA03C0487E487E121FA45B1207EA006013E05BA212015B120390C7FC5A120E5A
121812385A5A5A13347AA319>59 D<DB03FE130E92393FFF801E92B5EAE03C913903FE01
F0913A0FF000787CDA3FC0EB3CFC4AC7EA1FF802FE140FEB03FC49481407494815F04948
1403495A5C49C813E05B485A5B000317C0485AA2485A1880485A94C7FCA2485AA3127F5B
A312FF90CBFCA41738A217784816707E17F06C5E16015F16036C6C4A5A94C7FC001F150E
6D141E000F5D6D5C6C6C495A6C6CEB03C0D801FEEB0F8027007F807EC8FC6DB45A010F13
E0010090C9FC373D74BA3B>67 D<0103B612FEEFFFC018F0903B0007F8000FF84BEB03FC
EF00FE020F157FF03F804B141F19C0021F150F19E05D1807143F19F05DA2147FA292C8FC
A25C180F5CA2130119E04A151FA2130319C04A153FA201071780187F4A1600A2010F16FE
A24A4A5A60011F15034D5A4A5D4D5A013F4B5A173F4A4AC7FC17FC017FEC03F84C5A91C7
EA1FC04949B45A007F90B548C8FCB712F016803C397CB83F>I<0103B512F8A390390007
F8005DA2140FA25DA2141FA25DA2143FA25DA2147FA292C7FCA25CA25CA21301A25CA213
03A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA25C
25397CB820>73 D<0107B512FCA25E9026000FF8C7FC5D5D141FA25DA2143FA25DA2147F
A292C8FCA25CA25CA21301A25CA21303A25CA21307A25CA2130F170C4A141CA2011F153C
17384A1478A2013F157017F04A14E01601017F140317C091C71207160F49EC1F80163F49
14FF000102071300B8FCA25E2E397BB834>76 D<902603FFF891B512E0A281D900079238
07F8006F6E5A61020F5E81DA0E7F5DA2021E6D1307033F92C7FC141C82DA3C1F5C70130E
EC380FA202786D131E0307141C147082DAF003143C70133814E0150101016E1378030014
705C8201036E13F0604A1480163F010715C1041F5B91C7FC17E149EC0FE360010E15F316
07011E15FF95C8FC011C80A2013C805F1338160013785F01F8157CEA03FC267FFFE0143C
B51538A243397CB83E>78 D<0107B612F817FF1880903B000FF0003FE04BEB0FF0EF03F8
141FEF01FC5DA2023F15FEA25DA2147FEF03FC92C7FCA24A15F817074A15F0EF0FE01301
EF1FC04AEC3F80EFFE0001034A5AEE0FF091B612C04CC7FCD907F8C9FCA25CA2130FA25C
A2131FA25CA2133FA25CA2137FA291CAFCA25BA25B1201B512FCA337397BB838>80
D<0103B612F017FEEFFF80903B0007F8003FC04BEB0FF01707020FEC03F8EF01FC5DA202
1F15FEA25DA2143FEF03FC5DA2027FEC07F818F092C7120F18E04AEC1FC0EF3F004A14FE
EE01F80101EC0FE091B6128004FCC7FC9138FC003F0103EC0F80834A6D7E8301071403A2
5C83010F14075F5CA2011F140FA25CA2133F161F4AECE007A2017F160F180E91C7FC4902
0F131C007F01FE153CB5913807F078040313F0CAEAFFE0EF3F80383B7CB83D>82
D<0007B812E0A25AD9F800EB001F01C049EB07C0485AD900011403121E001C5C003C1780
1403123800785C00701607140700F01700485CA2140FC792C7FC5DA2141FA25DA2143FA2
5DA2147FA292C9FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CEB3FF000
7FB512F8B6FCA2333971B83B>84 D<14F8EB07FE90381F871C90383E03FE137CEBF80112
0148486C5A485A120FEBC001001F5CA2EA3F801403007F5C1300A21407485C5AA2140F5D
48ECC1C0A2141F15831680143F1587007C017F1300ECFF076C485B9038038F8E391F0F07
9E3907FE03FC3901F000F0222677A42A>97 D<133FEA1FFFA3C67E137EA313FE5BA31201
5BA312035BA31207EBE0F8EBE7FE9038EF0F80390FFC07C013F89038F003E013E0D81FC0
13F0A21380A2123F1300A214075A127EA2140F12FE4814E0A2141F15C05AEC3F80A21500
5C147E5C387801F8007C5B383C03E0383E07C0381E1F80D80FFEC7FCEA01F01C3B77B926
>I<147F903803FFC090380FC1E090381F0070017E13784913383901F801F83803F00312
0713E0120FD81FC013F091C7FC485AA2127F90C8FCA35A5AA45AA3153015381578007C14
F0007EEB01E0003EEB03C0EC0F806CEB3E00380F81F83803FFE0C690C7FC1D2677A426>
I<ED01F815FFA3150316F0A21507A216E0A2150FA216C0A2151FA21680A2153FA202F813
00EB07FE90381F877F90383E03FF017C5BEBF80112013803F00048485B120FEBC001121F
5DEA3F801403127F01005BA214075A485CA2140FA248ECC1C0A2141F15C3ED8380143F15
87007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0253B77
B92A>I<147F903803FFC090380FC1E090383F00F0017E13785B485A485A485A120F4913
F8001F14F0383F8001EC07E0EC1F80397F81FF00EBFFF891C7FC90C8FC5A5AA55AA21530
007C14381578007E14F0003EEB01E0EC03C06CEB0F806CEB3E00380781F83803FFE0C690
C7FC1D2677A426>I<ED07C0ED1FF0ED3E38ED7C3CEDF8FC15F9140115F1020313F8EDF0
F0160014075DA4140F5DA4141F5D010FB512C05B16809039003F800092C7FCA45C147EA4
14FE5CA413015CA413035CA413075CA4130F5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE
3C137C1378EAF8F01278EA3FC0EA0F80264C82BA19>I<EC07C0EC3FF09138FC38E09039
01F01FF0EB03E0903807C00FEB0F80011F1307D93F0013E05B017E130F13FE4914C01201
151F1203491480A2153F1207491400A25DA249137EA215FEA25D00031301140314076C6C
485A0000131FEB787BEB3FF390380FC3F0EB00031407A25DA2140F5D121C007E131F5D00
FE49C7FC147E5C387801F8387C07E0381FFF80D803FEC8FC24367CA426>I<EB03F0EA01
FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B90387E07F0EC1FFCEC783E9038FF
E01F02C01380EC800F1400485A16C05B49EB1F8012035BA2153F000715005BA25D000F14
7E5B15FE5D121FD98001131C15F8163C003F01031338010013F0A216704814E0007E15F0
16E0EDE1C000FE903801E38048903800FF000038143C263B7BB92A>I<EB01C0EB07E014
F0130F14E01307EB038090C7FCAB13F0EA03FCEA071EEA0E1F121CA212385B1270A25BEA
F07E12E013FEC65AA212015B1203A25B12075BA2000F13E013C013C1001F13C01381A2EB
83801303EB0700A2130E6C5AEA07F8EA01E0143879B619>I<150E153F157FA3157E151C
1500ABEC1F80EC7FC0ECF1F0EB01C090380380F813071401130F130E131EEB1C03133C01
3813F0A2EB0007A215E0A2140FA215C0A2141FA21580A2143FA21500A25CA2147EA214FE
A25CA21301A25CA213035C121C387E07E0A238FE0FC05C49C7FCEAF83EEA787CEA3FF0EA
0FC0204883B619>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B
017EEB0F80ED3FE015F09039FE01C1F09038FC0387EC0707140E0001011C13E0EBF83891
383003800270C7FC00035BEBF1C0EBF38001FFC8FCEA07FC7FEBFFC0EBE7F8380FE1FCEB
C07E147F80001F809039801F81C0A21583003F013F138001001303A21507481500007E13
3EEC1E0E151E00FE6D5A48EB07F80038EB01E0243B7BB926>I<EB0FC0EA07FFA3EA001F
1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120F
A25BA2121FA25BA2123FA290C7FCA25AA2EA7E0EA212FE131EEAFC1CA2133C133812F813
78EA7870EA7CE0121FEA0F80123B79B915>I<D801E001FEEB07F03C07F803FF801FFC3C
0E3C0F07C0783E3C1E3E3C03E1E01F261C1F78D9F3C013803C383FF001F7800F02E01400
007801C013FE007018C002805B4A4848EB1F80EAF07FD8E07E5CA200000207143F01FE17
00495CA2030F5C0001177E495C18FE031F5C120349DA8001131C18F8033F153C00070403
133849020013F0A24B1570000F17E049017E15F019E003FEECE1C0001FEE01E349499038
00FF000007C70038143C3E2679A444>I<D801E013FE3A07F803FF803A0E3C0F07C03A1E
3E3C03E0261C1F787F39383FF00114E0007813C000708114804A485AEAF07FEAE07EA200
00140701FE5C5BA2150F00015D5B151F5E12034990383F8380160316070007027F130049
137EA2160E000F147C49141E161C5E001FEC3C7849EB1FE00007C7EA0780292679A42F>
I<147F903803FFC090380FC1F090381F00F8017E137C5B4848137E4848133E0007143F5B
120F485AA2485A157F127F90C7FCA215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0
140F007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F03803FFC0C648C7FC202677
A42A>I<9039078007C090391FE03FF090393CF0787C903938F8E03E9038787FC0017049
7EECFF00D9F0FE148013E05CEA01E113C15CA2D80003143FA25CA20107147FA24A1400A2
010F5C5E5C4B5A131F5EEC80035E013F495A6E485A5E6E48C7FC017F133EEC70FC90387E
3FF0EC0F8001FEC9FCA25BA21201A25BA21203A25B1207B512C0A3293580A42A>I<3903
C003F0390FF01FFC391E783C0F381C7C703A3C3EE03F8038383FC0EB7F80007815000070
1300151CD8F07E90C7FCEAE0FE5BA2120012015BA312035BA312075BA3120F5BA3121F5B
A3123F90C9FC120E212679A423>114 D<14FE903807FF8090380F83C090383E00E04913
F00178137001F813F00001130313F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C
7F6D13807F010F13C01300143F141F140F123E127E00FE1480A348EB1F0012E06C133E00
705B6C5B381E03E06CB45AD801FEC7FC1C267AA422>I<EB0380EB07C0130FA4131F1480
A3133F1400A35B137E007FB5FCA2B6FC3800FC00A312015BA312035BA312075BA3120F5B
A3121FEB801CA2143C003F1338EB0078147014F014E0EB01C0EA3E03381F0780380F0F00
EA07FCEA01F0183579B31C>I<13F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C
0038140F131F007815C01270013F131F00F0130000E015805BD8007E133FA201FE14005B
5D120149137EA215FE120349EBFC0EA20201131E161C15F813E0163CD9F0031338140700
01ECF07091381EF8F03A00F83C78E090393FF03FC090390FC00F00272679A42D>I<01F0
130ED803FC133FD8071EEB7F80EA0E1F121C123C0038143F49131F0070140FA25BD8F07E
140000E08013FEC6485B150E12015B151E0003141C5BA2153C000714385B5DA35DA24A5A
140300035C6D48C7FC0001130E3800F83CEB7FF8EB0FC0212679A426>I<01F01507D803
FC903903801F80D8071E903907C03FC0D80E1F130F121C123C0038021F131F49EC800F00
701607A249133FD8F07E168000E0ED000313FEC64849130718000001147E5B03FE5B0003
160E495BA2171E00070101141C01E05B173C1738A217781770020314F05F000301071301
6D486C485A000190391E7C07802800FC3C3E0FC7FC90393FF81FFE90390FE003F0322679
A437>I<903907E007C090391FF81FF89039787C383C9038F03E703A01E01EE0FE3803C0
1F018013C0D8070014FC481480000E1570023F1300001E91C7FC121CA2C75AA2147EA214
FEA25CA21301A24A1370A2010314F016E0001C5B007E1401010714C000FEEC0380010F13
07010EEB0F0039781CF81E9038387C3C393FF03FF03907C00FC027267CA427>I<13F0D8
03FCEB01C0D8071EEB03E0D80E1F1307121C123C0038140F4914C01270A249131FD8F07E
148012E013FEC648133F160012015B5D0003147E5BA215FE00075C5BA214015DA314035D
14070003130FEBF01F3901F87FE038007FF7EB1FC7EB000F5DA2141F003F5C48133F92C7
FC147E147C007E13FC387001F8EB03E06C485A383C1F80D80FFEC8FCEA03F0233679A428
>I E /Fn 32 120 df<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA7FFCEA3FF8EA1FF0EA
07C00F0F788E1F>46 D<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB7
12FCA5264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE
3A0FE0007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881
A46C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A
90C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A
49C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF0
010713FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE
001F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FF
FEC7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3
EA0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF04913
00D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<EE1F
80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F80161F82033F80ED3E07
037E80157C8203FC804B7E02018115F0820203814B137F0207815D173F020F814B7F021F
8292C77EA24A82023E80027E82027FB7FCA291B87EA2498302F0C8FCA20103834A157F01
07834A153FA249488284011F8491C97E4984133E017E82B6020FB612F0A54C457CC455>
65 D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B539E001FF0F
4949C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F4849163F48
49161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FFAE127F7F1A
F0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE1F006D6C5E
6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001FF80023F90
B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>67
D<BA1280A419C026003FFEC7121F1701EF007F183F181F180F180719E01803A31801A3EE
01E0F000F0A419001603A31607160F167F91B6FCA59138FE007F160F16071603A31601A6
93C9FCAFB712F0A53C447CC346>70 D<B712E0A5D8001F90C7FCB3B3B3A4B712E0A52344
7DC32A>73 D<B64BB512FE8181A281D8003F6D91C7EA780081013D7F81133C6E7E6E7F6E
7F6E7F6E7F82806E7F6E7F6F7E6F7F83816F7F6F7F6F7F6F7F6F7F8382707F707F707F70
7F8482707F707F717E7113807113C019E0837113F07113F87113FC7113FE19FF847213F8
84848484A28484197F193F191FA2190F1907B61603190119001A78A24F447CC358>78
D<923807FFC092B512FE0207ECFFC0021F15F091267FFE0013FC902601FFF0EB1FFF0107
0180010313C04990C76C7FD91FFC6E6C7E49486F7E49486F7E01FF8348496F7E48496F13
80A248496F13C0A24890C96C13E0A24819F04982003F19F8A3007F19FC49177FA400FF19
FEAD007F19FC6D17FFA3003F19F8A26D5E6C19F0A26E5D6C19E0A26C6D4B13C06C19806E
5D6C6D4B13006C6D4B5A6D6C4B5A6D6C4B5A6D6C4A5B6D01C001075B6D01F0011F5B0101
01FE90B5C7FC6D90B65A023F15F8020715C002004AC8FC030713C047467AC454>I<B812
F8EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E727EA28684A286
A762A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F818E018F892
C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F72141EB700E0
6DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>82
D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801FFF3907FC
00014848EB007F4848143F4848140F491407007F15035B1601160012FF177CA27FA26D15
3C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C826C6C
81011F810107811300020F80140003077FED007F82040F1380828212F082A282A27EA218
007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F
92C7FCD8F80714FC48C614F0480107138031467AC43E>I<B600FE017FB691B512FEA526
007FFCC8D83FFEC9EA7C006E82013F701778807415F86D705F6F7014016D705FA26F7014
036D64814E6D14076D646F70140F6D041E94C7FCA26F023E6D5C6DDC3C7F151E81027F03
7C6D5CF0783F6F70147C023F4B6C1578A26F01016F13F86E4B6C5D16806E02036F485A4E
7E04C0EEE0036E4A486C5DA2DCE00FEDF0076E4B6C5D16F06E4A6F48C8FC051E7F04F870
5A6E4A027F131EA2DCFC7CEDFE3E037F0178023F133C04FE16FF033F01F85E4D8004FF17
F86F496E5BA36F496E5BA26F604D80A26F90C86C5BA36F486F90C9FCA26F48167EA30478
163C6F457EC374>87 D<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB
1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC130701
3F13F19038FFFC01000313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C
5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9
FC322F7DAD36>97 D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DF
C03FFC9139FF000FFE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318
FCAC18F8A2177F18F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC0
7FFC496CB512F0D9F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49B512C001
0F14F0013F14FC90397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A
6F1300007F6E5AED00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F1680
6D140F6C6DEB1F006C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038
003FF82A2F7CAD32>I<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F
013F14CF9039FFF807FF48EBC00148903880007F4890C7123F4848141F49140F121F485A
A3127F5BA212FFAC127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C0
0314FC6C9038F01FEF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>
I<EC3FF80103B57E010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48
486D1380485A001FED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FC
A5127FA27FA2123F17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB
3F0090397FFE01FE011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EDFF
80020F13E0027F13F049B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2
ED0FFCEBFFE0ED03F0ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC5
22>I<DAFFE0137E010F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001F
F84848EB0FFC4848903907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FC
A26D5B000F5D6C6C495A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0
000F90CAFCA47F7F7F90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0
C77ED83FC014074848020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A
5AD80FFEEC3FF83B07FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32
427DAC38>I<137C48B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90
C7FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC520>105 D<EB7FC0B5FCA512037E
B293387FFFE0A593380FE0004C5A4CC7FC167E5EED03F8ED07E04B5A4B5A037FC8FC15FE
ECC1FCECC3FE14C7ECDFFF91B57E82A202F97F02E17F02C07FEC807F6F7E826F7E816F7F
836F7F816F7F83707E163FB60003B512F8A535457DC43B>107 D<EB7FC0B5FCA512037E
B3B3B3A3B61280A519457CC420>I<90277F8007FEEC0FFCB590263FFFC090387FFF8092
B5D8F001B512E002816E4880913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F
009026FF3E007F6C019E6D013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B600
81B60003B512FEA5572D7CAC5E>I<90397F8007FEB590383FFF8092B512E0028114F891
3987F03FFC91388F801F000390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B600
83B512FEA5372D7CAC3E>I<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FF
C0017F48496C7F4848C7EA3FE000078248486E7E49140F001F82A2003F82491407007F82
A400FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE0
6C6D485B27007FF80F90C7FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>
I<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1FFE000313BE6C13BC14F8
A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>114
D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48C7121F127E00FE
140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC6C800003806C15
806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA26C15C06C141FA2
6DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C
>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA4C6
01E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC1F006DB5FC6D
13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB50103B5FCA50003EC000F6C81
B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C7010F1407010313FE
9026007FF0EBFC00372E7CAC3E>I<B6903803FFFCA5000101E09038003E006C163C8001
7F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6D
EBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90
C8FCA26E5AA26E5AA21578362C7EAB3B>I<B5D8FE1FB539801FFFF0A500019027C0003F
E0C7EA7C007114786E17F86C6F6C5C6E1601017F6E6C5CA26E011F1403013F6F5C6E013F
1407011F6F5CA26E0179140F010F048090C7FC6E01F95C6D02F0EBC01E15806D902681E0
7F5B18E003C3157C6D9139C03FF07815E76DDA801F5B18F803FF14F96E9039000FFDE018
FF6E486D5BA36E486D5BA26E486D90C8FCA24B7F02075DA26E48147C4B143C4C2C7EAB51
>I E /Fo 44 123 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3
12011380120313005A1206120E5A5A5A12600B1D78891B>44 D<B612C0A61A067F9721>
I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>I<14FF010713E090381F81F8
90383E007C01FC133F4848EB1F8049130F4848EB07C04848EB03E0A2000F15F049130100
1F15F8A2003F15FCA390C8FC4815FEA54815FFB3A46C15FEA56D1301003F15FCA3001F15
F8A26C6CEB03F0A36C6CEB07E0000315C06D130F6C6CEB1F806C6CEB3F00013E137C9038
1F81F8903807FFE0010090C7FC28447CC131>48 D<143014F013011303131F13FFB5FC13
E713071200B3B3B0497E497E007FB6FCA3204278C131>I<49B4FC010F13E0013F13FC90
38FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8A21507
7F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0EC1FC0
D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC150316FEA2
150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407003015F80038140F
6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E0010190
C7FC28447CC131>51 D<ED0380A21507150FA2151F153FA2157F15FFA25CEC03BF153F14
071406140C141C141814301470146014C013011480EB03005B13065B131C13185B137013
6013E0485A5B120390C7FC1206120E120C5A123812305A12E0B812C0A3C8383F8000ADED
FFE0027FEBFFC0A32A437DC231>I<000615C0D807C0130701FCEB7F8090B612005D5D5D
15E0158026063FFCC7FC90C9FCAE14FF010713C090381F01F090383800FC01F0137ED807
C07F49EB1F8016C090C7120F000615E0C8EA07F0A316F81503A216FCA5123E127F487EA4
16F890C712075A006015F0A20070140F003015E00038EC1FC07E001EEC3F806CEC7F006C
6C13FE6C6C485A3901F807F039007FFFE0011F90C7FCEB07F826447BC131>I<EC07FCEC
3FFF91B512C0903903FC03E0903907E000F0D91FC0133849C71258017EEB01FC01FE1303
491307485A485AA24848EB03F8000FEC01F092C7FC485AA3485AA3127FA29038007F8090
3801FFF090380780FC39FF0E003E49EB1F8049EB0FC049EB07E0136001E0EB03F04914F8
150116FC5BED00FEA390C812FFA47EA57F123FA216FE121F15016D14FC120FED03F86C7E
ED07F06C6C14E06C6CEB0FC06C6CEB1F80017EEB3F0090383F80FE90380FFFF8010313E0
0100138028447CC131>I<ED1FFC4AB512C0913907E003F0021EC7123C0278140FD901E0
EC03C0D90380EC00E0010FC91278011C161C4982498249707E4916010001844848D90FF0
6D7E90C7D83FFC146048DAFC0F1470000E902703F003C07F000C902707C000E01318001C
D91F800170131C0018013F6E130C003891C76C130E0030017E91380FF00614FE00704902
071307D8600183A2495AA200E019804848481601AB6C6C7E1260A26D7E1903D870001800
00306D140F147E00386D141F00186E013F5B001C011F02771306000CD907C09038E3F80E
000E902703F003C35B6C903B00FC0F00FC386CDA3FFCEB7FF06DD90FF0EB0FC06C6C90CB
FC12007F13707F7F010FEF1F80D90380167FD901E0923803FE00D90078ED1FF0021E9138
01FF80DA07E0D97FF8C7FC0201B6C8FCDA001F13C041477BC54C>64
D<DB0FFE146092B500C013E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D9
03FCEC03C74948EC01E74948EC00FF4948157F4948153F4948151F49C9120F485A491607
120348481603A248481601A248481600A2123FA2491760127FA31900485AAE6C7EA21960
A2123F7FA2001F18E07F000F18C0A26C6C160119806C6C160312016DEE07006C6C16066D
6C150E6D6C5D6D6C5D6D6C15786D6C5D6D6C4A5AD900FFEC0780DA3FC0011FC7FCDA0FFC
13FC0203B512F0020014C0DB0FFEC8FC3B487BC546>67 D<B912F8A3000101C0C7127F6C
6C48EC07FC17011700187C183C181CA284A31806A4180704067FA395C7FCA4160EA2161E
163E16FE91B5FCA3EC8000163E161E160EA21606A319C0A3F0018093C7FCA41803A21900
A260A260A2181EA2183E187EEF01FE170748486C147FB95AA33A447CC342>69
D<B612F0A3C6EBF0006D5A6D5AB3B3B3A4497E497EB612F0A31C447DC323>73
D<010FB512FEA3D9000313806E130080B3B3AB123F487E487EA44A5A13801300006C495A
00705C6C13076C5C6C495A6CEB1F802603E07FC7FC3800FFFCEB1FE027467BC332>I<B6
12F8A3000101E0C9FC6C6C5A5CB3B31830A418701860A518E0A3EF01C0A217031707A217
0F173F177FEE01FF48486C011F1380B9FCA334447CC33D>76 D<B56C933807FFFC6E5EA2
0001F1FE0026006FE0EE1BF8A3D967F01633A2D963F81663A3D961FC16C3A3D960FEED01
83A2027FED0303A36E6C1406A36E6C140CA26E6C1418A36E6C1430A36E6C1460A26E6C14
C0A36E6CEB0180A3037FEB0300A292383F8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA3
6F6C5AA26FB45AA370C7FC13F0A2486C143ED80FFFEF0FFEB500F0011C0107B512FCA34E
447BC359>I<B712FCEEFFC017F800019039C0000FFC6C6C48EB01FF9338007F80EF1FE0
170FEF07F018F8EF03FCA218FE1701A218FFA718FEA2170318FCA2EF07F818F0EF0FE0EF
1FC0EF7F80933801FE00EE0FFC91B612F017800280C9FCB3AA3801FFE0B612C0A338447C
C342>80 D<B712E016FF17C000019039C0003FF86C6C48EB03FCEE00FF717E717E717E71
7E717EA284170384A760A21707604D5AA24D5A4D5A4DC8FCEE01FEEE07F8EE3FE091B6C9
FC16FC913980007F80EE0FE0707EEE03FC707E160083717EA2717EA784A71A6084171FA2
1AE0716C13C02601FFE002071301B600C01680943801FC03943900FE0700CBEA3FFEF007
F843467CC348>82 D<49B41303010FEBE007013F13F89039FE00FE0FD801F8131FD807E0
EB079F49EB03DF48486DB4FC48C8FC4881003E81127E82127C00FC81A282A37E82A27EA2
6C6C91C7FC7F7FEA3FF813FE381FFFE06C13FE6CEBFFE06C14FC6C14FF6C15C0013F14F0
010F80010180D9001F7F14019138001FFF03031380816F13C0167F163F161F17E000C015
0FA31607A37EA36C16C0160F7E17806C151F6C16006C5D6D147ED8FBC05CD8F9F0495AD8
F07C495A90393FC00FE0D8E00FB51280010149C7FC39C0003FF02B487BC536>I<003FB9
12F8A3903BF0001FF8001F01806D481303003EC7150048187C0078183CA20070181CA300
60180CA5481806A5C81600B3B3A54B7EED7FFE49B77EA33F447DC346>I<B600C0010FB5
FCA3000101E0C813F026007F80ED1F80F00F00A21806B3B3A7180E6D6C150CA2181C131F
6E1518010F163818306D6C1570606D6C14016D6C5D6D6CEC0780027F4AC7FC6E6C131EDA
1FE0137C913907FC03F00201B55A6E6C1380DB07FCC8FC40467CC349>I<B60107B500F8
90380FFFFEA3000301E0D9001F90C813F06C0180DA0FFCED3FC091C86C48ED1F006C871C
0E6D6C6E7E1C0CA26D6C6F5DA36EDA06FF1538011F1A30A26E020E6D1470010FDB0C7F15
60A26E021C7F0107DB183F5DA2856D6CDA301F4A5AA36D6C4A6C6C49C7FCA36D6C4A6C6C
1306A3DB80016E130E027FDA8003140CA2DBC00380023FDA00015CA203E081021F01066D
5CA36E6C486E6C5AA36E6C486E6C5AA36F48EC1FE1020360A2DBFE7015F302010160020F
90C8FCA2DBFFE015FB6E49EC07FEA36F486E5AA36FC86C5AA3031E6F5AA4030C16605F46
7EC364>87 D<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC013
7E486C137F6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF
00EA03FC485A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0
C0003F13013A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31
>97 D<EA01FC12FFA3120712031201B3EC03FC91380FFF8091383C07E091387001F89039
FDE0007E02807F01FFEC1F8091C713C049EC0FE049140717F0A2EE03F8A217FCA2160117
FEAB17FC1603A217F8A2EE07F0A26DEC0FE017C06D141F01FBEC3F80D9F380EB7E00D9E1
C05B9039E0F001F89039C03C07E09039801FFF80C7D803FCC7FC2F467DC436>I<EC7F80
903803FFF090380FC07C90383F000F01FCEB03804848EB01C00003140F4848EB1FE04913
3F120F485AA2485AED1FC0007FEC070092C7FCA290C9FC5AAB7E7FA2123F16307F001F15
706C6C146016E06C6C14C06C6C13010001EC03806C6CEB0700013F131E90381FC0789038
07FFF001001380242E7DAC2B>I<167FED3FFFA315018182B3EC7F80903803FFF090380F
C07C90383F000E017E1307496D5AD803F87F48487F5B000F81485AA2485AA2127FA290C8
FC5AAB7E7FA2123FA26C7EA2000F5D7F6C6C5B00035C6C6C9038077F806C6C010E13C001
3F011C13FE90380FC0F8903803FFE09026007F0013002F467DC436>I<EB01FE903807FF
C090381F03F090387E00FC49137E48487F485A4848EB1F80000F15C049130F121F484814
E01507A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670000F
15606D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90381F80F8903803FF
E0010090C7FC242E7DAC2B>I<EE0F80D901FCEB7FE0903A0FFF81F0F090393F07E38190
39FC01FF033A01F800FE014848017E13E00007027FC7FC497F000F8149131F001F81A900
0F5D6D133F000792C7FC6D5B0003147E6C6C5B6D485A3903BF07E090380FFF80260701FC
C8FC90CAFCA25AA37F6C7E7F90B512F86C14FF16E06C15F86C6C8048B67E3A07C0000FFF
48481300003FC8EA3F80003E151F48ED0FC0A2481507A56C150F007C1680007E151F003E
16006C153E6C6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFEC7FC010113E0
2C427DAC31>103 D<EA01FC12FFA3120712031201B3EC01FE913807FFC091381E07F091
383801F802707FECE000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F8
3F13FEA32F457DC436>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA3
120712031201B3B0487EB512F8A315437DC21C>I<143C14FFA2491380A46D1300A2143C
91C7FCADEC7F80EB3FFFA31300147F143FB3B3AA123E127F39FF807F00A2147EA25C6C48
5A383C01F06C485A3807FF80D801FEC7FC195785C21E>I<EA01FC12FFA3120712031201
B3A292381FFFE0A36F1300ED07F816E05E5E030EC7FC5D5D5D5D4A5A4A5A4AC8FC5CEC3F
804A7E14FF9038FDCFE09038FF8FF01407496C7E01FC7F14016E7E81816F7E82151F6F7E
821507826F7E8282486C491380B5D8F81F13F8A32D457DC433>I<EA01FC12FFA3120712
031201B3B3B3A5487EB512F8A315457DC41C>I<D801FC01FFEC1FE000FF010701E0EBFF
FC913B0F03F801E07F913C3C01FC07803F800007903C7000FE0E001FC0000349D97E1C13
0F2601FDC0D97F38804A143001FFDA3FF06D7E91C75BA2495DA3495DB3A8486C4A6C497E
B5D8F81FB50003B512E0A34B2C7DAB52>I<3901FC01FE00FF903807FFC091381E07F091
383801F8000701707F0003EBE0002601FDC07F5C01FF147F91C7FCA25BA35BB3A8486CEC
FF80B5D8F83F13FEA32F2C7DAB36>I<EC7F80903803FFF090380FC0FC90383E001F496D
7E496D7E48486D7E48486D7E48486D7E000F81A24848147E003F157FA290C87E481680A4
4816C0AA6C1680A26D147F003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A
6C6C495A6C6C495A013E49C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>I<39
01FC03FC00FF90380FFF8091383C07E091387001F83A07FDE000FE00010180137F01FFEC
3F8091C7EA1FC04915E049140F17F0160717F8160317FCA3EE01FEABEE03FCA3EE07F8A2
17F0160F6D15E0EE1FC06D143F17806EEB7E00D9FDC05B9039FCF003F891383C0FE09138
1FFF80DA03FCC7FC91C9FCAE487EB512F8A32F3F7DAB36>I<3903F803F000FFEB1FFCEC
3C3EEC707F0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FC
B512FEA3202C7DAB26>114 D<90383FE0183901FFFC383907E01F78390F0003F8001E13
01481300007C1478127800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC
6C13FF6C14C06C14E0C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA2
7EA36C143C6C147C15786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF0
1F2E7DAC26>I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C6
48C7FCB3A4150CAA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801
FFC09038007F001E3E7EBC26>I<D801FC147F00FFEC3FFFA300071401000380000181B3
A85EA35DA212006D5B017E9038077F80017F010E13C06D011C13FE90380FC078903803FF
F09026007F8013002F2D7DAB36>I<B500E0B539E03FFF80A30007903C000FFE000FFC00
D803FCD903F8EB03F8F001E0120103015D6D80000060A26D6E13036DD9037E91C7FCA202
80017F5B013FD9063F1306A2D91FC06E5AED0C1FA2D90FE06E5AED180FA2D907F06E5AED
3007A2D903F86E5AED6003A2902601FCE06D5AEDC00117FCD900FFECFD80ED800017FF02
7F92C8FC92C77EA26E147E023E143EA2021E143C021C141CA2412C7EAA46>119
D<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E0000150C6D141C6D1418
A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C485AA2ECF803010391C7FCA29038
01FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FCA2
1406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C0380D87007C9FCEA3C1EEA0FFCEA
03F02E3F7EAA33>121 D<003FB612E0A29038C0003F90C713C0003CEC7F800038ECFF00
A20030495A0070495AA24A5A0060495AA24A5A4A5AA2C7485A4AC7FC5B5C495A13075C49
5A131F4A1360495A495AA249C712C0485AA2485A485A1501485A48481303A24848EB0780
4848131F00FF14FF90B6FCA2232B7DAA2B>I E /Fp 26 118 df<B712F0AB240B7F9F2D>
45 D<EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5AC8FCB3EA07F048
7E487E487E487EB51280A76C13006C5A6C5A6C5A6C5A113576B425>58
D<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA803F0203
DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901
F8824949824949824949824949824990CA7E494883A2484983485B1B7F485B481A3FA248
49181FA3485B1B0FA25AA298C7FC5CA2B5FCAE7EA280A2F307C07EA36C7FA21B0F6C6D19
80A26C1A1F6C7F1C006C6D606C6D187EA26D6C606D6D4C5A6D6D16036D6D4C5A6D6D4C5A
6D01FC4C5A6D6DEE7F806D6C6C6C4BC7FC6E01E0EC07FE020F01FEEC1FF80203903AFFE0
01FFF0020091B612C0033F93C8FC030715FCDB007F14E0040101FCC9FC525479D261>67
D<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA803F0203
DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901
F8824949824949824949824949824990CA7E494883A2484983485B1B7F485B481A3FA248
49181FA3485B1B0FA25AA298C8FC5CA2B5FCAE6C057FB712E0A280A36C94C7003FEBC000
A36C7FA36C7FA27E6C7FA26C7F6C7FA26D7E6D7F6D7F6D6D5E6D7F6D01FC93B5FC6D13FF
6D6C6D5C6E01F0EC07FB020F01FEEC1FF10203903AFFF001FFE0020091B6EAC07F033FEE
001F030703FC1307DB007F02E01301040149CAFC5B5479D26A>71
D<B812C0A5D8000701F8C7FCB3B3B3B2B812C0A52A527CD132>73
D<B812F8A5D8000701F8CAFCB3B3A91A7CA41AFC1AF8A51901A31903A219071AF0190FA2
191F193F197F19FF180360183F4DB5FCBB12E0A546527CD151>76
D<BAFC19F819FF1AE086D8000701F0C7001F13FC060113FF726C13807313C0070F13E01B
F0857313F81BFCA27313FEA41BFFA81BFEA31BFC61A21BF84F13F04F13E0614F13C04F13
004E485A061F5B92B812F01AC04FC7FC19E003F8CBFCB3AEB812C0A550527CD15C>80
D<B700FC017FB600FE91B612F0A5D8003F01C0C8001F01E0C9EBF8006F71EE0FC06D7161
876F1C1F6D7196C7FC6F8373606D1E3E6F836D7160876F1CFC6D666F4B801F016D66704A
806E525A88704A17076E059F5F70021F80080F160F6E6570023F806EDC3E074CC8FC8870
027E5F6EDC7C03163E7002FC804F6C167E6E1C7C700101814F6C16FC6E745B7001031701
6E4C6D5D060716C00580496D14036F63DDC00F16E04F6D14076F07F05BDDE01F170F6F92
C76C5D1DF8DDF03E6E141F6F98C9FCDDF87E16FC067C6E5C6FF1FE3EDDFCFC177E6F4A6E
147C1DFFDDFFF06E14FC6F62A24E816F62A270496F5BA24E817061A295C97E7061A27048
7090CAFCA37048705AA24D1601040360A27048705A84537DD18B>87
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<EB3FF0B5FCA51203C6FCB3A4923801FFE0030F13FE033FEBFFC092B612F002F301017F
913AF7F8003FFEDAFFE0EB0FFF03806D7F92C76C7F4A6E7F4A824A6E7FA2727EA285A285
84A31A80AC1A00A44E5AA36118FF616E4A5BA26E4A5B6E4A5B6F495BDACFC04990C7FCDA
87F0EB7FFC913A03FE03FFF849C6B612E0496D148049011F01FCC8FC90C7000313C04154
7BD24B>I<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001
FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A48
92C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC
3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC
020113E033387CB63C>I<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0021F13FC91
B6FC010315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F4849143F484980
485B83485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E6C6D5C6C
6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101ECFE0FD9
003F13F8020301C049C7FC41547CD24B>I<913803FFC0023F13FC49B6FC010715C04901
817F903A3FFC007FF849486D7E49486D7E4849130F48496D7E48178048497F18C0488191
C7FC4817E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01
F06E14037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE
903A0FFFC03FF8010390B55A010015C0021F49C7FC020113F034387CB63D>I<ED3FFC02
03B5FC020F14C0023F14E09139FFF81FF0499038C03FF849EB807F49903800FFFC495A49
5AA2495AA2EE7FF8495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3B3A7007FB5
12FEA52E547CD329>I<DA3FFF14FF0103B5D8F00713C0010FDAFC1F13E0013FECFF7F90
267FFC0F9038FF9FF09026FFE001EBF83F48496C13E0484990387FF01F4890C7D83FF813
E0489338FC0FC0F0078048486E6CC7FCA2003F82A9001F5EA26C6C4A5AA26C5E6C6D495A
6C6D495A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC01C314F02607C03F90C9FC91CBFC
A2120FA37FA213F813FE90B7FC6C16F817FF18C06C836C836C836D828448B9FC12074848
C700031480D81FF8EC003F4848150748486F13C083485A83A56D5D007F18806D5D003F18
006C6C4B5AD80FFEED1FFC6C6C6CEC7FF86C01E049485A6C01FE011F5B6C6CB71280010F
03FCC7FC010115E0D9000F01FCC8FC3C4F7CB543>I<EB3FF0B5FCA51203C6FCB3A4EE1F
FC93B512C0030314F0030F8092391FE07FFC92393F001FFE037C8003F07FDAF1E081ECF3
C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542537BD24B>I<137F497E
000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3
A6B612E0A51B547BD325>I<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225>108
D<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0011F6D7E030F6E017F8092271F
E07FFCD9FF037F922A3F001FFE01F8007F0003027C9126FF03E080C602F06DD90780137F
DAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A5EA44A5EB3
ACB6D8F807B6D8C03FB512FEA567367BB570>I<D93FF0EB1FFCB591B512C0030314F003
0F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502
FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>I<913801FFE0021F13FE91B6
12C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F4849
6D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A3
003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE
011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<
903A3FF001FFE0B5010F13FE033FEBFFC092B612F002F301017F913AF7F8007FFE0003D9
FFE0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4721380AC1A
0060A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EBFFFC9126FB
FE075B02F8B612E06F1480031F01FCC8FC030313C092CBFCB1B612F8A5414D7BB54B>I<
90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013
FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612
FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307
D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15
F86C14FF16C06C15F06C816C816C81C681013F1580010F15C01300020714E0EC003F0307
13F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC
7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB6
35>I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FC
A426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEB
FFF86D6C5B021F5B020313802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA50003ED
001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC090
3A0FFFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B>I
E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 716 374 a Fp(W)-11 b(orld-Wide)45 b(Computing)g
(Infrastructure:)1009 524 y(Global)g(and)g(Lo)t(cal)g(P)l(artnership)
605 839 y Fo(Satoshi)32 b(Sekiguc)m(hi)380 956 y(Electrotec)m(hnical)g
(Lab)s(oratory)429 1072 y(Umezono)g(1-1-4,)f(Tsukuba,)577
1188 y(Ibaraki)h(305,)g(Japan)574 1304 y(sekiguc)m(hi@etl.go.jp)2299
839 y(Mitsuhisa)h(Sato)1857 956 y(Real)e(W)-8 b(orld)32
b(Computing)f(P)m(artnership)2068 1072 y(T)-8 b(ak)m(ezono)34
b(1-6-1,)d(Tsukuba,)2219 1188 y(Ibaraki)h(305,)g(Japan)2166
1304 y(msato@trc.rw)m(cp.or.jp)588 1655 y Fn(Abstract)-83
1859 y Fm(The)58 b(world-wide)h(c)l(omputing)e(infr)l(astructur)l(e)f
(on)h(the)-182 1958 y(gr)l(owing)27 b(c)l(omputer)f(network)g(te)l
(chnolo)l(gy)i(is)e(a)h(le)l(ading)g(te)l(ch-)-182 2058
y(nolo)l(gy)g(to)f(make)h(a)g(variety)h(of)f(information)h(servic)l(es)
f(ac)l(c)l(es-)-182 2158 y(sible)d(thr)l(ough)g(the)g(Internet)e(for)j
(every)f(users)f(fr)l(om)h(the)g(high-)-182 2257 y(end)38
b(high)i(p)l(erformanc)l(e)f(c)l(omputing)g(users)e(thr)l(ough)i(many)
-182 2357 y(of)30 b(p)l(ersonal)h(c)l(omputing)g(users.)38
b(The)31 b(imp)l(ortant)g(fe)l(atur)l(e)e(of)-182 2457
y(such)e(servic)l(es)h(is)f(lo)l(c)l(ation)h(tr)l(ansp)l(ar)l(ency;)h
(information)f(c)l(an)-182 2556 y(b)l(e)i(obtaine)l(d)h(irr)l(esp)l(e)l
(ctive)g(of)g(time)f(or)g(lo)l(c)l(ation)h(in)f(virtual)t(ly)-182
2656 y(shar)l(e)l(d)k(manner.)49 b(In)33 b(this)h(article,)i(we)d(intr)
l(o)l(duc)l(e)g(Ninf,)i(an)-182 2755 y(ongoing)k(glob)l(al)h
(network-wide)g(c)l(omputing)f(infr)l(astructur)l(e)-182
2855 y(pr)l(oje)l(ct)33 b(which)h(al)t(lows)g(users)d(to)i(ac)l(c)l
(ess)f(c)l(omputational)i(r)l(e-)-182 2955 y(sour)l(c)l(es)21
b(including)h(har)l(dwar)l(e,)j(softwar)l(e)d(and)g(scienti\014c)f
(data)-182 3054 y(distribute)l(d)41 b(acr)l(oss)h(a)g(wide)g(ar)l(e)l
(a)g(network.)74 b(Pr)l(eliminary)-182 3154 y(p)l(erformanc)l(e)28
b(r)l(esult)e(on)h(me)l(asuring)g(softwar)l(e)h(and)f(network)-182
3254 y(overhe)l(ad)40 b(is)f(shown)h(that)f(pr)l(omises)g(the)g(futur)l
(e)f(r)l(e)l(ality)h(of)-182 3353 y(world-wide)32 b(network)d(c)l
(omputing.)-182 3700 y Fn(1.)37 b(In)m(tro)s(duction)-83
3930 y Fl(Remark)-5 b(able)20 b(gro)n(wth)g(of)h(computer)f(net)n(w)n
(ork)g(tec)n(hnology)-182 4030 y(has)33 b(spurned)h(a)g(v)-5
b(ariet)n(y)33 b(of)h(information)g(services)f(accessi-)-182
4129 y(ble)40 b(through)h(the)g(In)n(ternet.)76 b(The)41
b(imp)r(ortan)n(t)f(feature)g(of)-182 4229 y(suc)n(h)24
b(services)g(is)g(lo)r(cation)h(transparency;)f(information)g(can)-182
4329 y(b)r(e)36 b(obtained)g(irresp)r(ectiv)n(e)g(of)g(time)h(or)e(lo)r
(cation)h(in)g(a)g(vir-)-182 4428 y(tually)d(shared)g(manner.)55
b(Ho)n(w)n(ev)n(er,)33 b(most)g(existing)h(global)-182
4528 y(net)n(w)n(ork)c(services)h(suc)n(h)h(as)f(e-mail,)i(\014le)f
(arc)n(hiv)n(es,)f(and)h(the)-182 4628 y(WWW,)i(are)e(limited)i(to)f
(merely)f(sharing)g(data)g(resources.)-182 4727 y(The)37
b(global)e(net)n(w)n(ork)h(could)h(b)r(e)g(far)f(b)r(etter)i(utilized,)
i(em-)-182 4827 y(b)r(o)r(dying)31 b(the)h(p)r(oten)n(tial)g(to)g(pro)n
(vide)e(a)i(computational)f(en-)-182 4926 y(vironmen)n(t)f(to)g(share)g
(computational)g(resources)e(including)-182 5026 y(CPUs)k(and)h(disk)f
(storage.)51 b(The)32 b(coming)g(of)h(gigabit)f(infor-)-182
5126 y(mation)g(sup)r(er-high)n(w)n(a)n(y)f(will)i(further)g(enhance)g
(the)g(vision)-182 5225 y(of)i(w)n(orld-wide)e(global)h(computing)h
(resources,)g(b)r(eing)g(able)-182 5325 y(to)27 b(tap)i(in)n(to)e(p)r
(o)n(w)n(ers)g(of)h(enormous)f(n)n(um)n(b)r(ers)g(of)h(computers)1974
1655 y(with)g(idle)g(computation)f(cycles.)2073 1796
y(F)-7 b(rom)29 b(the)h(high)f(p)r(erformance)f(computing)h(p)r(ersp)r
(ectiv)n(e,)1974 1896 y(the)i(c)n(hallenging)e(application)g(programs)f
(require)h(the)i(abil-)1974 1995 y(it)n(y)d(to)h(exploit)f(div)n(erse,)
f(ph)n(ysically)h(distributed)h(resources,)1974 2095
y(suc)n(h)48 b(as)h(access)e(to)i(sup)r(ercomputers,)54
b(large)47 b(databases,)1974 2195 y(storage)30 b(devices,)i
(visualization)e(devices,)j(and)e(sensing)g(de-)1974
2294 y(vices)21 b(as)f(w)n(ell.)35 b(These)21 b(applications)f(are)g
(not)i(able)f(to)g(run)g(us-)1974 2394 y(ing)j(resources)f(within)j(a)e
(single)g(computer)h(cen)n(ter,)f(th)n(us)h(the)1974
2494 y(wide)37 b(v)-5 b(ariet)n(y)36 b(use)g(of)h(the)g(meta-computing)
g(system)f(with)1974 2593 y(heterogeneous)30 b(and)i(dynamic)f(nature)h
(is)f(b)r(ecoming)h(m)n(uc)n(h)1974 2693 y(more)22 b(imp)r(ortan)n(t)g
(b)r(eing)h(built)h(on)e(the)h(w)n(orld-wide)f(comput-)1974
2792 y(ing)27 b(infrastructure.)2073 2934 y(The)g(net)n(w)n(ork)d
(infrastructure)i(mak)n(es)f(p)r(ossible)g(the)i(real-)1974
3034 y(ization)c(of)g(high)h(p)r(erformance)e(w)n(orld-wide)g(global)h
(comput-)1974 3133 y(ing.)55 b(A)34 b(few)g(systems)f(are)g(prop)r
(osed)f(for)h(suc)n(h)h(computing)1974 3233 y(system:)h(Legion)25
b([5)o(])g(is)g(a)g(pro)5 b(ject)25 b(for)f(constructing)h(the)g(na-)
1974 3332 y(tion)n(wide)37 b(virtual)f(computer)h(comprised)g(of)g(man)
n(y)f(sup)r(er-)1974 3432 y(computers)g(and)h(w)n(orkstations.)64
b(Legion)36 b(uses)g(an)h(ob)5 b(ject-)1974 3532 y(orien)n(ted)32
b(language,)h(Men)n(tat)g([4],)i(to)e(program)e(global)h(dis-)1974
3631 y(tributed)k(computing)f(systems.)59 b(NetSolv)n(e)35
b([2])g(pro)n(vides)f(a)1974 3731 y(easy-to-use)24 b(programming)f(in)n
(terface)i(similar)g(to)h(ours,)f(but)1974 3831 y(it)20
b(has)e(no)h(description)g(language)f(for)h(in)n(terface)f
(information.)1974 3930 y(An)28 b(agen)n(t)f(pro)r(cess)g(is)g(pro)n
(vided)g(for)g(load)g(balancing)g(in)h(the)1974 4030
y(system.)53 b(The)33 b(Remote)g(Computation)g(System)g(\(R)n(CS\))h
([1])1974 4129 y(is)j(a)f(remote)h(pro)r(cedure)f(call)h(facilit)n(y)g
(that)g(pro)n(vides)f(uni-)1974 4229 y(form)h(access)e(to)i(remote)g
(computers)f(ranging)f(from)i(high-)1974 4329 y(end)25
b(w)n(orkstations)e(to)h(sup)r(ercomputers.)35 b(In)25
b(order)f(to)g(mini-)1974 4428 y(mize)f(resp)r(onse)f(time,)i(the)g(R)n
(CS)f(allo)r(cates)e(the)j(solution)e(of)h(a)1974 4528
y(problem)d(dynamically)f(to)h(the)h(least)f(loaded)f(mac)n(hine)h(in)g
(the)1974 4628 y(net)n(w)n(ork)k(that)h(pro)n(vides)f(the)i(desired)e
(service.)35 b(When)26 b(using)1974 4727 y(the)k(system)f(for)h
(parallel)e(applications,)i(the)g(dynamic)f(task)1974
4827 y(allo)r(cation)23 b(leads)h(to)h(a)f(balanced)g(load)g(among)f
(the)i(in)n(v)n(olv)n(ed)1974 4926 y(pro)r(cessors.)54
b(The)34 b(protot)n(yp)r(e)f(system)g(is)h(implemen)n(ted)h(on)1974
5026 y(top)22 b(of)g(PVM.)g(The)g(Globus)f([3])h(is)g(a)f(to)r(olkit)h
(whic)n(h)g(in)n(tended)1974 5126 y(to)j(ac)n(hiev)n(e)g(a)g(v)n
(ertically)g(in)n(tegrated)f(treatmen)n(t)i(of)g(applica-)1974
5225 y(tion,)37 b(middle-w)n(are,)f(and)f(net)n(w)n(ork.)58
b(The)35 b(Globus)g(pro)5 b(ject)1974 5325 y(pro)n(vide)29
b(basic)g(infrastructure)g(that)i(can)f(b)r(e)g(used)g(to)g(build)p
eop
%%Page: 2 2
2 1 bop -182 83 a Fl(p)r(ortable,)36 b(high-p)r(erformance)d(range)g
(of)i(w)n(orld-wide)e(com-)-182 183 y(puting)28 b(services.)-83
282 y(As)i(an)g(infrastructure)e(for)i(w)n(orld-wide)e(global)h
(comput-)-182 382 y(ing)20 b(in)i(scien)n(ti\014c)f(computation,)h(w)n
(e)f(are)f(curren)n(tly)g(pursuing)-182 482 y(the)31
b Fm(Ninf)h(\(Network)h(b)l(ase)l(d)g(Information)h(Libr)l(ary)f(for)h
(high)-182 581 y(p)l(erformanc)l(e)40 b(c)l(omputing\))e
Fl(pro)5 b(ject)38 b([7)o(])1123 551 y Fk(1)1161 581
y Fl(.)68 b(Our)37 b(goal)g(is)h(to)-182 681 y(pro)n(vide)23
b(a)i(platform)g(for)f(global)g(scien)n(ti\014c)h(computing)g(with)-182
780 y(computational)42 b(resources)f(distributed)j(in)f(a)g(w)n
(orld-wide)-182 880 y(global)25 b(net)n(w)n(ork.)35 b(The)26
b(pap)r(er)f(describ)r(es)h(the)h(motiv)-5 b(ation)25
b(of)-182 980 y(Ninf,)30 b(its)g(comp)r(onen)n(ts,)f(and)g(the)h
(underlying)f(tec)n(hnologies)-182 1079 y(that)e(supp)r(ort)h(suc)n(h)f
(global)g(computing.)-182 1308 y Fn(2.)37 b(Ninf)g(Ov)m(erview)-182
1519 y Fj(2.1)o(.)22 b(Ninf)i(Design)d(Concept)-83 1723
y Fl(The)32 b(basic)e(Ninf)j(system)e(supp)r(orts)g(clien)n(t-serv)n
(er)e(based)-182 1822 y(computing.)36 b(The)27 b(computational)g
(resources)e(are)h(a)n(v)-5 b(ailable)-182 1922 y(as)20
b(remote)h(libraries)e(at)i(a)g(remote)g(computation)g(host)f(whic)n(h)
-182 2022 y(can)31 b(b)r(e)h(called)g(through)f(the)h(global)e(net)n(w)
n(ork)h(from)g(a)h(pro-)-182 2121 y(grammer's)19 b(clien)n(t)i(program)
e(written)i(in)g(existing)f(languages)-182 2221 y(suc)n(h)29
b(as)g(F)-7 b(ortran,)29 b(C,)g(or)g(C++.)42 b(The)30
b(parameters,)e(includ-)-182 2321 y(ing)h(large)e(arra)n(ys,)g(are)h
(e\016cien)n(tly)i(marshalled)e(and)h(sen)n(t)g(to)-182
2420 y(the)34 b Fm(Ninf)h(server)f Fl(on)g(a)f(remote)g(host,)i(whic)n
(h)e(in)h(turn)g(exe-)-182 2520 y(cutes)21 b(the)h(requested)f
(libraries,)g(and)g(sends)g(bac)n(k)g(the)h(result.)-182
2619 y(The)34 b Fm(Ninf)i(r)l(emote)g(pr)l(o)l(c)l(e)l(dur)l(e)g(c)l
(al)t(l)g(\(RPC\))f Fl(is)f(designed)g(to)-182 2719 y(pro)n(vide)e
(programming)f(in)n(terface)h(whic)n(h)i(will)f(b)r(e)h(v)n(ery)e(fa-)
-182 2819 y(miliar)d(to)i(the)f(programmers)e(of)i(existing)g
(languages.)43 b(The)-182 2918 y(programmer)27 b(can)i(build)h(a)f
(global)f(computing)i(systems)f(b)n(y)-182 3018 y(using)19
b(the)i(Ninf)g(remote)e(libraries)g(as)g(its)h(comp)r(onen)n(ts,)h
(with-)-182 3118 y(out)j(b)r(eing)h(a)n(w)n(are)d(of)j(complexities)f
(and)h(hassles)e(of)i(net)n(w)n(ork)-182 3217 y(programming.)-83
3317 y(The)j(b)r(ene\014ts)g(of)g(Ninf)g(are)f(as)g(follo)n(ws:)-99
3489 y Fi(\017)41 b Fl(A)48 b(clien)n(t)f(can)h(execute)f(the)h(most)g
(time-consuming)-16 3589 y(part)h(of)g(his)h(program)d(in)j(m)n
(ultiple,)56 b(remote)49 b(high-)-16 3688 y(p)r(erformance)24
b(computers,)i(suc)n(h)g(as)f(v)n(ector)f(sup)r(ercom-)-16
3788 y(puters)41 b(and)g(MPPs,)j(without)e(an)n(y)f(requiremen)n(t)g
(for)-16 3888 y(sp)r(ecial)24 b(hardw)n(are)e(or)h(op)r(erating)h
(systems.)35 b(If)25 b(suc)n(h)f(su-)-16 3987 y(p)r(ercomputers)29
b(are)g(reac)n(hable)f(via)h(a)h(high)f(sp)r(eed)h(net-)-16
4087 y(w)n(ork,)f(the)h(application)f(will)h(naturally)f(run)h
(consider-)-16 4186 y(ably)k(faster.)59 b(It)35 b(also)f(pro)n(vides)g
(uniform)h(access)f(to)h(a)-16 4286 y(v)-5 b(ariet)n(y)26
b(of)i(sup)r(ercomputers.)-99 4448 y Fi(\017)41 b Fl(The)k(Ninf)g
(programming)e(in)n(terface)h(is)h(designed)g(to)-16
4548 y(b)r(e)32 b(extremely)f(easy-to-use)f(and)h(familiar-lo)r(oking)f
(for)-16 4647 y(programmers)f(of)i(existing)g(languages)f(suc)n(h)h(as)
g(F)n(OR-)-16 4747 y(TRAN,)39 b(C)f(and)g(C++.)68 b(The)38
b(user)g(can)g(call)g(the)g(re-)-16 4846 y(mote)31 b(libraries)f
(without)j(an)n(y)d(kno)n(wledge)h(of)g(the)h(net-)-16
4946 y(w)n(ork)21 b(programming,)g(and)i(easily)f(con)n(v)n(ert)f(his)i
(existing)p -182 5011 788 4 v -90 5065 a Fh(1)-55 5088
y Fg(The)18 b(URL)g(of)g(Ninf)f(pro)t(ject)i(is)f Ff
(http://phase.etl.go.jp/N)q(inf/)q Fg(.)-182 5167 y(The)39
b(nic)n(kname)f(\\Ninf)5 b(")39 b(comes)f(from)f(a)h(similar)e
(pronounce)k(w)n(ord)-182 5246 y(\\Nymph",)18 b(whic)n(h)h(w)n(e)f(exp)
r(ect)i(it,)f(living)f(in)g(a)g(net)n(w)n(ork)h(w)n(orld,)g(to)g(mak)n
(e)-182 5325 y(the)24 b(dream)f(of)g(quic)n(kly)h(getting)h
(information)e(resource)h(come)f(true.)2140 83 y Fl(applications)d
(that)i(already)e(use)h(p)r(opular)g(n)n(umerical)g(li-)2140
183 y(braries)26 b(suc)n(h)h(as)g(LAP)-7 b(A)n(CK.)2057
362 y Fi(\017)41 b Fl(The)51 b(Ninf)h(RPC)e(can)h(also)f(b)r(e)h(async)
n(hronous)e(and)2140 462 y(automatic:)64 b(for)41 b(parallel)f
(applications,)k(a)d(group)f(of)2140 562 y Fm(Ninf)52
b(metaservers)g Fl(main)n(tains)e(the)i(information)f(of)2140
661 y(Ninf)30 b(serv)n(ers)d(in)j(the)f(net)n(w)n(ork)f(in)i(a)e
(distributed)i(man-)2140 761 y(ner,)49 b(and)c(automatically)f(allo)r
(cates)g(remote)h(library)2140 861 y(calls)33 b(dynamically)g(on)g
(appropriate)f(serv)n(ers)f(for)i(load)2140 960 y(balancing.)72
b(T)-7 b(o)39 b(allo)r(cate)g(m)n(ultiple)h(calls)f(to)g(ac)n(hiev)n(e)
2140 1060 y(net)n(w)n(ork-wide)21 b(parallelism,)h(Ninf)i(pro)n(vides)d
(a)h(transac-)2140 1159 y(tion)31 b(system,)i(where)e(the)h(data-dep)r
(endencies)f(among)2140 1259 y(the)55 b(Ninf)g(calls)f(are)g
(automatically)g(detected)h(and)2140 1359 y(sc)n(heduled)21
b(b)n(y)g(the)h(metaserv)n(er.)33 b(The)21 b(Ninf)i(metaserv)n(er)2140
1458 y(could)c(b)r(e)g(regarded)e(as)h(a)h(net)n(w)n(ork)e(agen)n(t)h
(whic)n(h)h(lo)r(cates)2140 1558 y(an)27 b(appropriate)f(serv)n(er)g
(dep)r(ending)h(on)h(clien)n(t)f(request)2140 1658 y(and)g(status)h(of)
f(net)n(w)n(ork)f(resources.)2057 1837 y Fi(\017)41 b
Fl(The)30 b(Ninf)g(net)n(w)n(ork)f(database)f(serv)n(er)g(pro)n(vides)g
(query)2140 1937 y(on)43 b(accurate)g(constan)n(t)g(database)f(needed)i
(in)g(scien-)2140 2037 y(ti\014c)30 b(computation,)g(suc)n(h)f(as)h
(imp)r(ortan)n(t)f(constan)n(ts)g(of)2140 2136 y(ph)n(ysics)36
b(and)h(c)n(hemistry)-7 b(.)63 b(By)37 b(doing)f(so,)i(the)g(user)e(is)
2140 2236 y(freed)29 b(from)g(the)h(burdens)g(and)f(mistak)n(es)f(of)i
(inputting)2140 2336 y(accurate)g(constan)n(t)g(data)h(from)g(prin)n
(ted)g(c)n(harts.)46 b(F)-7 b(ur-)2140 2435 y(thermore,)31
b(w)n(e)g(plan)g(to)g(dev)n(elop)f(a)h(framew)n(ork)e(where)2140
2535 y(data)55 b(v)-5 b(alues)55 b(of)g(rep)r(orts)g(on)g(exp)r(erimen)
n(ts)g(b)n(y)h(re-)2140 2634 y(searc)n(hers)29 b(could)i(b)r(e)h
(referenced)f(directly)g(o)n(v)n(er)f(a)h(net-)2140 2734
y(w)n(ork)26 b(in)i(the)g(midst)g(of)g(user's)e(computation.)2073
2931 y(While)21 b(Ninf)g(can)f(serv)n(e)e(to)i(sp)r(eed-up)g(the)h
(applications)e(b)n(y)1974 3030 y(exploiting)29 b(the)i(p)r(o)n(w)n(er)
e(of)h(remote)f(sup)r(ercomputer)h(serv)n(ers)1974 3130
y(and)c(net)n(w)n(ork)f(parallelism,)h(it)h(is)f(a)h(con)n(v)n(enien)n
(t)e(to)r(ol)h(for)g(ob-)1974 3229 y(taining)33 b(the)i(answ)n(er)d(of)
i(a)f(particular)g(n)n(umerical)g(function)1974 3329
y(and)40 b(v)-5 b(alues)40 b(quic)n(kly)-7 b(.)75 b(W)-7
b(e)40 b(ha)n(v)n(e)f(designed)h(a)g(WWW)i(in-)1974 3429
y(terface,)30 b(called)f Fm(NinfCalc)j Fl(as)d(a)g(fron)n(t-end)h(so)f
(that)h(Ninf)h(li-)1974 3528 y(braries)24 b(registered)h(in)h
(computation)g(serv)n(ers)e(could)i(b)r(e)g(cat-)1974
3628 y(aloged,)g(bro)n(wsed,)g(and)h(tried)g(out)g(through)f(W)-7
b(eb)28 b(bro)n(wsers.)2073 3731 y(F)-7 b(rom)28 b(the)f(user's)g(p)r
(ersp)r(ectiv)n(e,)g(Ninf)i(o\013ers)d(y)n(et)i(another)1974
3831 y(w)n(a)n(y)h(to)h(share)g(resources)e(o)n(v)n(er)h(a)h(global)f
(net)n(w)n(ork.)44 b(On)30 b(the)1974 3930 y(other)j(hand,)j(there)e
(are)f(already)g(v)-5 b(arious)33 b(net)n(w)n(ork)g(infras-)1974
4030 y(tructures)d(and)g(to)r(ols)f(already)g(in)i(use,)f(and)h(one)e
(migh)n(t)i(ask)1974 4129 y(w)n(ould)i(another)f(infrastructure)g(b)r
(e)i(needed;)i(for)d(example,)1974 4229 y(one)27 b(could)g(claim)g(the)
h(extreme)f(that,)h(one)f(could)g(use)g(exist-)1974 4329
y(ing)f(\014le)h(transfer)e(services)g(suc)n(h)h(as)g(ftp)h(to)f
(remotely)g(obtain)1974 4428 y(n)n(umerical)j(libraries,)g(compile)h
(on)g(his)g(lo)r(cal)g(mac)n(hine,)g(and)1974 4528 y(execute)19
b(the)h(program)e(there.)34 b(Aside)19 b(from)g(the)h(issue)f(of)h(ha)n
(v-)1974 4628 y(ing)32 b(a)f(sup)r(ercomputer)h(lo)r(cally)f(on)h
(hand,)h(there)f(are)f(man)n(y)1974 4727 y(other)i(adv)-5
b(an)n(tages)31 b(to)j(Ninf)g(in)g(this)f(case)g(|)g(securit)n(y)g(and)
1974 4827 y(proprietary)h(issues)i(naturally)f(are)g(ob)n(vious)g
(topics;)40 b(there)1974 4926 y(are)d(other)h(practical)f(issues)h(of)h
(exp)r(ending)f(the)h(e\013orts)f(of)1974 5026 y(fetc)n(hing,)j
(compiling,)f(and)e(main)n(taining)f(co)r(de)h(in)h(hetero-)1974
5126 y(geneous)33 b(computing)i(en)n(vironmen)n(ts.)56
b(Ninf)35 b(allo)n(ws)e(reduc-)1974 5225 y(tion)d(of)g(main)n(tenance)f
(costs)g(b)n(y)h(concen)n(trating)e(the)i(e\013orts)1974
5325 y(of)37 b(high-qualit)n(y)-7 b(,)39 b(w)n(ell-main)n(tained)e
(libraries)e(on)j(compute)p eop
%%Page: 3 3
3 2 bop -182 83 a Fl(serv)n(ers)20 b(and)h(not)i(on)e(eac)n(h)h(mac)n
(hine.)34 b(Th)n(us,)23 b(ev)n(en)f(for)f(slo)n(w)n(er)-182
183 y(net)n(w)n(orks)35 b(where)h(there)g(are)g(no)h(sp)r(eed)f(adv)-5
b(an)n(tages)35 b(to)i(b)r(e)-182 282 y(gained,)27 b(Ninf)h(is)g(still)
f(b)r(ene\014cial)h(in)g(this)g(regard.)-182 495 y Fj(2.2)o(.)22
b(The)g(Ninf)i(System)e(Ar)n(chitectur)n(e)-83 709 y
Fl(The)d(basic)f(Ninf)h(system)f(emplo)n(ys)g(a)g(clien)n(t-serv)n(er)e
(mo)r(del.)-182 808 y(The)26 b(serv)n(er)f(mac)n(hine)h(and)g(a)g
(clien)n(t)g(ma)n(y)g(b)r(e)h(connected)f(via)-182 908
y(a)20 b(lo)r(cal)h(area)e(net)n(w)n(ork)h(or)g(o)n(v)n(er)f(an)h(In)n
(ternet.)35 b(Mac)n(hines)20 b(ma)n(y)-182 1008 y(b)r(e)j
(heterogeneous:)33 b(data)22 b(in)h(comm)n(unication)f(is)h(translated)
-182 1107 y(in)n(to)k(the)h(common)f(net)n(w)n(ork)f(data)h(format.)-83
1209 y(A)40 b(Ninf)g(serv)n(er)e(pro)r(cess)g(runs)i(on)f(the)h(Ninf)g
(computa-)-182 1308 y(tion)30 b(serv)n(er)f(host.)45
b(The)31 b(Ninf)g(remote)f(libraries)f(are)g(imple-)-182
1408 y(men)n(ted)24 b(as)g(executable)g(programs)f(whic)n(h)h(con)n
(tain)g(net)n(w)n(ork)-182 1508 y Fm(stub)30 b Fl(routine)h(as)g(its)g
(main)g(routine,)h(and)f(managed)f(b)n(y)h(the)-182 1607
y(serv)n(er)24 b(pro)r(cess.)35 b(W)-7 b(e)27 b(call)f(suc)n(h)f
(executable)h(programs)e Fm(Ninf)-182 1707 y(exe)l(cutables)32
b(\(pr)l(o)l(gr)l(ams\))p Fl(.)48 b(When)31 b(the)h(library)d(is)i
(called)g(b)n(y)-182 1806 y(a)26 b(clien)n(t)h(program,)e(the)j(Ninf)g
(serv)n(er)d(searc)n(hes)g(the)i(Ninf)h(ex-)-182 1906
y(ecutables)35 b(asso)r(ciated)f(with)i(its)f(name,)j(and)d(executes)g
(the)-182 2006 y(found)i(executable,)j(setting)d(up)h(an)f(appropriate)
e(comm)n(u-)-182 2105 y(nication)27 b(with)i(the)f(clien)n(t.)39
b(The)28 b(stub)h(routine)e(handles)h(the)-182 2205 y(comm)n(unication)
20 b(to)g(the)i(Ninf)f(serv)n(er)e(and)i(its)g(clien)n(t,)h(includ-)
-182 2305 y(ing)32 b(argumen)n(t)g(marshaling.)51 b(The)33
b(underlying)g(executable)-182 2404 y(can)24 b(b)r(e)g(written)h(in)g
(an)n(y)e(existing)h(scien)n(ti\014c)g(languages)f(suc)n(h)-182
2504 y(as)g(F)-7 b(ortran,)24 b(C,)h(etc.,)g(as)f(long)g(as)g(it)h(can)
f(b)r(e)h(executed)f(in)h(the)-182 2603 y(host.)-83 2705
y(A)38 b Fm(libr)l(ary)i(pr)l(ovider)p Fl(,)i(who)37
b(pro)n(vides)e(the)j(n)n(umerical)f(li-)-182 2805 y(brary)g(and)h
(computational)g(resource)e(to)j(the)g(net)n(w)n(ork)e(at)-182
2904 y(large,)25 b(prepares)g(the)h(Ninf)i(executables)d(b)n(y)i(\(1\))
f(writing)g(the)-182 3004 y(necessary)e(in)n(terface)h(description)g
(of)h(eac)n(h)f(library)g(function)-182 3103 y(in)d Fm(Ninf)j(IDL)g
(\(Interfac)l(e)g(Description)h(L)l(anguage\))p Fl(,)e(\(2\))f(run-)
-182 3203 y(ning)i(the)g(Ninf)h(IDL)g(compiler,)f(whic)n(h)g(emits)h
(the)f(necessary)-182 3303 y(header)33 b(\014les)h(and)g(stub)g(co)r
(de,)h(\(3\))g(Compiling)e(the)i(library)-182 3402 y(with)h(the)g
(compiler)f(for)g(the)h(programming)d(language)h(the)-182
3502 y(library)39 b(is)h(written)h(in,)j(and,)g(\(4\))c(linking)h(with)
g(the)g(Ninf)-182 3602 y(RPC)f(libraries,)k(\014nally)-7
b(,)44 b(\(5\))e Fm(r)l(e)l(gistering)f Fl(them)h(with)g(the)-182
3701 y(Ninf)23 b(serv)n(er)e(running)h(on)g(his)h(host.)35
b(After)23 b(these)f(steps,)i(an)n(y-)-182 3801 y(one)36
b(in)g(the)h(net)n(w)n(ork)e(can)h(use)g(the)h(libraries)e(b)n(y)h(the)
h(Ninf)-182 3900 y(RPC)25 b(in)h(a)f(transparen)n(t.)35
b(Some)26 b(existing)f(libraries,)g(suc)n(h)g(as)-182
4000 y(LAP)-7 b(A)n(CK,)27 b(ha)n(v)n(e)f(already)g(b)r(een)i
('Nin\014ed')h(in)e(this)h(manner.)-83 4102 y(In)33 b(the)f(curren)n(t)
f(implemen)n(tation,)j(the)e(comm)n(unication)-182 4201
y(b)r(et)n(w)n(een)h(a)g(clien)n(t)g(and)g(the)g(serv)n(er)f(is)h(ac)n
(hiev)n(ed)f(b)n(y)h(means)-182 4301 y(of)21 b(standard)f(TCP/IP)f
(connection)i(to)f(ensure)h(reliable)f(com-)-182 4400
y(m)n(unication)f(b)r(et)n(w)n(een)h(pro)r(cesses.)33
b(In)21 b(an)e(heterogeneous)g(en-)-182 4500 y(vironmen)n(t,)35
b(Ninf)g(uses)f(the)h(Sun)f(XDR)i(data)d(format)h(as)g(a)-182
4600 y(default)21 b(proto)r(col.)34 b(Also,)22 b(clien)n(ts)f(can)f
(also)g(sp)r(ecify)i(call)e(bac)n(k)-182 4699 y(functions)30
b(on)h(the)f(clien)n(t)h(side)f(for)g(v)-5 b(arious)29
b(purp)r(oses,)i(suc)n(h)-182 4799 y(as)c(in)n(teractiv)n(e)f(data)h
(visualization,)g(I/O)f(of)i(data,)f(etc.)-182 5012 y
Fj(2.3)o(.)22 b(The)g(Pr)n(ogramming)g(Interface)-83
5225 y Fe(Ninf_call\(\))j Fl(is)k(the)g(sole)g(clien)n(t)g(in)n
(terface)f(to)h(the)h(Ninf)-182 5325 y(compute)35 b(and)h(database)e
(serv)n(ers.)59 b(In)36 b(order)e(to)i(illustrate)1974
83 y(the)21 b(programming)d(in)n(terface)i(with)h(an)f(example,)i(let)f
(us)f(con-)1974 183 y(sider)31 b(a)g(simple)h(matrix)f(m)n(ultiply)h
(routine)f(in)g(C)h(programs)1974 282 y(with)c(the)g(follo)n(wing)e(in)
n(terface:)1974 447 y Fe(double)41 b(A[N][N],B[N][N],)o(C[N)o(][)o(N])o
(;)1974 547 y(....)608 b(/*)43 b(declaration)c(*/)1974
646 y(dmmul\(N,A,B,C\);)2061 746 y(/*)k(calls)e(matrix)g(multiply,)f
(C=A*B)i(*/)2073 911 y Fl(When)20 b(the)f Fe(dmmul)e
Fl(routine)i(is)g(a)n(v)-5 b(ailable)17 b(on)i(a)g(Ninf)g(serv)n(er,)
1974 1010 y(the)38 b(clien)n(t)h(program)d(can)i(call)g(the)g(remote)g
(library)f(using)1974 1110 y Fe(Ninf_call)p Fl(,)24 b(in)k(the)g(follo)
n(wing)e(manner:)1974 1275 y Fe(Ninf_call\("dmmul)o(",)o(N,A)o(,B)o
(,C\))o(;)1974 1374 y(/*)43 b(call)f(remote)f(Ninf)h(library)e(on)j
(server)e(*/)1974 1539 y Fl(Here,)26 b Fe(dmmul)e Fl(is)i(the)g(name)g
(of)g(library)e(registered)h(as)g(a)h(Ninf)1974 1639
y(executable)37 b(on)f(a)h(serv)n(er,)h(and)f Fe(A)p
Fl(,)p Fe(B)p Fl(,)p Fe(C)p Fl(,)p Fe(N)f Fl(are)g(the)h(same)g(ar-)
1974 1738 y(gumen)n(ts.)63 b(As)37 b(w)n(e)f(see)g(here,)i(the)f(clien)
n(t)g(user)f(only)g(needs)1974 1838 y(to)28 b(sp)r(ecify)g(the)g(name)g
(of)f(the)i(function)f(as)f(if)i(he)f(w)n(ere)e(mak-)1974
1938 y(ing)37 b(a)f(lo)r(cal)h(function)h(call;)j Fe(Ninf_call\(\))33
b Fl(automatically)1974 2037 y(determines)28 b(the)h(function)g(arit)n
(y)e(and)h(the)h(t)n(yp)r(e)g(of)f(eac)n(h)g(ar-)1974
2137 y(gumen)n(t,)e(appropriately)f(marshals)g(the)h(argumen)n(ts,)g
(mak)n(es)1974 2237 y(the)c(remote)f(call)h(to)f(the)h(serv)n(er,)g
(obtains)f(the)h(results,)g(places)1974 2336 y(the)g(results)g(in)g
(the)h(appropriate)d(argumen)n(t,)i(and)g(returns)g(to)1974
2436 y(the)e(clien)n(t.)35 b(In)20 b(this)g(w)n(a)n(y)-7
b(,)20 b(the)g(Ninf)h(RPC)f(is)f(designed)h(to)g(giv)n(e)1974
2535 y(the)g(users)f(an)g(illusion)g(that)h(argumen)n(ts)e(are)h
(shared)g(b)r(et)n(w)n(een)1974 2635 y(the)29 b(clien)n(t)f(and)h(the)f
(serv)n(er.)38 b(Note)28 b(that)h(the)g(ph)n(ysical)f(lo)r(ca-)1974
2735 y(tion)34 b(of)f(the)h(Ninf)h(serv)n(er)d(is)h(sp)r(eci\014ed)h
(in)g(an)g(en)n(vironmen)n(t)1974 2834 y(v)-5 b(ariable,)26
b(or)h(a)g(setup)h(\014le.)2073 2934 y(T)-7 b(o)24 b(realize)f(suc)n(h)
g(simplicit)n(y)h(in)h(the)f(clien)n(t)g(programming)1974
3034 y(in)n(terface,)e(w)n(e)g(designed)g(Ninf)h(RPC)e(so)h(that)g
(clien)n(t)g(function)1974 3133 y(call)k(obtains)h(all)g(the)g(in)n
(terface)f(information)g(regarding)f(the)1974 3233 y(called)i(library)f
(function)i(at)g(run)n(time)f(from)h(the)g(serv)n(er.)35
b(Al-)1974 3332 y(though)23 b(this)h(will)g(cost)g(an)f(extra)g(net)n
(w)n(ork)f(round)h(trip)h(time,)1974 3432 y(w)n(e)29
b(judged)i(that)f(t)n(ypical)f(scien)n(ti\014c)h(applications)f(are)g
(b)r(oth)1974 3532 y(compute)43 b(and)f(data)h(in)n(tensiv)n(e)f(suc)n
(h)h(that)g(the)g(o)n(v)n(erhead)1974 3631 y(should)27
b(b)r(e)i(small)e(enough.)37 b(The)28 b(in)n(terface)g(information)f
(in-)1974 3731 y(cludes)d(the)g(n)n(um)n(b)r(er)f(of)h(parameters,)f
(these)h(t)n(yp)r(es)g(and)f(sizes)1974 3831 y(and)28
b(access)f(mo)r(des)h(of)g(argumen)n(ts)f(\(read)g(or)g(write\).)39
b(Using)1974 3930 y(these)31 b(informations,)g(Ninf)h(RPC)f
(automatically)e(p)r(erforms)1974 4030 y(argumen)n(t)37
b(marshaling,)j(and)f(generates)e(the)i(sequence)f(of)1974
4129 y(sending)27 b(and)h(receiving)e(data)h(from/to)g(the)h(Ninf)g
(serv)n(er.)2073 4229 y(As)39 b(sho)n(wn)f(in)h(Figure)f(1,)j(the)e
(clien)n(t)g(function)g(call)g(re-)1974 4329 y(quests)26
b(the)g(in)n(terface)f(information)h(of)f(the)i(calling)e(function)1974
4428 y(to)g(the)g(Ninf)g(serv)n(er,)f(whic)n(h)h(in)g(turn)g(returns)f
(the)h(registered)1974 4528 y(Ninf)20 b(executable)e(in)n(terface)h
(information)f(to)h(the)g(clien)n(t.)35 b(The)1974 4628
y(clien)n(t)i(library)f(then)i(in)n(terprets)f(and)g(marshals)f(the)h
(argu-)1974 4727 y(men)n(ts)28 b(on)f(the)i(stac)n(k)d(according)g(to)i
(the)g(supplied)h(informa-)1974 4827 y(tion.)35 b(F)-7
b(or)21 b(v)-5 b(ariable-sized)20 b(arra)n(y)f(argumen)n(ts,)j(the)g
(IDL)g(m)n(ust)1974 4926 y(sp)r(ecify)j(an)g(expression)e(that)i
(includes)g(the)g(input)h(scalar)d(ar-)1974 5026 y(gumen)n(ts)36
b(whereb)n(y)g(the)h(size)g(of)f(the)i(arra)n(ys)c(can)i(b)r(e)h(com-)
1974 5126 y(puted.)j(This)29 b(design)f(is)h(in)g(con)n(trast)e(to)h
(traditional)g(RPCs,)1974 5225 y(where)20 b(stub)h(generation)e(is)i
(done)f(on)g(the)h(clien)n(t)g(side)g(at)f(com-)1974
5325 y(pile)26 b(time.)37 b(As)26 b(a)g(result)f(of)h(dynamic)g(in)n
(terface)f(acquisition,)p eop
%%Page: 4 4
4 3 bop -182 83 a Fl(Ninf)22 b(RPC)f(do)r(es)h(not)f(require)g(suc)n(h)
g(compile-time)h(activities)-182 183 y(at)27 b(all,)g(relieving)g(the)h
(users)f(from)g(an)n(y)g(co)r(de)g(main)n(tenance.)-182
1455 y @beginspecial 133 @llx 381 @lly 520 @urx 618 @ury
2267 @rwi @setspecial
%%BeginDocument: fig/ninf_overview.eps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def


/RRect { CBSpl } def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/WhiteBg 1 def
/HollowBg 0 def
/Text { ishow } def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/xdescender {
begin 0
FontType 0 eq
{ FDepVector dup length 1 sub get xdescender }
{ [FontBBox] 1 get } ifelse
FontMatrix transform exch pop end
} def
/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
WhiteBg eq /drawBg exch def
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict xdescender def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
drawBg {
newpath 0 vertoffset descender add moveto
dup stringwidth pop dup 0 rlineto
0 printSize rlineto 0 exch sub 0 rlineto
closepath currentgray 1 setgray fill	setgray } if
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 4 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 9 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I k u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
  ffffffff > -1 SetP
%I t
[ 1 0 0 1 103 69 ] concat
%I
67 541 447 541 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 103 189 ] concat
%I
77 521 207 581 Rect
End

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.2 SetP
%I t
[ 1 0 0 1 103 209 ] concat
%I 4
77 441
77 501
207 501
207 441
4 Poly
End

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.2 SetP
%I t
[ 1 0 0 1 103 149 ] concat
%I 4
287 471
287 521
427 521
427 471
4 Poly
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.2 SetP
%I t
[ 1 0 0 1 103 159 ] concat
%I
287 531 427 561 Rect
End

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 103 159 ] concat
%I 4
287 561
287 611
427 611
427 561
4 Poly
End

Begin %I BSpl
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
  ffffffff > -1 SetP
%I t
[ 1 0 0 1 103 189 ] concat
%I 9
187 481
187 471
187 401
187 381
207 381
287 381
307 381
307 401
307 451
9 BSpl
End

Begin %I BSpl
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
  ffffffff > -1 SetP
%I t
[ 1 0 0 1 103 189 ] concat
%I 8
337 451
337 371
337 351
317 351
177 351
157 351
157 371
157 481
8 BSpl
End

Begin %I BSpl
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
  ffffffff > -1 SetP
%I t
[ 1 0 0 1 103 189 ] concat
%I 8
127 481
127 341
127 321
147 321
347 321
367 321
367 341
367 551
8 BSpl
End

Begin %I BSpl
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
  ffffffff > -1 SetP
%I t
[ 1 0 0 1 103 109 ] concat
%I 8
397 631
397 391
397 371
377 371
117 371
97 371
97 391
97 621
8 BSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-180-*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 310 610 ] concat
%I
[
(Interface)
( request)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-180-*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 320 560 ] concat
%I
[
(Interface)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-180-*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 310 530 ] concat
%I
[
(Argument )
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-180-*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 320 500 ] concat
%I
[
(Result)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-180-*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 210 760 ] concat
%I
[
( Client)
(Program)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-180-*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 420 760 ] concat
%I
[
(      Ninf)
(Procedure)
] HollowBg Text
End

Begin %I RRect
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 103 189 ] concat
%I 20
167 611
167 611
167 611
167 611
167 611
167 611
167 611
167 611
167 611
167 611
167 611
167 611
167 611
167 611
167 611
167 611
167 611
167 611
167 611
167 611
20 RRect
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
  ffffffff > -1 SetP
%I t
[ 1 0 0 1 103 189 ] concat
%I
187 541 187 471 Line
End

Begin %I Text
%I cfg White
1 1 1 SetCFg
%I f *-helvetica-bold-r-*-180-*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 190 690 ] concat
%I
[
(Client Library)
] HollowBg Text
End

Begin %I Text
%I cfg White
1 1 1 SetCFg
%I f *-helvetica-bold-r-*-180-*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 400 710 ] concat
%I
[
(Stub program)
] HollowBg Text
End

Begin %I Text
%I cfg White
1 1 1 SetCFg
%I f *-helvetica-bold-r-*-180-*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 410 660 ] concat
%I
[
(Ninf Server)
] HollowBg Text
End

Begin %I BSpl
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 133 375 ] concat
%I 10
397 395
407 395
407 365
407 355
417 355
417 355
407 355
407 345
407 315
397 315
10 BSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-180-*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 550 750 ] concat
%I
[
(      Ninf)
(Executable)
] HollowBg Text
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 438 1638 a Fd(Figure)22 b(1.)i(Ninf)e(RPC)-83
1838 y Fl(In)28 b(the)g(ab)r(o)n(v)n(e)e(example,)i(the)g(clien)n(t)f
(function)h(call)g(sends)-182 1938 y(the)k(input)h(arra)n(ys,)e
Fe(A)h Fl(and)g Fe(B)p Fl(,)g(whose)g(size)g(is)g(computed)h(b)n(y)-182
2037 y(the)c(parameter)f Fe(N)p Fl(.)h(The)g(Ninf)h(serv)n(er)d(in)n(v)
n(ok)n(es)g(the)j(Ninf)g(ex-)-182 2137 y(ecutable)c(of)g
Fe(dmmul)e Fl(library)-7 b(,)26 b(and)g(forw)n(ards)e(the)j(input)g
(data)-182 2237 y(to)40 b(it.)77 b(When)41 b(the)g(computation)g(is)f
(done,)k(the)d(result)g(is)-182 2336 y(sen)n(t)30 b(bac)n(k)g(to)h(the)
h(clien)n(t)f(through)f(the)h(serv)n(er.)45 b(The)31
b(clien)n(t)-182 2436 y(function)j(call)g(stores)f(the)i(returned)f
(data)f(at)h(the)h(lo)r(cation)-182 2535 y(p)r(oin)n(ted)27
b(b)n(y)h(the)g(argumen)n(t,)e Fe(C)p Fl(.)-83 2635 y(The)h(Ninf)h(RPC)
e(ma)n(y)h(also)e(b)r(e)j(in)n(v)n(ok)n(ed)d(async)n(hronously)-182
2735 y(to)d(exploit)f(net)n(w)n(ork-wide)g(parallelism.)34
b(It)22 b(is)g(p)r(ossible)g(to)g(is-)-182 2834 y(sue)d(the)h(request)f
(to)g(a)g(Ninf)i(serv)n(er,)e(con)n(tin)n(ue)g(with)h(the)g(other)-182
2934 y(computation,)33 b(and)f(p)r(oll)h(for)f(the)g(request)g(later.)
51 b(Multiple)-182 3034 y(RPC)23 b(requests)f(to)h(di\013eren)n(t)g
(serv)n(ers)f(are)g(also)g(p)r(ossible.)35 b(F)-7 b(or)-182
3133 y(this)32 b(reason,)g(the)g(async)n(hronous)e(Ninf)j(RPC)f(is)g
(an)g(imp)r(or-)-182 3233 y(tan)n(t)g(feature)g(for)g(parallel)g
(programming,)g(as)g(w)n(e)g(describ)r(e)-182 3332 y(in)27
b(Section)h(3.)-83 3432 y(Ninf)e(RPC)e(also)f(supp)r(orts)h(a)g
(call-bac)n(k)f(functional)i(argu-)-182 3532 y(men)n(t)h(to)g(comm)n
(unicate)g(with)g(the)h(clien)n(t)f(during)g(executing)-182
3631 y(the)31 b(RPC)h(in)f(a)g(serv)n(er.)47 b(A)32 b(Ninf)g(library)e
(routine)h(can)g(tak)n(e)-182 3731 y(the)f(functional)g(argumen)n(t)f
(to)h(call)f(the)h(user-supplied)g(rou-)-182 3831 y(tine)40
b(from)g(the)g(Ninf)h(executable.)73 b(Consider)39 b(a)h(scien)n
(ti\014c)-182 3930 y(sim)n(ulation)g(as)g(an)g(application)g(of)g(the)h
(Ninf.)77 b(A)41 b(t)n(ypical)-182 4030 y(sim)n(ulation)34
b(program)f(initializes)j(the)f(state,)i(and)e(up)r(dates)-182
4129 y(the)28 b(state)h(to)f(displa)n(y)g(or)f(records)g(it)i(at)f(ev)n
(ery)f(certain)h(time)-182 4229 y(steps.)35 b(The)25
b(callbac)n(k)e(argumen)n(t)g(is)h(useful)h(to)g(call)f(the)g(user-)
-182 4329 y(supplied)37 b(routines)f(to)g(send)h(the)g(data)g(at)f(eac)
n(h)g(time-step)-182 4428 y(while)27 b(k)n(eeping)g(the)h(in)n(ternal)f
(state)h(in)f(the)h(sev)n(er.)-83 4528 y(Since)36 b(the)g(Ninf)h(clien)
n(t)f(programming)e(in)n(terface)h(is)h(de-)-182 4628
y(signed)30 b(to)h(b)r(e)h(as)e(language)g(indep)r(enden)n(t)i(as)e(p)r
(ossible,)i(the)-182 4727 y(Ninf)37 b(clien)n(t)f(ma)n(y)g(written)g
(in)h(a)f(v)-5 b(ariet)n(y)35 b(of)i(programming)-182
4827 y(languages.)54 b(It)35 b(is)f(usually)g(easy)f(to)h(design)g(a)g
(clien)n(t)g(in)n(ter-)-182 4926 y(face)22 b(to)h(Ninf,)i(so)d(long)h
(as)f(the)h(language)f(supp)r(orts)g(standard)-182 5026
y(foreign)28 b(function)i(in)n(terface)f(to)g(C)h(programs.)40
b(W)-7 b(e)30 b(ha)n(v)n(e)e(al-)-182 5126 y(ready)d(designed)g(and)h
(implemen)n(ted)h(the)g(clien)n(t)f Fe(Ninf_call)-182
5225 y Fl(functions)21 b(for)f(C,)h(F)n(OR)-7 b(TRAN,)21
b(Ja)n(v)-5 b(a,)21 b(and)f(Lisp.)35 b(The)20 b(clien)n(t)-182
5325 y(and)28 b(the)h(remote)e(library)g(can)h(b)r(e)h(written)g(in)f
(a)g(totally)g(dif-)1974 83 y(feren)n(t)f(language.)2073
183 y(The)32 b(in)n(terface)f(information)g(ma)n(y)g(also)f(b)r(e)i
(used)g(on)f(the)1974 282 y(clien)n(t)19 b(side)g(at)g(compile)g(time.)
35 b(The)19 b(remote)g(user)f(can)h(get)g(the)1974 382
y(in)n(terface)34 b(information)h(from)g(the)g(serv)n(er)e(to)i
(generate)f(ap-)1974 482 y(propriate)28 b(clien)n(t)i(stub)g(routine)g
(and)g(its)g(protot)n(yp)r(e)f(header)1974 581 y(\014les)37
b(for)g(its)g(library)f(whic)n(h)h(is)g(registered)f(there.)66
b(In)37 b(this)1974 681 y(case,)21 b(the)h(program)d(will)i(b)r(e)g(en)
n(tirely)g(t)n(yp)r(ec)n(hec)n(k)n(ed,)g(impro)n(v-)1974
780 y(ing)33 b(co)r(de)h(reliabilit)n(y)-7 b(.)55 b(Also,)35
b(dynamic)f(in)n(terface)f(informa-)1974 880 y(tion)i(acquisition)f
(will)h(b)r(e)g(skipp)r(ed)g(as)f(men)n(tioned)h(earlier,)1974
980 y(impro)n(ving)i(p)r(erformance)f(sligh)n(tly)-7
b(.)68 b(On)38 b(the)g(other)g(hand,)1974 1079 y(instead)28
b(of)h(using)f(only)h Fe(Ninf_call\(\))p Fl(,)24 b(the)29
b(user)f(m)n(ust)h(call)1974 1179 y(the)39 b(clien)n(t)h(stub)f
(routine)g(that)g(will)h(b)r(e)f(created)g(for)f(eac)n(h)1974
1279 y(function)28 b(a)n(v)-5 b(ailable)26 b(at)i(the)g(serv)n(er.)1974
1486 y Fj(2.4)o(.)23 b(Ninf)g(IDL)f(\(Interface)f(Description)h
(Language\))1974 2787 y @beginspecial 2 @llx 328 @lly
560 @urx 667 @ury 2126 @rwi @setspecial
%%BeginDocument: fig/Ninf_IDL_overview.eps

% composite fonts for ASCII-EUC mixed string
% Version 1.2 1/31/1990
% Author Ken'ichi HANDA (handa@etl.go.jp)
% Anyone can freely copy, modify, distribute this program.
/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont {	% ASCIIFontName EUCFontName  compositefont  font'
    findfont dup /FontType get 0 eq {
	12 dict begin
	    1 copyfont dup begin
		/Encoding Encoding
		FMapType dup 2 eq {
		    pop 128 128
		}{
		    5 eq {
			256 256
		    }{
			/compositefont errordict /invalidfont get exec
		    } ifelse
		} ifelse
		getinterval def
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		/FontMatrix FontMatrix [1 0 0 1 0 0.05] matrix concatmatrix def
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
	    currentdict
	end
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

/IdrawDict 51 dict def
IdrawDict begin

/arrowHeight 12 def
/arrowWidth 6 def

% reencodeISO was modified to deal with a composite font correctly.
% Modifier: Shigeru Chiba (chiba@is.s.u-tokyo.ac.jp)
%           Kazuhiro Kazama (kazama@expert-sun.ntt.jp)
/reencodeISOa {		% CompFontName font reencodeISOb font' 
dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/reencodeISO {		% FontName reencodeISO font
    dup dup findfont dup /FontType get 0 ne {
    reencodeISOa
}{
    dup length dict begin {
    1 index dup /FID eq {
	pop pop pop
    }{ /FDepVector eq {
	dup length array copy
	dup dup 0 get 4 index exch reencodeISOa	0 exch put def
    }{
	def
    } ifelse } ifelse } forall
    currentdict end definefont
} ifelse } def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

end

IdrawDict begin

/Helvetica-Gothic
    /Helvetica /GothicBBB-Medium-EUC-H compositefont definefont pop
/Helvetica-Gothic reencodeISO def

%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.653297 0 0 0.653297 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I BSpl
%I b 65520
2 1 1 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I 7
163 613
164 534
167 469
195 433
231 420
261 418
286 418
7 BSpl
%I 1
End

Begin %I BSpl
%I b 65520
2 1 1 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I 7
91 672
91 544
102 447
137 402
202 383
279 383
384 383
7 BSpl
%I 1
End

Begin %I BSpl
%I b 65520
2 1 1 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I 8
44 724
44 643
45 577
47 485
76 373
210 352
344 353
473 354
8 BSpl
%I 1
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 100 164 ] concat
%I
565 547 733 596 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 234 138 ] concat
%I
221 539 376 584 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 141 169 ] concat
%I
221 539 376 584 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 45 196 ] concat
%I
221 539 376 584 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 101 207 ] concat
%I
259 718 449 809 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 157 199 ] concat
%I
302 660 82 32 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 369 1009 ] concat
%I
[
(Ninf Interface)
(Description File)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 411 871 ] concat
%I
[
(ninf_gen)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 428 951 ] concat
%I
[
(xxx.idl)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 272 768 ] concat
%I
[
(_stub_foo.c)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 374 740 ] concat
%I
[
(_stub_goo.c)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 470 709 ] concat
%I
[
(_stub_bar.c)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 681 746 ] concat
%I
[
(module.mak)
] Text
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 239 5 ] concat
%I
221 539 376 584 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 146 36 ] concat
%I
221 539 376 584 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 50 63 ] concat
%I
221 539 376 584 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 277 635 ] concat
%I
[
(_stub_foo)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 379 607 ] concat
%I
[
(_stub_goo)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 475 576 ] concat
%I
[
(_stub_bar)
] Text
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 334 308 ] concat
%I
331 261 520 368 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 707 651 ] concat
%I
[
(Libraries)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 732 612 ] concat
%I
[
(xxx.a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 370 530 ] concat
%I
[
(stub programs)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 382 805 ] concat
%I
[
(stub main programs)
] Text
End

Begin %I Line
%I b 65535
4 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I
469 718 469 685 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I
449 627 352 574 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I
478 618 479 549 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I
521 625 591 519 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I
550 640 746 556 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I
349 528 349 442 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I
458 501 458 415 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I
573 470 573 384 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I
681 462 361 463 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I
681 435 461 436 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I
682 415 576 415 Line
%I 1
End

Begin %I Line
%I b 65520
2 0 1 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I
679 516 648 475 Line
%I 1
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 -17 207 ] concat
%I
126 510 100 69 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 99 851 ] concat
%I
[
(Ninf_call\("foo",...\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 47 905 ] concat
%I
[
(Ninf_call\("goo",...\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 15 959 ] concat
%I
[
(Ninf_call\("bar",....\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 44 1013 ] concat
%I
[
(Ninf clients)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 54 731 ] concat
%I
[
(Ninf Server)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 557 884 ] concat
%I
[
(Ninf interface generator)
] Text
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 2305 2970 a Fd(Figure)h(2.)g(Ninf)g(interface)g(g)q
(enerator)2073 3168 y Fl(The)30 b(Ninf)h(library)d(pro)n(vider)g
(describ)r(es)i(the)g(in)n(terface)f(of)1974 3267 y(the)g(library)d
(function)j(in)g(Ninf)g(IDL)g(to)f(register)f(his)h(library)1974
3367 y(function)36 b(in)n(to)g(the)g(Ninf)h(serv)n(er.)60
b(Since)36 b(the)g(Ninf)h(system)1974 3466 y(is)e(designed)g(for)g(n)n
(umerical)g(applications,)i(the)f(supp)r(orted)1974 3566
y(data)24 b(t)n(yp)r(e)h(in)g(Ninf)h(is)e(tailored)g(for)g(suc)n(h)h(a)
f(purp)r(ose;)h(for)f(ex-)1974 3666 y(ample,)31 b(the)g(data)f(t)n(yp)r
(es)g(are)g(limited)h(to)g(scalars)d(and)j(their)1974
3765 y(m)n(ulti-dimensional)39 b(arra)n(ys.)69 b(On)39
b(the)h(other)f(hand,)j(there)1974 3865 y(are)22 b(sp)r(ecial)h(pro)n
(visions)e(in)j(the)f(IDL)h(for)e(n)n(umerical)h(applica-)1974
3965 y(tions,)34 b(suc)n(h)e(as)g(supp)r(ort)h(for)f(expressions)f(in)n
(v)n(olving)g(input)1974 4064 y(argumen)n(ts)f(to)i(compute)f(arra)n(y)
f(size,)i(designation)f(of)h(tem-)1974 4164 y(p)r(orary)g(arra)n(y)g
(argumen)n(ts)g(that)j(need)f(to)f(b)r(e)i(allo)r(cated)e(on)1974
4263 y(the)28 b(serv)n(er)e(side)h(but)h(not)g(transferred,)e(etc.)2073
4363 y(F)-7 b(or)21 b(example,)h(the)f(in)n(terface)f(description)h
(for)f(the)h(matrix)1974 4463 y(m)n(ultiply)28 b(giv)n(en)f(in)h(the)g
(previous)e(section)h(is:)1974 4628 y Fe(Define)41 b(dmmul\(long)e
(mode_in)i(int)h(n,)2017 4727 y(mode_in)f(double)g(A[n][n],)2017
4827 y(mode_in)g(double)g(B[n][n],)2017 4926 y(mode_out)g(double)g
(C[n][n]\))1974 5026 y("...)h(description)d(...")1974
5126 y(Required)h("libxxx.o")1974 5225 y(/*)j(specify)d(library)h
(required)2497 5325 y(by)i(this)f(routine.)e(*/)p eop
%%Page: 5 5
5 4 bop -182 83 a Fe(Calls)41 b("C")h(dmmul\(n,A,B,C\);)-182
183 y(/*)g(Use)h(C)g(calling)e(convention.)e(*/)-182
342 y Fl(where)k(the)h Fm(ac)l(c)l(ess)h(sp)l(e)l(ci\014ers)p
Fl(,)j Fe(mode_in)41 b Fl(and)j Fe(mode_out)p Fl(,)-182
441 y(sp)r(ecify)35 b(whether)g(the)g(argumen)n(t)f(is)h(read)f(or)g
(written.)59 b(T)-7 b(o)-182 541 y(sp)r(ecify)34 b(the)g(size)g(of)g
(eac)n(h)f(argumen)n(t,)i(the)f(other)f Fe(in_mode)-182
641 y Fl(argumen)n(ts)g(can)h(b)r(e)h(used)g(to)f(form)g(a)h(size)f
(expression.)56 b(In)-182 740 y(this)32 b(example,)g(the)g(v)-5
b(alue)31 b(of)h Fe(n)f Fl(is)h(referenced)f(to)g(calculate)-182
840 y(the)d(size)f(of)g(the)h(arra)n(y)e(argumen)n(ts)g
Fe(A)p Fl(,)h Fe(B)p Fl(,)h Fe(C)p Fl(.)-83 939 y(In)h(addition)f(to)h
(the)g(in)n(terface)e(de\014nition)i(of)g(the)g(library)-182
1039 y(function,)22 b(the)e(IDL)g(description)g(con)n(tains)f(the)h
(informations)-182 1139 y(needed)27 b(to)h(compile)f(and)h(link)f(the)h
(libraries.)-83 1238 y(As)j(illustrated)f(in)h(Figure)f(2,)g(the)h(in)n
(terface)f(description)-182 1338 y(is)k(compiled)h(b)n(y)f(the)h
Fm(Ninf)h(interfac)l(e)h(gener)l(ator)e Fl(to)g(gener-)-182
1438 y(ate)26 b(a)h(stub)g(program)e(for)h(eac)n(h)h(library)e
(function)j(describ)r(ed)-182 1537 y(in)38 b(its)h(in)n(terface)f
(information.)69 b(The)39 b(in)n(terface)f(generator)-182
1637 y(also)32 b(automatically)g(outputs)i(a)e(mak)n(e\014le)h(with)h
(whic)n(h)f(the)-182 1736 y(Ninf)40 b(executables)f(can)h(b)r(e)g
(created)f(b)n(y)g(linking)h(the)g(stub)-182 1836 y(programs)25
b(and)i(library)g(functions.)-83 1936 y(The)35 b(in)n(terface)f
(description)f(can)i(also)e(include)i(the)g(tex-)-182
2035 y(tual)23 b(information,)h(whic)n(h)f(is)h(used)f(to)h
(automatically)e(create)-182 2135 y(man)n(ual)37 b(pages)h(for)g(the)h
(library)e(functions.)70 b(The)39 b(remote)-182 2235
y(users)27 b(can)i(bro)n(wse)e(the)i(a)n(v)-5 b(ailable)27
b(library)g(functions)i(in)g(the)-182 2334 y(serv)n(er,)i(its)i(in)n
(terface,)g(and)f(the)h(other)f(information)g(gener-)-182
2434 y(ated)23 b(b)n(y)g(the)h(in)n(terface)f(generator)e(through)i(a)g
(W)-7 b(eb)24 b(bro)n(wser)-182 2533 y(in)n(terface.)-182
2737 y Fj(2.5)o(.)e(Pr)n(eliminary)g(P)n(erf)n(ormance)-182
4084 y @beginspecial 10 @llx 427 @lly 621 @urx 798 @ury
2227 @rwi @setspecial
%%BeginDocument: linpack/linpack.eps

% composite fonts for ASCII-EUC mixed string
% Version 1.2 1/31/1990
% Author Ken'ichi HANDA (handa@etl.go.jp)
% Anyone can freely copy, modify, distribute this program.
/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont {	% ASCIIFontName EUCFontName  compositefont  font'
    findfont dup /FontType get 0 eq {
	12 dict begin
	    1 copyfont dup begin
		/Encoding Encoding
		FMapType dup 2 eq {
		    pop 128 128
		}{
		    5 eq {
			256 256
		    }{
			/compositefont errordict /invalidfont get exec
		    } ifelse
		} ifelse
		getinterval def
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		/FontMatrix FontMatrix [1 0 0 1 0 0.05] matrix concatmatrix def
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
	    currentdict
	end
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

/IdrawDict 51 dict def
IdrawDict begin

/arrowHeight 10 def
/arrowWidth 5 def

% reencodeISO was modified to deal with a composite font correctly.
% Modifier: Shigeru Chiba (chiba@is.s.u-tokyo.ac.jp)
%           Kazuhiro Kazama (kazama@expert-sun.ntt.jp)
/reencodeISOa {		% CompFontName font reencodeISOb font' 
dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/reencodeISO {		% FontName reencodeISO font
    dup dup findfont dup /FontType get 0 ne {
    reencodeISOa
}{
    dup length dict begin {
    1 index dup /FID eq {
	pop pop pop
    }{ /FDepVector eq {
	dup length array copy
	dup dup 0 get 4 index exch reencodeISOa	0 exch put def
    }{
	def
    } ifelse } ifelse } forall
    currentdict end definefont
} ifelse } def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

end

IdrawDict begin

/Helvetica-Gothic
    /Helvetica /GothicBBB-Medium-EUC-H compositefont definefont pop
/Helvetica-Gothic reencodeISO def

%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.799705 0 0 0.799705 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 570.539 ] concat
%I
0 0 5409 0 Line
%I 1
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 570.539 ] concat
%I
0 0 0 4078 Line
%I 1
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 570.539 ] concat
%I
0 0 5409 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 570.539 ] concat
%I
0 0 63 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 651.457 570.539 ] concat
%I
0 0 -63 0 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 80.5572 584.039 ] concat
%I
[
(0)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 615.839 ] concat
%I
0 0 5409 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 615.839 ] concat
%I
0 0 63 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 651.457 615.839 ] concat
%I
0 0 -63 0 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 64.9572 629.339 ] concat
%I
[
(20)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 661.139 ] concat
%I
0 0 5409 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 661.139 ] concat
%I
0 0 63 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 651.457 661.139 ] concat
%I
0 0 -63 0 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 64.9572 674.639 ] concat
%I
[
(40)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 706.439 ] concat
%I
0 0 5409 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 706.439 ] concat
%I
0 0 63 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 651.457 706.439 ] concat
%I
0 0 -63 0 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 64.9572 719.939 ] concat
%I
[
(60)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 751.739 ] concat
%I
0 0 5409 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 751.739 ] concat
%I
0 0 63 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 651.457 751.739 ] concat
%I
0 0 -63 0 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 64.9572 765.239 ] concat
%I
[
(80)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 797.139 ] concat
%I
0 0 5409 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 797.139 ] concat
%I
0 0 63 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 651.457 797.139 ] concat
%I
0 0 -63 0 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 49.3572 810.639 ] concat
%I
[
(100)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 842.439 ] concat
%I
0 0 5409 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 842.439 ] concat
%I
0 0 63 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 651.457 842.439 ] concat
%I
0 0 -63 0 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 49.3572 855.939 ] concat
%I
[
(120)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 887.739 ] concat
%I
0 0 5409 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 887.739 ] concat
%I
0 0 63 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 651.457 887.739 ] concat
%I
0 0 -63 0 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 49.3572 901.239 ] concat
%I
[
(140)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 933.039 ] concat
%I
0 0 5409 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 933.039 ] concat
%I
0 0 63 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 651.457 933.039 ] concat
%I
0 0 -63 0 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 49.3572 946.539 ] concat
%I
[
(160)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 978.339 ] concat
%I
0 0 5409 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 978.339 ] concat
%I
0 0 63 0 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 651.457 978.339 ] concat
%I
0 0 -63 0 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 49.3572 991.839 ] concat
%I
[
(180)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 570.539 ] concat
%I
0 0 0 4078 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 570.539 ] concat
%I
0 0 0 63 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 110.557 978.339 ] concat
%I
0 0 0 -63 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 102.757 560.039 ] concat
%I
[
(0)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 174.157 570.539 ] concat
%I
0 0 0 4078 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 174.157 570.539 ] concat
%I
0 0 0 63 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 174.157 978.339 ] concat
%I
0 0 0 -63 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 150.757 560.039 ] concat
%I
[
(200)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 237.857 570.539 ] concat
%I
0 0 0 4078 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 237.857 570.539 ] concat
%I
0 0 0 63 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 237.857 978.339 ] concat
%I
0 0 0 -63 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 214.457 560.039 ] concat
%I
[
(400)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 301.457 570.539 ] concat
%I
0 0 0 4078 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 301.457 570.539 ] concat
%I
0 0 0 63 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 301.457 978.339 ] concat
%I
0 0 0 -63 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 278.057 560.039 ] concat
%I
[
(600)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 365.057 570.539 ] concat
%I
0 0 0 4078 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 365.057 570.539 ] concat
%I
0 0 0 63 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 365.057 978.339 ] concat
%I
0 0 0 -63 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 341.657 560.039 ] concat
%I
[
(800)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 428.757 570.539 ] concat
%I
0 0 0 4078 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 428.757 570.539 ] concat
%I
0 0 0 63 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 428.757 978.339 ] concat
%I
0 0 0 -63 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 397.557 560.039 ] concat
%I
[
(1000)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 492.357 570.539 ] concat
%I
0 0 0 4078 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 492.357 570.539 ] concat
%I
0 0 0 63 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 492.357 978.339 ] concat
%I
0 0 0 -63 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 461.157 560.039 ] concat
%I
[
(1200)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 555.957 570.539 ] concat
%I
0 0 0 4078 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 555.957 570.539 ] concat
%I
0 0 0 63 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 555.957 978.339 ] concat
%I
0 0 0 -63 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 524.757 560.039 ] concat
%I
[
(1400)
] Text
End

Begin %I Line
%I b 13107
1 0 0 [2 2] 0 SetB
%I cfg gpLTA
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 619.657 570.539 ] concat
%I
0 0 0 4078 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 619.657 570.539 ] concat
%I
0 0 0 63 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTB
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 619.657 978.339 ] concat
%I
0 0 0 -63 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 588.457 560.039 ] concat
%I
[
(1600)
] Text
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg gpLTx
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.1 0 0 0.1 142.357 610.639 ] concat
%I 10
0 0
0 0
318 36
955 -4
1591 -120
2227 -147
2864 -155
3500 -162
4136 -168
4773 -167
10 MLine
%I 1
End

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTx
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 142.357 610.639 ] concat
%I 4
70 0
0 70
-70 0
0 -70
4 Poly
End

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTx
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 174.157 614.239 ] concat
%I 4
70 0
0 70
-70 0
0 -70
4 Poly
End

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTx
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 237.857 610.239 ] concat
%I 4
70 0
0 70
-70 0
0 -70
4 Poly
End

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTx
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 301.457 598.639 ] concat
%I 4
70 0
0 70
-70 0
0 -70
4 Poly
End

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTx
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 365.057 595.939 ] concat
%I 4
70 0
0 70
-70 0
0 -70
4 Poly
End

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTx
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 428.757 595.139 ] concat
%I 4
70 0
0 70
-70 0
0 -70
4 Poly
End

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTx
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 492.357 594.439 ] concat
%I 4
70 0
0 70
-70 0
0 -70
4 Poly
End

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTx
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 555.957 593.839 ] concat
%I 4
70 0
0 70
-70 0
0 -70
4 Poly
End

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTx
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 619.657 593.939 ] concat
%I 4
70 0
0 70
-70 0
0 -70
4 Poly
End

Begin %I MLine
%I b 3855
1 0 0 [4 4 4 4] 0 SetB
%I cfg gpLTy
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.1 0 0 0.1 142.357 586.239 ] concat
%I 10
0 0
0 0
318 187
955 275
1591 289
2227 294
2864 298
3500 295
4136 294
4773 291
10 MLine
%I 1
End

Begin %I Poly
none SetB %I b n
%I cfg gpLTy
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.1 0 0 0.1 142.357 586.239 ] concat
%I 12
9 9
9 64
-9 64
-9 9
-64 9
-64 -9
-9 -9
-9 -64
9 -64
9 -9
64 -9
64 9
12 Poly
End

Begin %I Poly
none SetB %I b n
%I cfg gpLTy
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.1 0 0 0.1 174.157 604.939 ] concat
%I 12
9 9
9 64
-9 64
-9 9
-64 9
-64 -9
-9 -9
-9 -64
9 -64
9 -9
64 -9
64 9
12 Poly
End

Begin %I Poly
none SetB %I b n
%I cfg gpLTy
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.1 0 0 0.1 237.857 613.739 ] concat
%I 12
9 9
9 64
-9 64
-9 9
-64 9
-64 -9
-9 -9
-9 -64
9 -64
9 -9
64 -9
64 9
12 Poly
End

Begin %I Poly
none SetB %I b n
%I cfg gpLTy
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.1 0 0 0.1 301.457 615.139 ] concat
%I 12
9 9
9 64
-9 64
-9 9
-64 9
-64 -9
-9 -9
-9 -64
9 -64
9 -9
64 -9
64 9
12 Poly
End

Begin %I Poly
none SetB %I b n
%I cfg gpLTy
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.1 0 0 0.1 365.057 615.639 ] concat
%I 12
9 9
9 64
-9 64
-9 9
-64 9
-64 -9
-9 -9
-9 -64
9 -64
9 -9
64 -9
64 9
12 Poly
End

Begin %I Poly
none SetB %I b n
%I cfg gpLTy
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.1 0 0 0.1 428.757 616.039 ] concat
%I 12
9 9
9 64
-9 64
-9 9
-64 9
-64 -9
-9 -9
-9 -64
9 -64
9 -9
64 -9
64 9
12 Poly
End

Begin %I Poly
none SetB %I b n
%I cfg gpLTy
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.1 0 0 0.1 492.357 615.739 ] concat
%I 12
9 9
9 64
-9 64
-9 9
-64 9
-64 -9
-9 -9
-9 -64
9 -64
9 -9
64 -9
64 9
12 Poly
End

Begin %I Poly
none SetB %I b n
%I cfg gpLTy
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.1 0 0 0.1 555.957 615.639 ] concat
%I 12
9 9
9 64
-9 64
-9 9
-64 9
-64 -9
-9 -9
-9 -64
9 -64
9 -9
64 -9
64 9
12 Poly
End

Begin %I Poly
none SetB %I b n
%I cfg gpLTy
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.1 0 0 0.1 619.657 615.339 ] concat
%I 12
9 9
9 64
-9 64
-9 9
-64 9
-64 -9
-9 -9
-9 -64
9 -64
9 -9
64 -9
64 9
12 Poly
End

Begin %I MLine
%I b 65521
1 0 0 [12 3 1 0] 0 SetB
%I cfg gpLTz
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.1 0 0 0.1 142.357 571.039 ] concat
%I 10
0 0
0 0
318 32
955 250
1591 722
2227 1377
2864 2130
3500 2882
4136 3614
4610 4073
10 MLine
%I 1
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTz
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 142.357 571.039 ] concat
%I
-54 -54 54 54 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTz
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 174.157 574.239 ] concat
%I
-54 -54 54 54 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTz
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 237.857 596.039 ] concat
%I
-54 -54 54 54 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTz
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 301.457 643.239 ] concat
%I
-54 -54 54 54 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTz
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 365.057 708.739 ] concat
%I
-54 -54 54 54 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTz
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 428.757 784.039 ] concat
%I
-54 -54 54 54 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTz
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 492.357 859.239 ] concat
%I
-54 -54 54 54 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTz
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 555.957 932.439 ] concat
%I
-54 -54 54 54 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -210.045 353.819 ] concat

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.1107 -0 -0 1.1107 19.107 -205.255 ] concat
%I
310 644 563 726 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.1107 -0 -0 1.1107 9.99631 -196.594 ] concat
%I
310 644 563 726 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg gpLTx
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 371.945 592.062 ] concat
%I
0 0 432 0 Line
%I 1
End

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTx
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 386.345 592.062 ] concat
%I 4
70 0
0 70
-70 0
0 -70
4 Poly
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -2.2214 0 ] concat

Begin %I Line
%I b 3855
1 0 0 [4 4 4 4] 0 SetB
%I cfg gpLTy
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 373.055 570.284 ] concat
%I
0 0 432 0 Line
%I 1
End

Begin %I Poly
none SetB %I b n
%I cfg gpLTy
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.1 0 0 0.1 386.345 568.062 ] concat
%I 12
9 9
9 64
-9 64
-9 9
-64 9
-64 -9
-9 -9
-9 -64
9 -64
9 -9
64 -9
64 9
12 Poly
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 1.0252e-05 -3.33215 ] concat

Begin %I Line
%I b 65521
1 0 0 [12 3 1 0] 0 SetB
%I cfg gpLTz
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 371.945 544.062 ] concat
%I
0 0 432 0 Line
%I 1
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg gpLTz
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.1 0 0 0.1 386.345 544.062 ] concat
%I
-54 -54 54 54 Rect
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 424.838 601.562 ] concat
%I
[
(ss20 \(local\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 424.838 577.562 ] concat
%I
[
(ninf: ss20 -> Ultra)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 424.838 550.23 ] concat
%I
[
(ninf:ss20 ->J90)
] Text
End

End %I eop

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 1 0 0 1 658.436 564.707 ] concat
%I
[
(matrix size)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f Helvetica-Gothic-24
Helvetica-Gothic 24 SetF
%I t
[ 0 1 -1 0 19.5572 658.639 ] concat
%I
[
(Performance \(MFLOPS\))
] Text
End

End %I eop

showpage


end
%%EndDocument
 @endspecial -83 4266 a Fd(Figure)46 b(3.)g(P)n(erf)n(ormance)h(of)e
(Linpac)n(k)h(via)g(Ninf)-83 4366 y(RPC)-83 4628 y Fl(Figure)27
b(3)f(sho)n(ws)g(preliminary)g(p)r(erformance)g(of)h(Linpac)n(k)-182
4727 y(b)r(enc)n(hmark)33 b(with)i(the)g(Ninf.)58 b(W)-7
b(e)34 b(use)h(a)f(SparcStation-20)-182 4827 y(\(60)g(MHz)i(Sup)r(erSP)
-7 b(AR)n(C,)36 b(128MB)e(memory\))g(as)h(a)g(clien)n(t.)-182
4926 y(The)22 b(Ninf)g(serv)n(er)e(runs)i(at)g(JCC)f(Ultra)h(Sparc)f
(JU1/140)f(\(143)-182 5026 y(MHz)k(UltraSP)-7 b(AR)n(C,)23
b(96)f(MB)i(memory\))f(connected)h(via)f(100)-182 5126
y(base-TX)33 b(ether)i(switc)n(h,)h(and)f(at)f(Cra)n(y)f(J90)h
(\(4CPU\))g(con-)-182 5225 y(nected)j(via)f(FDDI)i(net)n(w)n(ork)d
(\(Figure)h(4\).)64 b(Note)37 b(that)g(the)-182 5325
y(p)r(erformance)19 b(of)h(the)h(clien)n(t)f(lo)r(cal)g(computation)g
(v)-5 b(aries)20 b(from)1974 83 y(10)28 b(MFlop/s)f(to)i(20)f(MFlop/s)g
(as)f(indicated)i(in)g(the)g(dashed)1974 183 y(line.)35
b(In)22 b(SS20,)g(the)g(p)r(erformance)e(dep)r(ends)i(on)f(the)h
(problem)1974 282 y(size)27 b(due)h(to)f(cac)n(he)g(e\013ect.)1974
1187 y @beginspecial 69 @llx 685 @lly 289 @urx 807 @ury
1732 @rwi @setspecial
%%BeginDocument: testenv-pas.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def


% <font> copyfont <font>
/copyfont {
    dup maxlength 1 add dict begin
    {
	1 index /FID ne 2 index /UniqueID ne and
	{def} {pop pop} ifelse
    } forall
    currentdict
    end
} bind def

% <newfont> <asciifont> <kanjifont> eucfont
/eucfont {
    12 dict begin
	dup type /nametype eq { findfont } if
	dup /WMode known {
	    dup /WMode get /WMode exch def
	    WMode 1 eq {
		[0.0 1.0 -1.0 0.0 0.0 0.3] makefont
	    } if
	} if
	copyfont dup begin
	    /Encoding Encoding
	    FMapType dup 2 eq {
		pop 128 128
	    } { 5 eq {
		256 256
	    } {
		/compositefont errordict /invalidfont get exec
	    } ifelse
	    } ifelse
	    getinterval def
	end
	/kanjifont exch definefont
	exch

	dup type /nametype eq { findfont } if
	exch

	/FDepVector [ 4 2 roll ] def
	/FontType 0 def
	/FMapType 4 def
	/FontMatrix matrix def
	/Encoding [ 0 1 ] def
	/FontBBox {0 0 0 0} def
	dup /FontName exch def
	currentdict
    end
    definefont pop
} def

end


tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11.7 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% BOX
gsave
   1.415 setmiterlimit
   newpath
      128 64 moveto 512 64 lineto 512 112 lineto 128 112 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      128 192 moveto 224 192 lineto 224 240 lineto 128 240 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      272 192 moveto 368 192 lineto 368 240 lineto 272 240 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      416 192 moveto 512 192 lineto 512 240 lineto 416 240 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   7 setlinewidth
   newpath
      176 112 moveto
      176 192 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   7 setlinewidth
   newpath
      320 112 moveto
      320 192 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   7 setlinewidth
   newpath
      464 112 moveto
      464 192 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      240 95 moveto (Ethernetwork Switch) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      128 223 moveto (SS20/612) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      448 223 moveto (J90) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      144 271 moveto (Client) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      272 271 moveto (UltraSPARC) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      288 223 moveto (U1/140) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      416 271 moveto (Cray J90) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      192 143 moveto (100BASE-T) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      384 143 moveto (FDDI) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      432 144 moveto
      16 32 atan dup cos 8 mul 464 exch sub
      exch sin 8 mul 160 exch sub lineto
   stroke
grestore
gsave
   newpath
      464 160 8 3 32 16 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      288 144 moveto
      16 32 atan dup cos 8 mul 320 exch sub
      exch sin 8 mul 160 exch sub lineto
   stroke
grestore
gsave
   newpath
      320 160 8 3 32 16 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      176 160 moveto
      -16 32 atan dup cos 8 mul exch sin 8 mul rmoveto
      208 144 lineto
   stroke
grestore
gsave
   newpath
      176 160 8 3 -32 16 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      352 175 moveto (Server) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      416 176 moveto
      16 32 atan dup cos 8 mul 448 exch sub
      exch sin 8 mul 192 exch sub lineto
   stroke
grestore
gsave
   newpath
      448 192 8 3 32 16 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      368 176 moveto
      16 -32 atan dup cos 8 mul 336 exch sub
      exch sin 8 mul 192 exch sub lineto
   stroke
grestore
gsave
   newpath
      336 192 8 3 -32 16 tgifarrowtip
   closepath fill
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sat Dec 28 06:06:29 1996
%%EndDocument
 @endspecial 2340 1369 a Fd(Figure)c(4.)g(T)-5 b(estbed)23
b(con\256guration)2073 1591 y Fl(In)36 b(the)f(Ninf)h(program)c(of)j
(Linpac)n(k,)h(see)f(Figure)f(5,)i(the)1974 1690 y(clien)n(t)52
b(calls)f(a)h(Ninf)h(library)e(function)h(whic)n(h)g(executes)1974
1790 y(t)n(w)n(o)36 b(Linpac)n(k)h(routines,)i Fe(dgefa)c
Fl(and)j Fe(dgesl)p Fl(,)f(in)h(the)g(Ninf)1974 1890
y(serv)n(er.)48 b(The)33 b(Ninf)g(program)d(using)h(Ultra)h(ac)n(hiev)n
(es)f(ab)r(out)1974 1989 y(20)d(MFlop/s)g(for)g(large)g(sizes.)40
b(The)29 b(p)r(erformance)f(program)1974 2089 y(using)35
b(J90)f(increases)g(upto)i(180MFlop/s)d(at)j(size)f(1600)e(as)1974
2188 y(the)28 b(problem)g(size)g(b)r(ecomes)g(larger.)37
b(Note)28 b(that)g(its)h(p)r(erfor-)1974 2288 y(mance)23
b(is)g(not)g(so)g(go)r(o)r(d)g(that)g(the)h(lo)r(cal)f(p)r(erformance)f
(in)i(J90)1974 2388 y(is)e(600)f(MFlop/s.)34 b(W)-7 b(e)23
b(found)g(serious)e(o)n(v)n(erhead)f(of)i(in)n(v)n(oking)1974
2487 y(stub)34 b(executable)g(programs)e(and)i(in)n(terpro)r(cess)f
(comm)n(uni-)1974 2587 y(cation)e(in)h(J90)f(systems,)h(whic)n(h)g(w)n
(e)f(could)g(not)h(iden)n(tify)g(in)1974 2687 y(Ultra.)57
b(Curren)n(tly)-7 b(,)36 b(w)n(e)e(are)g(iden)n(tifying)h(the)g(p)r
(erformance)1974 2786 y(b)r(ottlenec)n(k)27 b(in)h(J90)f(to)g(remo)n(v)
n(e)f(this)i(o)n(v)n(erhead.)p 1974 2893 1707 4 v 1974
3721 4 828 v 2002 3696 a @beginspecial -1 @llx 667 @lly
298 @urx 808 @ury 1979 @rwi @setspecial
%%BeginDocument: testprog.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def


% <font> copyfont <font>
/copyfont {
    dup maxlength 1 add dict begin
    {
	1 index /FID ne 2 index /UniqueID ne and
	{def} {pop pop} ifelse
    } forall
    currentdict
    end
} bind def

% <newfont> <asciifont> <kanjifont> eucfont
/eucfont {
    12 dict begin
	dup type /nametype eq { findfont } if
	dup /WMode known {
	    dup /WMode get /WMode exch def
	    WMode 1 eq {
		[0.0 1.0 -1.0 0.0 0.0 0.3] makefont
	    } if
	} if
	copyfont dup begin
	    /Encoding Encoding
	    FMapType dup 2 eq {
		pop 128 128
	    } { 5 eq {
		256 256
	    } {
		/compositefont errordict /invalidfont get exec
	    } ifelse
	    } ifelse
	    getinterval def
	end
	/kanjifont exch definefont
	exch

	dup type /nametype eq { findfont } if
	exch

	/FDepVector [ 4 2 roll ] def
	/FontType 0 def
	/FMapType 4 def
	/FontMatrix matrix def
	/Encoding [ 0 1 ] def
	/FontBBox {0 0 0 0} def
	dup /FontName exch def
	currentdict
    end
    definefont pop
} def

end


tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11.7 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% RCBOX
gsave
   newpath
      256 80 moveto
      272 80 272 208 16 arcto 4 {pop} repeat
      272 192 lineto
      272 208 0 208 16 arcto 4 {pop} repeat
      16 208 lineto
      0 208 0 80 16 arcto 4 {pop} repeat
      0 96 lineto
      0 80 272 80 16 arcto 4 {pop} repeat
   closepath stroke
grestore

% RCBOX
gsave
   newpath
      512 112 moveto
      528 112 528 208 16 arcto 4 {pop} repeat
      528 192 lineto
      528 208 368 208 16 arcto 4 {pop} repeat
      384 208 lineto
      368 208 368 112 16 arcto 4 {pop} repeat
      368 128 lineto
      368 112 528 112 16 arcto 4 {pop} repeat
   closepath stroke
grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      16 95 moveto (matgen\(\)) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      16 111 moveto (gettimeofday\(\)) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      400 159 moveto (dgefa\(\)) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      400 175 moveto (dgesl\(\)) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      16 191 moveto (gettimeofday\(\)) show
   grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   newpath
      256 128 moveto
      0 128 atan dup cos 12 mul 384 exch sub
      exch sin 12 mul 128 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      384 128 12 5 128 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   newpath
      256 192 moveto
      0 128 atan dup cos 12 mul exch sin 12 mul rmoveto
      384 192 lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      256 192 12 5 -128 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      16 127 moveto (Ninf_call\("linpack",..\)) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      384 143 moveto (linpack\(\){) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      384 191 moveto (}) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      320 255 moveto (double a[lda:n][n]) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      320 271 moveto (int lda) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      320 287 moveto (int n) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      320 303 moveto (double b[n]) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      192 255 moveto (int ipiv[n]) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      192 271 moveto (double b[n]) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      192 287 moveto (int *info) show
   grestore

% OVAL
gsave
   newpath 304 192 16 16 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      304 240 moveto
      -32 0 atan dup cos 8 mul exch sin 8 mul rmoveto
      304 208 lineto
   stroke
grestore
gsave
   newpath
      304 240 8 3 0 32 tgifarrowtip
   closepath fill
grestore

% OVAL
gsave
   newpath 336 128 16 16 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      336 144 moveto
      96 0 atan dup cos 8 mul 336 exch sub
      exch sin 8 mul 240 exch sub lineto
   stroke
grestore
gsave
   newpath
      336 240 8 3 0 96 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      48 79 moveto (Client program) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      368 79 moveto (Server program) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Aug  5 13:03:59 1996
%%EndDocument
 @endspecial 3677 3721 V 1974 3724 1707 4 v 2073 3879
a Fd(Figure)c(5.)f(Pr)n(ogram)i(structure)e(used)g(f)n(or)h(the)f(per)n
(-)2073 3979 y(f)n(ormance)h(measurement)2073 4266 y
Fl(F)-7 b(or)20 b(the)g(matrix)f(size)h Fc(n)p Fl(,)h(the)g
(computation)e(time)i(is)e Fc(O)r Fl(\()p Fc(n)3872 4236
y Fk(3)3910 4266 y Fl(\))1974 4366 y(and)j(the)h(data)f(transfer)g
(time)h(is)f Fc(O)r Fl(\()p Fc(n)3164 4336 y Fk(2)3202
4366 y Fl(\).)36 b(As)22 b(the)h(matrix)f(size)1974 4466
y(is)d(increased,)h(the)g(Ninf)h(program)c(can)j(tak)n(e)e(more)h(adv)
-5 b(an)n(tage)1974 4565 y(of)27 b(high)h(p)r(erformance)e(remote)h
(mac)n(hines.)1974 4804 y Fn(3.)37 b(Curren)m(t)g(Status)h(and)h(F)-9
b(uture)37 b(W)-9 b(ork)2073 5026 y Fl(As)29 b(the)g(Ninf)h(pro)5
b(ject)28 b(is)h(an)f(on-going)f(e\013ort,)h(w)n(e)h(do)f(ex-)1974
5126 y(p)r(ect)20 b(v)-5 b(arious)19 b(c)n(hanges)g(and)h(extensions)f
(to)h(o)r(ccur)f(as)h(w)n(e)f(gain)1974 5225 y(more)k(exp)r(erience)g
(from)g(real)g(applications,)g(and)h(as)f(the)h(sys-)1974
5325 y(tem)k(b)r(ecomes)f(more)g(mature)g(through)g(widespread)g(use.)p
eop
%%Page: 6 6
6 5 bop -83 83 a Fl(Curren)n(tly)-7 b(,)21 b(w)n(e)e(are)g(preparing)f
(a)i(suite)g(of)f(Ninf)i(serv)n(ers)d(on)-182 183 y(Cra)n(y)30
b(J-90,)i(Sun)g(UltraSparcs,)g(and)f(a)h(32-pro)r(cessor)c(DEC)-182
282 y(Alpha)h(w)n(orkstation)e(cluster)h(at)h(Electrotec)n(hnical)e
(Lab)r(ora-)-182 382 y(tory)35 b(of)g(Tsukuba,)j(Japan)c(for)i(public)g
(release.)60 b(On)35 b(these)-182 482 y(serv)n(ers,)21
b(w)n(e)i(ha)n(v)n(e)f(p)r(orted)h(existing)f(mathematical)h(libraries)
-182 581 y(b)n(y)42 b(de\014ned)h(Ninf)g(IDLs)g(and)g(registering)d
(with)k(the)f(Ninf)-182 681 y(serv)n(er.)66 b(The)38
b(libraries)f(include)i(linear)e(algebra)f(pac)n(k)-5
b(ages)-182 780 y(suc)n(h)44 b(as)g(LAP)-7 b(A)n(CK,)44
b(Cra)n(y's)e(LibSci,)49 b(and)c(other)f(sp)r(ecial)-182
880 y(mathematical)29 b(libraries.)41 b(A)30 b(scien)n(ti\014c)f
(constan)n(t)g(database)-182 980 y(for)35 b(ph)n(ysics)h(and)g(c)n
(hemistry)g(is)g(also)f(b)r(eing)i(designed)f(and)-182
1079 y(b)r(eing)31 b(built.)50 b(The)32 b(database)e(will)i(ha)n(v)n(e)
e(\015exible)i(query)f(fa-)-182 1179 y(cilities)44 b(to)g(cop)r(e)g
(with)g(ph)n(ysical)f(constan)n(ts)g(that)i(c)n(hange)-182
1279 y(min)n(utely)28 b(o)n(v)n(er)d(time.)-83 1379 y(Since)i(our)e(ob)
5 b(jectiv)n(e)25 b(is)h(for)g(Ninf)h(to)f(b)r(e)h(a)e(global)h
(service)-182 1478 y(infrastructure)37 b(a)n(v)-5 b(ailable)37
b(for)g(free)h(for)g(a)g(wide)g(v)-5 b(ariet)n(y)37 b(of)-182
1578 y(scien)n(ti\014c)30 b(and)g(engineering)g(use,)h(in)n(v)n(olving)
e(not)h(only)h(high)-182 1678 y(p)r(erformance)c(but)h(also)f(qualit)n
(y-of-use,)g(there)h(are)f(still)i(n)n(u-)-182 1777 y(merous)d(researc)
n(h)g(issues)h(to)g(b)r(e)h(addressed:)-99 1962 y Fi(\017)41
b Fl(Authen)n(tication)24 b(and)h(accoun)n(ting:)34 b(Although)24
b(Ninf)h(it-)-16 2062 y(self)c(will)g(b)r(e)g(a)n(v)-5
b(ailable)19 b(for)h(free,)i(institutions)g(will)f(natu-)-16
2161 y(rally)k(w)n(an)n(t)h(to)g(establish)g(its)g(o)n(wn)g(authen)n
(tication)g(and)-16 2261 y(accoun)n(ting)g(p)r(olicies.)-99
2429 y Fi(\017)41 b Fl(Exp)r(orting)24 b(of)i(clien)n(t)g(co)r(de:)36
b(The)26 b(curren)n(t)f(Ninf)i(has)f(no)-16 2529 y(facilities)e(to)f
(execute)h(clien)n(t's)g(co)r(de)f(on)h(a)f(remote)h(host.)-16
2628 y(Although)31 b(Ninf)i(has)e(call)h(bac)n(k)f(mec)n(hanism,)h(in)g
(some)-16 2728 y(cases,)k(it)g(will)f(b)r(e)h(desirable)e(to)h(exp)r
(ort)g(clien)n(t's)h(co)r(de)-16 2828 y(for)27 b(e\016ciency)g
(reasons.)-99 2996 y Fi(\017)41 b Fl(F)-7 b(ault)26 b(tolerance:)36
b(Since)26 b(global)f(net)n(w)n(ork)h(is)g(not)g(fault-)-16
3096 y(safe,)44 b(c)n(hec)n(kp)r(oin)n(ting)c(and)i(reco)n(v)n(ery)c
(facilit)n(y)j(will)h(b)r(e)-16 3195 y(needed)26 b(for)g(fault)h
(tolerance.)36 b(W)-7 b(e)27 b(are)e(curren)n(tly)h(plan-)-16
3295 y(ning)k(to)g(extend)h(the)f(Ninf)h(transaction)e(facilities)i(in)
n(to)-16 3394 y(full-\015edged)c(reco)n(v)n(erable)d(transactions;)h
(ho)n(w)n(ev)n(er,)g(do-)-16 3494 y(ing)40 b(so)g(without)h
(sacri\014cing)e(computation)i(sp)r(eed)f(or)-16 3594
y(w)n(asting)26 b(to)r(o)i(m)n(uc)n(h)f(resources)e(is)j(not)g(an)f
(easy)f(issue.)-99 3762 y Fi(\017)41 b Fl(Securit)n(y:)63
b(Securit)n(y)41 b(is)g(naturally)f(imp)r(ortan)n(t,)45
b(esp)r(e-)-16 3862 y(cially)30 b(since)i(eac)n(h)e(Ninf)i(serv)n(er)e
(will)h(act)g(as)g(computa-)-16 3961 y(tion)g(serv)n(er)f(and)i(not)f
(mere)h(database)e(serv)n(er.)48 b(Pro)n(vi-)-16 4061
y(sions)36 b(for)h(en)n(trusted)f(Ninf)i(serv)n(er)e(no)r(des,)j(as)d
(w)n(ell)h(as)-16 4160 y(encryption,)d(will)g(b)r(e)g(an)f(imp)r(ortan)
n(t)h(issue)f(for)g(future)-16 4260 y(ev)n(olution)26
b(of)i(Ninf.)-99 4428 y Fi(\017)41 b Fl(In)n(teractiv)n(e)c(User)h(In)n
(terface)g(T)-7 b(o)r(ol:)59 b(In)n(teractiv)n(e)37 b(user)-16
4528 y(in)n(terfaces)32 b(are)g(often)i(v)n(ery)e(attractiv)n(e)g(for)h
(real-w)n(orld)-16 4628 y(applications.)49 b Fm(Ninf-Calc)34
b Fl(is)e(a)g(simple)g(WWW-based)-16 4727 y(Ninf)49 b(in)n(terface,)k
(pro)n(vided)47 b(as)h(a)g(part)g(of)g(the)h(Ninf)-16
4827 y(b)r(o)n(wser.)62 b(The)37 b(Ninf-Calc)f(allo)n(w)f(the)i(users)f
(easily)g(to)-16 4926 y(handle)i(linear)f(system)h(solv)n(er,)h(eigen)n
(v)-5 b(alue)37 b(problem,)-16 5026 y(and)d(other)h(matrix)f(op)r
(eration)g(with)i(clic)n(k)e(and)h(quic)n(k)-16 5126
y(op)r(eration.)k(Eac)n(h)27 b(of)i(the)g(solv)n(er)e(routines)h(b)r
(ehind)i(the)-16 5225 y(Ninf-Calc)h(is)g(pro)n(vided)f(as)g(a)h(Ninf)h
(Executable)e(b)r(eing)-16 5325 y(called)d(through)g(Ninfcall.)2057
83 y Fi(\017)41 b Fl(Load)48 b(Distribution:)81 b(When)50
b(the)g(n)n(um)n(b)r(er)f(of)h(Ninf)2140 183 y(serv)n(ers)28
b(are)h(increased,)h(it)h(b)r(ecomes)f(increasingly)e(dif-)2140
282 y(\014cult)43 b(for)f(a)g(clien)n(t)h(to)g(determine)f(whic)n(h)h
(serv)n(er)e(he)2140 382 y(should)25 b(select)h(among)f(the)h(ones)f
(in)h(the)g(net)n(w)n(ork.)35 b(The)2140 482 y(Ninf)30
b(metaserv)n(ers)56 b([6])29 b(helps)g(to)g(alleviate)g(this)g(situa-)
2140 581 y(tion)24 b(b)n(y)g(gathering)e(the)j(meta-information)e(of)h
(the)g(sta-)2140 681 y(tus)d(and)g(the)g(resource)e(made)h(a)n(v)-5
b(ailable)20 b(b)n(y)g(the)i(serv)n(ers,)2140 780 y(and)34
b(also)g(b)n(y)h(making)f(Ninf)h(services)f(lo)r(cation)g(trans-)2140
880 y(paren)n(t.)2073 1063 y(These)g(and)g(other)f(issues)g(will)h(b)r
(e)g(dev)n(elop)r(ed)g(in)g(accor-)1974 1162 y(dance)i(with)i(adv)-5
b(ancemen)n(ts)36 b(in)h(other)g(global)e(net)n(w)n(orking)1974
1262 y(standards,)41 b(and)e(other)g(e\013orts)f(on)h(global)f(net)n(w)
n(ork)g(com-)1974 1362 y(puting.)1974 1594 y Fn(Ac)m(kno)m(wledgmen)m
(ts)2073 1810 y Fl(The)19 b(authors)f(thank)g(the)h(follo)n(wing)f(p)r
(eople)h(for)f(their)g(con-)1974 1910 y(tin)n(uous)42
b(help)g(concerning)f(this)h(researc)n(h)e(pro)5 b(ject:)66
b(Prof.)1974 2009 y(Ump)r(ei)48 b(Nagashima)d(at)h(Oc)n(hanomizu)g
(Univ)n(ersit)n(y)-7 b(,)51 b(Prof.)1974 2109 y(Satoshi)42
b(Matsuok)-5 b(a)42 b(at)g(T)-7 b(oky)n(o)41 b(Institute)j(of)e(T)-7
b(ec)n(hnology)g(,)1974 2208 y(Prof.)58 b(Hiromitsu)34
b(T)-7 b(ak)i(agi)34 b(at)h(Nago)n(y)n(a)e(Institute)i(of)g(T)-7
b(ec)n(h-)1974 2308 y(nology)g(,)28 b(and)i(Dr.)42 b(Hidemoto)29
b(Nak)-5 b(ada)29 b(of)g(Electrotec)n(hnical)1974 2408
y(Lab)r(oratory)-7 b(.)1974 2640 y Fn(References)1980
2848 y Fb([1])43 b(P)-6 b(.)19 b(Arb)r(enz,)i(W.)e(Gander,)i(and)e(M.)h
(Oettli.)k(The)c(remote)e(com-)2103 2939 y(putational)27
b(system.)37 b Fa(L)l(e)l(ctur)l(e)31 b(Note)e(in)f(Computer)i(Scienc)l
(e,)2103 3030 y(High-Performanc)l(e)f(Computation)g(and)f(Network)p
Fb(,)f(1996.)1980 3119 y([2])43 b(H.)49 b(Casano)n(v)l(a)h(and)e(J.)i
(Dongarra.)105 b(Netsolv)n(e:)81 b(A)48 b(net-)2103 3210
y(w)n(ork)20 b(serv)n(er)g(for)g(solving)h(computational)e(science)i
(problems.)2103 3302 y(T)-6 b(ec)n(hnical)26 b(rep)r(ort,)h(Univ)n
(ersit)n(y)d(of)j(T)-6 b(ennessee,)26 b(1996.)1980 3391
y([3])43 b(I.)22 b(F)-6 b(oster)23 b(and)f(C.)h(Kesselman.)29
b(Globus:)k(A)22 b(metacomputing)2103 3482 y(infrastructure)31
b(to)r(olkit.)48 b(In)29 b Fa(Pr)l(o)l(c.)j(of)f(Workshop)i(on)f(Envi-)
2103 3573 y(r)l(onments)d(and)f(T)-6 b(o)l(ols)p Fb(.)27
b(SIAM,)e(1996.)1980 3662 y([4])43 b(A.)32 b(S.)g(Grimsha)n(w.)55
b(Easy)32 b(to)h(use)f(ob)t(ject-orien)n(ted)h(parallel)2103
3753 y(programming)25 b(with)h(men)n(tat.)33 b Fa(IEEE)27
b(Computer)p Fb(,)g(1993.)1980 3842 y([5])43 b(A.)f(S.)g(Grimsha)n(w,)
47 b(W.)c(A.)f(W)-6 b(ulf,)47 b(J.)c(C.)g(F)-6 b(renc)n(h,)46
b(A.)c(C.)2103 3933 y(W)-6 b(ea)n(v)n(er,)28 b(and)g(P)-6
b(.)27 b(F.)i(Reynolds.)40 b(Legion:)f(The)28 b(next)f(logical)2103
4025 y(step)21 b(to)n(w)n(ard)g(a)g(nationalwide)i(virtual)d(computer.)
26 b(T)-6 b(ec)n(hnical)2103 4116 y(rep)r(ort,)26 b(Univ)n(ersit)n(y)f
(of)h(Virginia,)h(1994.)1980 4205 y([6])43 b(H.)55 b(Nak)l(ada,)63
b(Kusano,)h(S.)55 b(Matsuok)l(a,)64 b(M.)56 b(Sato,)64
b(and)2103 4296 y(S.)29 b(Sekiguc)n(hi.)43 b(A)29 b(metaserv)n(er)f
(arc)n(hitecture)h(for)h(ninf:)40 b(Net-)2103 4387 y(w)n(ork)n(ed)29
b(information)h(library)f(for)h(high)f(p)r(erformance)g(com-)2103
4479 y(puting.)e(In)20 b Fa(SIGNote)25 b(of)e(Information)g(Pr)l(or)l
(c)l(essing)j(So)l(ciety)p Fb(,)2103 4570 y(n)n(um)n(b)r(er)e
(96-HPC-60,)j(1996.)36 b(in)25 b(Japanese.)1980 4659
y([7])43 b(S.)35 b(Sekiguc)n(hi,)j(M.)e(Sato,)i(H.)d(Nak)l(ada,)i(S.)e
(Matsuok)l(a,)k(and)2103 4750 y(U.)34 b(Nagashima.)59
b(|)33 b(ninf)h(|)g(:)50 b(Net)n(w)n(ork)34 b(based)g(informa-)2103
4842 y(tion)f(library)f(for)h(globally)h(high)f(p)r(erformance)f
(computing.)2103 4933 y(In)f Fa(Pr)l(o)l(c.)i(of)g(Par)l(al)t(lel)g
(Obje)l(ct-Oriente)l(d)i(Metho)l(ds)g(and)e(Ap-)2103
5024 y(plic)l(ations)28 b(\(POOMA\))p Fb(,)e(F)-6 b(eb.)26
b(1996.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
