#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.09
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1023143652',
        'name' => 'global/select-menu.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "<!-- 1.0\@bugzilla.org -->\n";
    $output .=  "\n\n";
    $output .=  "\n \n";
    
    # CAPTURE
    $stash->set('options_type', do {
        my $output = '';
    $output .=  $stash->get('options');
        $output;
    });
    
    $output .=  "\n\n<select name=\"";
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "\">";
    if ($stash->get(['options_type', 0, 'search', [ 'ARRAY' ]])) {
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('options');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'value'} = $value;
    $output .=  "\n      <option value=\"";
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$filter($output);
    };
    
    $output .=  "\"";
    if ($stash->get('value') eq $stash->get('default')) {
    $output .=  ' selected';
    }
    
    $output .=  ">";
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$filter($output);
    };
    
    $output .=  "\n      </option>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    }
    elsif ($stash->get(['values_type', 0, 'search', [ 'HASH' ]])) {
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('options');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'option'} = $value;
    $output .=  "\n      <option value=\"";
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\" ";
    if ($stash->get(['option', 0, 'value', 0]) eq $stash->get('default')) {
    $output .=  ' selected';
    }
    
    $output .=  ">";
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'key', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\n      </option>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    }
    
    $output .=  "\n</select>\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
