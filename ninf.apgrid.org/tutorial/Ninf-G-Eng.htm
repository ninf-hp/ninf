<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=shift_jis">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="Ninf-G-Eng.files/filelist.xml">
<title>Ninf-G Tutorial</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place" downloadurl="http://www.5iantlavalamp.com/"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Yoshio</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Yoshio</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>27</o:TotalTime>
  <o:Created>2005-07-21T10:18:00Z</o:Created>
  <o:LastSaved>2005-07-21T10:18:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>8097</o:Words>
  <o:Characters>46153</o:Characters>
  <o:Company>éYã∆ãZèpëççáå§ãÜèä</o:Company>
  <o:Lines>384</o:Lines>
  <o:Paragraphs>108</o:Paragraphs>
  <o:CharactersWithSpaces>54142</o:CharactersWithSpaces>
  <o:Version>11.5703</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:PunctuationKerning/>
  <w:DrawingGridHorizontalSpacing>5.25 pt</w:DrawingGridHorizontalSpacing>
  <w:DrawingGridVerticalSpacing>7.15 pt</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:SelectEntireFieldWithStartOrEnd/>
   <w:UseWord2002TableStyleRules/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"ÇlÇr ñæí©";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	mso-font-alt:"MS Mincho";
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-pitch:fixed;
	mso-font-signature:-1610612033 1757936891 16 0 131231 0;}
@font-face
	{font-family:Century;
	panose-1:2 4 6 4 5 5 5 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:"\@ÇlÇr ñæí©";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-pitch:fixed;
	mso-font-signature:-1610612033 1757936891 16 0 131231 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0mm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:Century;
	mso-fareast-font-family:"ÇlÇr ñæí©";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;}
p.MsoCommentText, li.MsoCommentText, div.MsoCommentText
	{mso-style-noshow:yes;
	margin:0mm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.0pt;
	font-family:Century;
	mso-fareast-font-family:"ÇlÇr ñæí©";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;}
span.MsoCommentReference
	{mso-style-noshow:yes;
	mso-ansi-font-size:8.0pt;
	mso-bidi-font-size:8.0pt;}
 /* Page Definitions */
 @page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:210.0mm 842.0pt;
	margin:72.0pt 87.7pt 72.0pt 87.65pt;
	mso-header-margin:36.0pt;
	mso-footer-margin:36.0pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:ïWèÄÇÃï\;
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0mm 5.4pt 0mm 5.4pt;
	mso-para-margin:0mm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:Century;
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="2050">
  <v:textbox inset="5.85pt,.7pt,5.85pt,.7pt"/>
 </o:shapedefaults></xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=JA style='tab-interval:42.0pt;text-justify-trim:punctuation'>

<div class=Section1>

<p class=MsoNormal><span lang=EN-US>Instruction Manual of Ninf-G</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>These guidelines provide detailed examples for
using Ninf-G. In addition to the instructions on Ninf-G given in Chapter 2 to
11, also see the sample program, Ninf-G2-manual.tgz attached to this document.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Table of contents</span></p>

<p class=MsoNormal><span lang=EN-US>-------------------------------------------------------------------------</span></p>

<p class=MsoNormal><span lang=EN-US>1. Basic information</span></p>

<p class=MsoNormal><span lang=EN-US>1.1 Batch system</span></p>

<p class=MsoNormal><span lang=EN-US>1.2 Globus Toolkit</span></p>

<p class=MsoNormal><span lang=EN-US>1.3 Ninf-G</span></p>

<p class=MsoNormal><span lang=EN-US>1.3.1 What can Ninf-G do?</span></p>

<p class=MsoNormal><span lang=EN-US>1.3.2 Unsupported functions in Ninf-G</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>2. How to use Ninf-G </span></p>

<p class=MsoNormal><span lang=EN-US>2.1 Technical terms and definitions</span></p>

<p class=MsoNormal><span lang=EN-US>2.2 Assumed operating environment</span></p>

<p class=MsoNormal><span lang=EN-US>2.3 Sample program</span></p>

<p class=MsoNormal><span lang=EN-US>2.4 Ninf-G user-prepared files and settings</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>3. Configuration</span></p>

<p class=MsoNormal><span lang=EN-US>3.1 Configuration of Globus Toolkit</span></p>

<p class=MsoNormal><span lang=EN-US>3.2 Configuration of Ninf-G</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>4. Programs not Ninf-G based</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>5. Test of Ninf-G2 on a single machine</span></p>

<p class=MsoNormal><span lang=EN-US>5.1 Server setup</span></p>

<p class=MsoNormal><span lang=EN-US>5.2 Client setup</span></p>

<p class=MsoNormal><span lang=EN-US>5.3 Making programs to Ninf-G applied form</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>6. Test of Ninf-G2 on multiple machines (2
sites)</span></p>

<p class=MsoNormal><span lang=EN-US>7. Test of Ninf-G2 on multiple machines (3
sites)</span></p>

<p class=MsoNormal><span lang=EN-US>8. Multiple job execution with a single
request for job activation</span></p>

<p class=MsoNormal><span lang=EN-US>9. Using remote object capability of Ninf-G</span></p>

<p class=MsoNormal><span lang=EN-US>10. Using MPI</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>11. FAQ</span></p>

<p class=MsoNormal><span lang=EN-US>Q1. Is the domain name necessary for the serverÅfs
name?</span></p>

<p class=MsoNormal><span lang=EN-US>Q2. What causes the execution error and log
output? </span></p>

<p class=MsoNormal><span lang=EN-US>Q3. What does the error message &quot;GRAM
Job failed&quot; mean?</span></p>

<p class=MsoNormal><span lang=EN-US>Q4. What is the file ~/gram_job_mgr_[numerics].log
on the serverÅfs home directory?</span></p>

<p class=MsoNormal><span lang=EN-US>Q5. Is a sample program for Ninf-G
available?</span></p>

<p class=MsoNormal><span lang=EN-US>Q6. Computation time on the server is long.
Is it OK? </span></p>

<p class=MsoNormal><span lang=EN-US>Q7. Which should I use, non-thread flavor
or pthread flavor?</span></p>

<p class=MsoNormal><span lang=EN-US>Q8. What is MDS?</span></p>

<p class=MsoNormal><span lang=EN-US>Q9. How do I debug?</span></p>

<p class=MsoNormal><span lang=EN-US>Q10. What does the heartbeat-related
warning mean?</span></p>

<p class=MsoNormal><span lang=EN-US>Q11. Is shared memory available for Ninf-G?</span></p>

<p class=MsoNormal><span lang=EN-US>Q12. Can I set the compiler and linker?</span></p>

<p class=MsoNormal><span lang=EN-US>Q13. Why are jobs not executed immediately?</span></p>

<p class=MsoNormal><span lang=EN-US>Q14. What is the workDirectory?</span></p>

<p class=MsoNormal><span lang=EN-US>Q15. Why arenÅft stdout and stderr are sent
to the client?</span></p>

<p class=MsoNormal><span lang=EN-US>Q16. How can I create a local LDIF file?</span></p>

<p class=MsoNormal><span lang=EN-US>-------------------------------------------------------------------------</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>-------------------------------------------------------------------------</span></p>

<p class=MsoNormal><span lang=EN-US>1. Basic information</span></p>

<p class=MsoNormal><span lang=EN-US>Ninf-G software helps the development and
execution of parallel task application working on a computation grid consisting
of multiple clusters. Ninf-G was developed based on the Globus Toolkit.
Software such as the batch scheduler, Globus Toolkit and Ninf-G has to be
properly installed and ready for use in all the clusters. An outline of the
batch scheduler, Globus Toolkit and Ninf-G is given below. </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>1.1 Batch system</span></p>

<p class=MsoNormal><span lang=EN-US>A batch system is used for successive
execution of jobs that users place in the queue. It is introduced for the
following functions:</span></p>

<p class=MsoNormal><span lang=EN-US>- The system automatically selects an empty
node and executes the userÅfs job, and the user does not have to assign which
computation host is to be used.</span></p>

<p class=MsoNormal><span lang=EN-US>- When many users share the clusters, the
system controls the number of jobs that can be executed simultaneously. It also
provides each user with a virtual exclusive use environment and prevents
overload. </span></p>

<p class=MsoNormal><span lang=EN-US>- If all the users use the clusters through
the batch system, the system can check the usage of the clusters and the
information of processes running on the computational hosts, and eliminate
unwanted processes remaining on the computational hosts.</span></p>

<p class=MsoNormal><span lang=EN-US>These functions are important for the
management and use of large-scale clusters, and in fact most large-scale
clusters have introduced batch systems and require users to always use the
batch system. </span></p>

<p class=MsoNormal><span lang=EN-US>Portable Batch System (PBS) and Sun Grid
Engine (SGE) are widely used as batch systems.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>1.2 Globus Toolkit</span></p>

<p class=MsoNormal><span lang=EN-US>Globus Toolkit is software package that
provides UNIX commands and API of C and Java to implement some of the functions
necessary for the development and execution of grid software and applications.
Currently, Globus Toolkit is released in Version 2, 3 and 4. Ninf-G Version 2
is implemented with Globus Toolkit Version 2 and Pre-WS GRAM of Globus Toolkit
Version 3 and 4.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>In general in Pre-WS GRAM, Globus
Gatekeeper runs on the entrance host of each cluster and sets a job manager,
which activates jobs on the computation hosts with help of a batch system such
as PBS or SGE, as a default job manager. In other words, unless a job manager
is explicitly specified, jobs are activated on the computation hosts through
the batch system. The computation hosts are utilized through Globus Gatekeeper
on the entrance host and the job manager, since Globus Gatekeeper is not running
on the computation hosts, although Globus Toolkit libraries are installed in
the computation hosts as well.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>1.3 Ninf-G</span></p>

<p class=MsoNormal><span lang=EN-US>Ninf-G is the supporting software for the
development and execution of programs with the Grid Remote Procedure Call
(GridRPC) on grid. Here we explain the Ninf-G Version 2 (Ninf-G2). Due to the
primitive C/Java API of Globus Toolkit, application development with the API is
difficult. Ninf-G2, as an upper middle ware of Globus Toolkit, covers up the
complexity of the grid and Globus Toolkit and helps the development and
execution of applications that use the distributed computational resources on
the grid. For the details of Ninf-G, see Chapt. 2 ÅgHow to use Ninf-GÅh of this
document and ÅgNinf-G Users' ManualÅh (http://ninf.apgrid.org/documents/ng2-manual/user-manual.html).
</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>1.3.1 What can Ninf-G do?</span></p>

<p class=MsoNormal><span lang=EN-US>Ninf-G allows you to carry out the following
tasks.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>- Parallelization of programs with RPC model</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>- Rapid development of grid programs with RPC model</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>- Large-scale computation with multiple computational servers</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>- Dynamical assignment, use and release of computational servers </span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>- Development of programs to detect and prevent accidents and failure in
computational servers and network</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>1.3.2 Unsupported functions in Ninf-G</span></p>

<p class=MsoNormal><span lang=EN-US>Simply speaking, Ninf-G does not provide
the following functions.</span></p>

<p class=MsoNormal><span lang=EN-US>The following are the functions that should
be set, if necessary, in the programs using Ninf-G.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>- Scheduling function</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>(Dynamical search and
selective use of available resources, and</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>dynamical selection of
computation node according to the loads on computational servers.)</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>- Automatic resubmitting of jobs after the detection of failure</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>- Automatic transforming function from MPI programs to Ninf-G programs.</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>- Automatic parallelization of computational program</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>- Parallel programming with shared memory model</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>- Automatic finding of computation hosts and their use, including
application for permission to use computation hosts.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>-------------------------------------------------------------------------</span></p>

<p class=MsoNormal><span lang=EN-US>2. How to use Ninf-G</span></p>

<p class=MsoNormal><span lang=EN-US>In Chapt. 3 and the following chapters, the
procedure for actual use of Ninf-G is described based on the attached sample
programs. Firstly, we rewrite a sequential C program of non Ninf-G type to a
program that uses Ninf-G, and gradually sophisticate the utilization of Ninf-G.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>In this and the following chapters, use the
sample programs to check the procedure.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>2.1 Technical terms and definitions</span></p>

<p class=MsoNormal><span lang=EN-US>We define the technical terms that will be
used in this and the following chapters and explain the terms necessary for
using Ninf-G.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>User:</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>The user is the one that
creates Ninf-G based programs.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>RPC function:</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>RPC function means in Ninf-G
a function that actually carries out numerical calculation. It is executed on a
computational server and requires computational resources (CPU time and memory)
on the server for the execution. The user should create an RPC function and can
use the functions that other users made (share the RPS functions). (Users
should set a function that requires the computational resources as an RPC function.)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Ninf-G client:</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>It is a program or a process
that calls RPC functions and controls the entire computation. The Ninf-G client
program should be created by users. </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Ninf-G Executable, Ninf-G server program:</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>A program to perform
numerical calculation as an RPC function. It is activated when a function
handle is created from the Ninf-G client. When activated, it waits for start
request for the execution (calculation) of the RPC function.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;&nbsp;</span>Only one RPC function
can be defined for Ninf-G Executable. There are two types of Ninf-G Executable:
One that does not retain the function call state, i.e. does not retain the
result of the previous function call, and the other that can define more than
one RPC function (method) and retain the result of the previous function call.
The latter is called the Ninf-G remote object.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Client machine</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>A machine on which users
execute the Ninf-G client program</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Server machine:</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>A machine on which users execute
the Ninf-G server program</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Function handle:</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>It is grpc_function_handle_t
type data prepared or created by the Ninf-G client to call the RPC function. It
is an abstraction of the connection (communication path) between the Ninf-G
remote object and the Ninf-G client.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>A computational server name
needs to be given for creating a function handle. A function handle has
one-to-one correspondence with the Ninf-G Executable process activated on the
computational server.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Object handle:</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>It is
grpc_object_handle_t_np type data prepared or created by the Ninf-G client to
make the Ninf-G remote object and call a method function. It is an abstraction
of the connection (communication path) between the Ninf-G remote object and the
Ninf-G client.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;&nbsp;</span>A computational server
name needs to be given for creating an object handle. An object handle has
one-to-one correspondence with the Ninf-G Executable process activated on the
computational server.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>IDL file:</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>IDL is an abbreviation of
Interface Description Language and defines, in an IDL file, the input/output
type and order for the RPF function call</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>In Ninf-G IDL, object files
(ending with .o) and others can be specified to make a link for the actual
computational processing procedure and execution of the function described in
IDL.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>The Ninf-G server program
and local LDIF file are created based on this user-created IDL file.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Local LDIF file:</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>It is a file storing
information, such as argument order, to call the user-created RPC function.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>It is created when the IDL
file is compiled on the server machine, and used by loading from the client
configuration file.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>In the following command line explanation,
there are lines starting with Åg%Åh or Åg$Åh. The symbols mean a command prompt on
various shells. If the line starts with Åg%Åh, the command is executed on csh (C
shell) or tcsh. If the line starts with Åg$Åh, the command is executed on sh (Brune
shell) or bash. </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>2.2 Assumed operating environment</span></p>

<p class=MsoNormal><span lang=EN-US>In this document, the following operating environment
is assumed.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Client machine<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>: client.example.org</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Server machine<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>: server01.example.org and/or server02.example.org</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>The above machine names are just tentative
and do not exist. Replace them with the actual machine names users use to edit
and execute the samples.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>2.3 Sample program</span></p>

<p class=MsoNormal><span lang=EN-US>The following sample programs.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>The directory of each sample program is
presented on the right side of the symbol Åg:Åh.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Chapter<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>Contents<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Directory name</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>4<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>Programs not
Ninf-G based<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>: serial</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>5<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>Test of
Ninf-G2 on a single machine<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>: 1site</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>6<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>Test of
Ninf-G2 on multiple machines (2 sites)<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>: 2site</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>(The above two have the same contents.)</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>7<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>Test of
Ninf-G2 on multiple machines (3 sites)<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>: 3site</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>8<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>Multiple job
execution with a single request of job activation: array</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>9<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>Using remote
object capability of Ninf-G<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>: object</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>10<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>Using MPI<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>: mpi</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>2.4 Ninf-G user-prepared files and settings</span></p>

<p class=MsoNormal><span lang=EN-US>Users should prepare the following files to
use Ninf-G and the sample programs include them.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>(1) Files necessary for server machine</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>+ IDL file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>+ Object files of
computational functions that the user defined in the IDL file, and library
files</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>(2) Files necessary for client machines</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>+ Ninf-G client program</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>+ Configuration file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>+ Local LDIF file (created
in IDL compiling)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Before the execution of the sample
programs, make the following modification.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>- Modification of client configuration file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Change
&quot;example.org&quot; in the file to the host name of the server actually
used.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>+ Change the hostname
in the section &lt;SERVER&gt;.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>+ Change the hostname
in filename in the section &lt;LOCAL_LDIF&gt;.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>-------------------------------------------------------------------------</span></p>

<p class=MsoNormal><span lang=EN-US>3. Configuration</span></p>

<p class=MsoNormal><span lang=EN-US>You need to set the user configuration for
Globus Toolkit and Ninf-G before you start using Ninf-G. The configuration is
necessary on every login, although you do not have to set manually every time
if you write the procedure in advance in the file, such as .cshrc, .login,
.profile or .bashrc, that the shell loads on each login. </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>3.1 Configuration of Globus Toolkit</span></p>

<p class=MsoNormal><span lang=EN-US>For the user environment of Globus Toolkit,
see Globus Toolkit manual. Configuration of Globus Toolkit Version 2, for
example, should be set in the following steps.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>+ Set the environment
variable GPT_LOCATION to the directory where GPT is installed.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>+ Set the environment
variable GLOBUS_LOCATION to the directory where Globus Toolkit is installed. </span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>+ Load the
configuration file globus-user-env.{sh,csh}.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>(Configuration for sh
or bash)</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>$
GPT_LOCATION=[directory where GPT is installed]</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>$
GLOBUS_LOCATION=[directory where Globus Toolkit is installed]</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>$ export
GPT_LOCATION GLOBUS_LOCATION</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>$ .
$GLOBUS_LOCATION/etc/globus-user-env.sh</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>(Configuration for csh
or tcsh)</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% setenv
GPT_LOCATION [directory where GPT is installed]</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% setenv
GLOBUS_LOCATION [directory where Globus Toolkit is installed]</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% source
$GLOBUS_LOCATION/etc/globus-user-env.csh</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>3.2 Configuration of Ninf-G</span></p>

<p class=MsoNormal><span lang=EN-US>User configuration of Ninf-G should be set
in the following steps.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>+ Set the environment
variable NG_DIR to the directory where Ninf-G is installed.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>+ Load the
configuration file $NG_DIR/etc/ninfg-user-env.{sh,csh}.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>(Configuration for sh
or bash)</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>$
NG_DIR=[directory where Ninf-G is installed]</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>$ export
NG_DIR</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>$ .
$NG_DIR/etc/ninfg-user-env.sh</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>(Configuration for csh
or tcsh)</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% setenv
NG_DIR [directory where Ninf-G is installed]</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=FR style='mso-ansi-language:FR'>% source $NG_DIR/etc/ninfg-user-env.csh<o:p></o:p></span></p>

<p class=MsoNormal><span lang=FR style='mso-ansi-language:FR'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=FR style='mso-ansi-language:FR'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>-------------------------------------------------------------------------</span></p>

<p class=MsoNormal><span lang=EN-US>4. Programs not Ninf-G based</span></p>

<p class=MsoNormal><span lang=EN-US>The sample programs created by not
utilizing Ninf-G are available in the directory ÅgserialÅh.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>This sample program is a simple program to
compute the circle ratio with the <st1:place w:st="on">Monte Carlo</st1:place>
method. In the <st1:place w:st="on">Monte Carlo</st1:place> method, a dot is
randomly placed within a square whose side length is 1. Check if the distance
between the origin and the dot is shorter than 1. The circle ratio can be
obtained by repeating these steps a number of times.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>The circle ratio is derived from the
following equation:</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Circle ratio = the number of dots whose distance from the origin is
shorter than 1 / total number of dots x 4</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>In this method, the computation precision
of the circle ratio varies with the number of dots. The number of dots should
be increased to improve the precision. </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Placing dots within the square requires
some computational capacity, and more capacity is needed to achieve a higher
precision result. Ninf-G uses RPC to improve the utilization of the
computational capacity.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>In the simple execution of the programs
created by not utilizing Ninf-G, pi_serial.c, only one CPU can be used as
computation power or resource. However Ninf-G allows simultaneous/parallel use
of multiple computational servers and can produce more dots in the same
computation time. Consequently, a more precise result could be obtained.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>A function suitable for RPC is one that can
start calculation only with the information provided as input, just like
pi_trial0 function used in this program. </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Execute the program in the following steps.
</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>(1) Change the directory.</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>% cd serial</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>(2) Compile.</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>% make</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>The rxecution file &quot;pi_serial&quot; is created.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>(3) Execute.</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>% ./pi_serial 100000</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>The computed circle ratio is displayed as a result. Here 100000 is the
number of dots and you may enter an arbitrary number.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>-------------------------------------------------------------------------</span></p>

<p class=MsoNormal><span lang=EN-US>5. Test of Ninf-G2 on a single machine</span></p>

<p class=MsoNormal><span lang=EN-US>First, the operation of Ninf-G is tested on
a single machine as the simplest test case.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>A server program is executed with a client
program.</span></p>

<p class=MsoNormal><span lang=EN-US>The client and the server use the same
machine.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Sample program<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>: 1site</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Server machine<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>:
client.example.org (Step 5.1)</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Client machine<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>:
client.example.org (Step 5.2)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Move to the sample program directory before proceeding.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>% cd 1site</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>5.1 Server setup</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(1) Compiling of IDL file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% ng_gen
pi.idl</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(2) Creation of Ninf-G Executable</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% make -f
pi.mak</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>5.2 Client setup</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(1) Compiling of client program</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% ng_cc -o
pi_client_single pi_client_single.c</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>(The above steps, i.e. server setup (1) and
(2) and client setup (1), are given in Makefile. So the execution of the make
command will also follow the same procedure.)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(2) Modification of configuration file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Edit
client.conf file.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>(Use the text editor like vi and emacs command)</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Å®</span><span lang=EN-US> Change &quot;example.org&quot; to
&quot;client.example.org&quot;.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Å®</span><span lang=EN-US> Change &quot;pi.example.org.ngdef&quot; to
&quot;pi.client.example.org.ngdef&quot;.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(3) Execution of client program</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>%
grid-proxy-init</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>'Enter passphrase'</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>The command grid-proxy-init is not needed for all the executions of the
client programs. The command does not have to be executed again until the
created temporary certification becomes out of date,)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>%
./pi_client_single 10000 client.example.org</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>pi_client_single
receives the number of dots and the server host name in the arguments.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>It should be
noted that a single activation of a job requires more than several seconds. It
is s characteristic that Globus Toolkit Ninf-G uses. Job activation corresponds
to the creation of a function handle for Ninf-G, and therefore the creation of a
function handle takes more than several seconds.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>This means, even
if the actual RPC calculation time is less than 1 second, the execution of the
client program takes more than several seconds.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Also, this
waiting time varies depending on the batch system and queuing system of jobs.
In some scheduling of the batch system, the activation of jobs may not start
immediately and may have to wait until other jobs end.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>5.3 Making programs to Ninf-G applied form</span></p>

<p class=MsoNormal><span lang=EN-US>1site/pi_cliet_single executed in this
chapter is a program modified from the one explained in Chapt.4 to a form
suited to Ninf-G </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>The Ninf-G server program for calculating
PI is defined in the IDL file, pi.idl. To be more precise, the program is
modified so that the pi_trial() function can be used as an RPC function and
executed through Ninf-G.</span></p>

<p class=MsoNormal><span lang=EN-US>Also in the modification, the pi_trial()
function is called from an IDL file and the RCP function pi_trial() defined in
the IDL is called from the Ninf-G client program.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>A procedure for calling the defined RPC
function pi_trial() is also added in the Ninf-G client program. The added
procedure calls the following GridRPC API functions.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>+ API of the initialization and finalization for using Ninf-G</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>grpc_initialize(),
grpc_finalize()</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>+ API of the creation and destruction of function handle for calling RPC</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>grpc_function_handle_init(),
grpc_function_handle_destruct()</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>+ API for requesting the function handle to execute the RPC</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>grpc_call()</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>+ API for waiting the execution completion of the RPC and its result</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>grpc_wait_all()</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>This GridRPC APIs enable RPC model
calculation with Ninf-G.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>-------------------------------------------------------------------------</span></p>

<p class=MsoNormal><span lang=EN-US>6. Test of Ninf-G2 on multiple machines (2
sites)</span></p>

<p class=MsoNormal><span lang=EN-US>Next we perform a test with multiple
machines.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>A server program is executed with a client
program.</span></p>

<p class=MsoNormal><span lang=EN-US>The client and the server use different
machines.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Sample program<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>: 2site</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Server machine<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>:
server01.example.org (Step 6.1)</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Client machine<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>:
client.example.org<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>(Step 6.2)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Move to the sample program directory before proceeding.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>% cd 2site</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>6.1 Server setup</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Login the server
machine and go to the directory 2site. Follow the same steps in 6.1.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>(Since Makefile
contains the rule, the execution of the make command will create the server
program.)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The local LDIF file
&quot;pi.server01.example.org.ngdef&quot; that contains the server machine name
is created simultaneously. This file is used for Ninf-G client.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class=MsoNormal><span lang=EN-US>6.2 Client setup</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(1) Compiling of client program</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Login the client
machine and make an operation.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% ng_cc -o
pi_client_single pi_client_single.c</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(2) Copy of local LDIF file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The file
&quot;pi.server01.example.org.ngdef&quot; in the directory on
server01.example.org, where Ninf-G Executable is compiled, should be copied to
the client machine client.example.org.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% scp
server01.example.org:/path/to/pi.server01.example.org.ngdef .</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>In this case the
command scp is used for copying. It is a program included in SSH (Secure SHell:
Remote operation command with coded communication path). Here scp copies the
remote file into the current directory. )</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(3) Modification of configuration file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Edit
client.conf file.</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Å®</span><span lang=EN-US> Change &quot;example.org&quot; to
&quot;server01.example.org&quot;.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Å®</span><span lang=EN-US> Change &quot;pi.example.org.ngdef&quot; to
&quot;pi.server01.example.org.ngdef&quot;.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(4) Execution of client program</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>%
grid-proxy-init</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>'Enter passphrase'</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>%
./pi_client_single 10000 server01.example.org</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>pi_client_single
receives the number of dots and the server host name in the arguments.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>With these steps, it is confirmed that the
Ninf-G client program activated on client.example.org requests
server01.example.or to calculate RPC.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>The client machine and server machine can
be located geometrically far apart. As seen here, the computation of using
remote computation resources over the network can be performed with Ninf-G.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>-------------------------------------------------------------------------</span></p>

<p class=MsoNormal><span lang=EN-US>7. Test of Ninf-G2 on multiple machines (3
sites)</span></p>

<p class=MsoNormal><span lang=EN-US>Next we perform a test to call RPC in parallel
with multiple computational servers.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Two server programs are executed with a
client program.</span></p>

<p class=MsoNormal><span lang=EN-US>The client and the server use different
machines.</span></p>

<p class=MsoNormal><span lang=EN-US>Parallel computation is realized by
distributing the job to the computational servers.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Sample program<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>:
3site</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Server machine 1<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>:
server01.example.org (Step 7.1)</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Server machine 2<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>:
server02.example.org (Step 7.1)</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Client machine<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span>: client.example.org<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>(Step 7.2)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Move to the sample program directory before proceeding.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>% cd 3site</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>7.1 Server setup</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Login each server
machine and follow the steps in 6.1 in each machine.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class=MsoNormal><span lang=EN-US>7.2 Client setup</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(1) Modification of client program file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Modify
pi_client_single.c, used for test in Chapts. 5 and 6 , for executing multi
server computation.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>(Modified source file
is pi_client_multi.c.)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Åú</span><span lang=EN-US> Major changes</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-
Since we have multiple computational servers, the data structure related to the
computational servers should be prepared as an array in an appropriate size for
the number of the computational servers.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-
Creation of a function handle, call of RPC and destruction of the function
handle are repeated for each of the servers used.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(2) Compiling client program</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% ng_cc -o
pi_client_multi pi_client_multi.c</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(3) Copy of local LDIF file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The files
&quot;pi.server01.example.org.ngdef&quot; and
&quot;pi.server02.example.org.ngdef&quot;
&quot;pi.server01.example.org.ngdef&quot; in the directories respectively on
server01.example.org and server02.example.org, where Ninf-G Executable is
compiled, should be copied to the client machine client.example.org.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% scp
server01.example.org:/path/to/pi.server01.example.org.ngdef .</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% scp
server02.example.org:/path/to/pi.server02.example.org.ngdef .</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(4) Modification of configuration file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Edit
client.conf file.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Å®</span><span lang=EN-US> Change &quot;example.org&quot; to &quot;server01.example.org&quot;.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Å®</span><span lang=EN-US> Add the line &quot;hostname
server02.example.org&quot; in hostname in the section &lt;SERVER&gt;.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Å®</span><span lang=EN-US> Change &quot;pi.example.org.ngdef&quot; to
&quot;pi.server01.example.org.ngdef&quot;. Add &quot;filename
pi.server02.example.org.ngdef&quot; in the next line.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(5) Execution of client program</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>%
grid-proxy-init</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>'Enter passphrase'</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>%
./pi_client_multi 10000 \</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>server01.example.org server02.example.org</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>(Here, \(the backslash in the line end) is a shell function, meaning
that the command line continues to the next line.)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>pi_client_multi
receives the number of dots and the server host name in the arguments.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>More than one
server host name can be specified, and the computation will be carried out in
all the hosts specified in the argument.<span style='mso-spacerun:yes'>&nbsp;
</span></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>This procedure enables parallelization of
computation on multiple servers.</span></p>

<p class=MsoNormal><span lang=EN-US>In this program, the computational servers
share the dots, whose total number is specified in the command line argument,
and carry out the computation in parallel.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Therefore the computation time of this
program with two severs is smaller than that with a single server. If the
number of the dots is of the order of 10,000, the calculation ends immediately
and the effect of parallelization is not clear. However if the computation
takes a long time such as one day, multiple server computation reduces the
calculation time significantly. The more computational servers we have, the
smaller the computation time is.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>-------------------------------------------------------------------------</span></p>

<p class=MsoNormal><span lang=EN-US>8. Multiple job execution with a single
request for job activation</span></p>

<p class=MsoNormal><span lang=EN-US>A cluster system usually has multiple
computational servers (computational nodes). The jobs submitted to the job
submission node of the cluster system are allocated to each computational node
and executed in the system.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>To use more than one computational node
from Ninf-G, a function handle needs to be created for each of the nodes.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>The creation of one function handle takes
at least several seconds, and that of more than one function handle takes time
proportional to the number of the handles to be created. Also, a job manager
process is activated in the entrance host every time the request for creating a
function handle is submitted. So the entrance host will be overloaded if more
than several tens or more than several hundreds of function handles are created
in the simple way, i.e. by making the handle one by one. To prevent the
overload, Ninf-G has a function to create more than one function handle
simultaneously when it receives a single request for the creation of the
handles. With this function of Ninf-G, the creation time is saved and a large
number of (several tens to several hundreds of) function handles can be
created.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>A test on using this function is conducted
in this chapter.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Sample program<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>:
array</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Server machine<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>: server01.example.org (Step 8.1)</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Client machine<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>: client.example.org<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>(Step 8.2)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Move to the sample program directory before proceeding.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>% cd array</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>8.1 Server setup</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Log in the server
machine (cluster management node) and make operations following the steps in
6.1.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class=MsoNormal><span lang=EN-US>8.2 Client setup</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(1) Modification of client program file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>pi_client_multi.c,
used as the sample in Chapt. 7, is modified with API grpc_function_handle_array_init_np()
to create more than one function handle simultaneously. (The source file
obtained by the modification is pi_client_array.c.)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Åú</span><span lang=EN-US> Major changes</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-
Multiple calls for grpc_function_handle_init() is changed to a single call for
grpc_function_handle_array_init_np().</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(2) Compiling of client program</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% ng_cc -o
pi_client_array pi_client_array.c</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(3) Copy of local LDIF file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The file
&quot;pi.server01.example.org.ngdef&quot; in the directory on
server01.example.org, where Ninf-G Executable is compiled, should be copied to
the client machine client.example.org.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% scp
server01.example.org:/path/to/pi.server01.example.org.ngdef .</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(4) Modification of configuration file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Edit
client.conf file.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Å®</span><span lang=EN-US> Change &quot;example.org&quot; to
&quot;server01.example.org&quot;.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Å®</span><span lang=EN-US> Change &quot;pi.example.org.ngdef&quot; to
&quot;pi.server01.example.org.ngdef&quot;.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(5) Execution of client program</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>%
grid-proxy-init</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>'Enter passphrase'</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>%
./pi_client_array 10000 server01.example.org 4</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>pi_client_array
receives arguments of the number of dots, server hostname, and the number of
handles.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Åh4Åh at the end of the
command line represents the number of function handles to be created. Here the
number is set to 4, although it is not necessarily 4.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>If the cluster system
you use is shared with other users, pay attention to the number of the created
handles and be sure to use the system insofar as it is allowed.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>This program uses ÅgSimultaneous creation
function of function handlesÅh to suppress the overhead in the creation of
function handles and keep the number of the job managers activated in the
entrance host as small as possible. This function is needed for the usage of a
large size cluster system with tens to hundreds processors.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>-------------------------------------------------------------------------</span></p>

<p class=MsoNormal><span lang=EN-US>9. Using remote object capability of Ninf-G</span></p>

<p class=MsoNormal><span lang=EN-US>Ninf-G Executable is state-less. Namely,
even when the RPC function is called repeatedly with the same function handle,
the state in the previous call is not retained in Ninf-G Executable. So, data
needs to be sent for each calculation even in the repeated computations with
the same data.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Ninf-G2 provides Ninf-G Executable, as a
remote object, capable of retaining states. More than one function (method) can
be defined in the remote object, and the object provides a function for Ninf-G
client to call these methods.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>For use of the remote object capability,
object handles, not function handles, should be created. Object handles are the
grpc_object_handle_t_np type data and abstraction of the connection
(communication path) between Ninf-G remote object and Ninf-G client. Once an
object handle is created, the corresponding remote object retains the state
until the object handle is discarded. It can also call various methods to
change the state for the object handle.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>For example when the input data of RPC is
extremely large and the same input data is used in the call for every RPC, the
remote object capability can be effectively utilized. Once an initialization
method sending the large input data is called just one time after each handle
is created, and saved in Ninf-G Executable, the large input data need not to be
transferred again in the subsequent calls for RPC and the system performance is
improved.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>The following is another example of the
implementation of methods in Ninf-G class.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>- Initialization processing
method:</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Arguments are given. The given arguments are stored in the data holding
area.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>- Computation 1 method:</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>The
data in the holding area is used to execute Computation 1. The result is stored
in the data holding area and not returned.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>- Computation 2 method:</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>The
result in the data holding area is used to execute Computation 2. The final
result of Computation 2 is returned to the client.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Sample program<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>:
object</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Server machine<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>: server01.example.org (Step 9.1)</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Client machine<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>: client.example.org<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>(Step 9.2)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Move to the sample program directory before proceeding.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>% cd object</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>9.1 Server setup</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(1) Modification of IDL file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The IDL file pi.idl
used in Chapts. 5-8 is changed to an object.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>(The source file
obtained in the modification is pi_object.idl)</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Edit
pi_object.idl.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Åú</span><span lang=EN-US> Major changes</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-
Define is changed to DefClass.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-
Function processing method is moved to DefMethod pi_trial.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(2) Compiling of IDL file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% ng_gen
pi_object.idl</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(3) Creation of Ninf-G Executable</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% make -f
pi_object.mak</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>9.2 Client setup</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(1) Modification of client program file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>pi_client_multi.c,
used as an example in Chapt. 6, is modified to a form that executes calculation
using Ninf-G remote object capability.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>(The source file
obtained in the modification is pi_client_object.c)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Åú</span><span lang=EN-US> Major changes</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-
The name of the function to be called is modified.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-
The API and data structure starting from the grpc_function_handle is modified
to those from grpc_object_handle.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(2) Compiling client program</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% ng_cc -o
pi_client_object pi_client_object.c</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(3) Copy of local LDIF file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The file
&quot;pi.server01.example.org.ngdef&quot; in the directory on
server01.example.org, where Ninf-G Executable is compiled, should be copied to
the client machine client.example.org.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>% scp server01.example.org:/path/to/pi_object.server01.example.org.ngdef
.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(4) Modification of configuration file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Edit
client.conf file.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Å®</span><span lang=EN-US> Change &quot;example.org&quot; to
&quot;server01.example.org&quot;.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Å®</span><span lang=EN-US>Change
&quot;pi_object.example.org.ngdef&quot; to
&quot;pi_object.server01.example.org.ngdef&quot;.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(5) Execution of client program</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>%
grid-proxy-init</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>'Enter passphrase'</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>%
./pi_client_object 10000 server01.example.org</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>pi_client_object
receives arguments of the number of dots and server hostname.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>-------------------------------------------------------------------------</span></p>

<p class=MsoNormal><span lang=EN-US>10. Using MPI</span></p>

<p class=MsoNormal><span lang=EN-US>Parallel programs written in MPI can be set
as RPC functions in Ninf-G. This feature allows the programming to perform
fine-grained parallel processing with MPI on a server machine that are called
in remote procedure call, in addition to the master-worker type parallel task programming
mentioned in the above.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Sample program<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>:
mpi</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Server machine<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>: server01.example.org (Step 10.1)</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Client machine<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>: client.example.org<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>(Step 10.2)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Move to the sample program directory before proceeding.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>% cd mpi</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>10.1 Server setup</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(1) Modification of IDL file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The IDL file pi.idl
used in Chapts. 5-8 is modified to a form that uses MPI. (The modified source
file is pi_mpi.idl)</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Edit
pi_mpi.idl.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Åú</span><span lang=EN-US> Major changes</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-
mpicc is assigned for compiler and linker. </span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>- ÅgMPIÅh
is specified in Backend.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-
The function interface is modified (The number of arguments is reduced.)</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-
The function of MPI is described in the computational function.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>A code for exchanging the given arguments and calculation results
through MPI communication is added to carry out calculation at each rank of
MPI.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(2) Compiling of IDL file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=DE style='mso-ansi-language:DE'>% ng_gen pi_mpi.idl<o:p></o:p></span></p>

<p class=MsoNormal><span lang=DE style='mso-ansi-language:DE'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=DE style='mso-ansi-language:DE'><span
style='mso-spacerun:yes'>&nbsp;</span></span><span lang=EN-US>(3) Creation of
Ninf-G Executable</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% make -f
pi_mpi.mak</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>10.2 Client setup</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(1) Modification of client program file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>pi_client_single.c
used as an example in Chapts. 5 and 6 is modified to a form that uses MPI for
executing computation.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>(The source file
obtained in the modification is pi_client_mpi.c)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Åú</span><span lang=EN-US> Major changes</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-The
name of the function to be called is modified.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-
The function argument is modified in grpc_call().</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(2) Compiling of client program</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% ng_cc -o
pi_client_mpi pi_client_mpi.c</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(3) Copy of local LDIF file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The file
&quot;pi.server01.example.org.ngdef&quot; in the directory on
server01.example.org, where Ninf-G Executable is compiled, should be copied to
the client machine client.example.org.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>% scp
server01.example.org:/path/to/pi_mpi.server01.example.org.ngdef .</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(4) Modification of configuration file</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Edit
client.conf file.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Å®</span><span lang=EN-US> Change &quot;example.org&quot; to
&quot;server01.example.org&quot;.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Å®</span><span lang=EN-US> Set mpi_runNoOfCPUs to the number of CPU
used.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"ÇlÇr ñæí©";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>Å®</span><span lang=EN-US> Change &quot;pi_mpi.example.org.ngdef&quot;
to &quot;pi_mpi.server01.example.org.ngdef&quot;.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span>(5) Execution of client program</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>%
grid-proxy-init</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>'Enter passphrase'</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>%
./pi_client_mpi 10000 server01.example.org</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>pi_client_mpi
receives arguments of the number of dots and sever hostname.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>The number of
CPU used here is set in mpi_runNoOfCPUs in the section SERVER of the configuration
file as described in (4). There are several other ways in Ninf-G to set the
number of CPU for MPI. For details see the Ninf-G UserÅfs Manual. </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>MPI is famous as a parallel programming
model in existing parallel systems. It has the advantage that existing MPI
programs can be executed on a grid in their original forms with grid-compatible
MPI implementation such as MPICH-G2. On the other hand, it is difficult to
ensure co-allocation in a grid, i.e. to undertake simultaneous activation of
all MPI processes at the start of the program execution, although MPI requires
the co-allocation. Some functions such as process spawning may help the
co-allocation to a certain extent, although in principle the processors and the
number of processes MPI uses are determined statically and the dynamical
property of the grid is not entirely compatible with MPI. It is one of the most
attractive features of grids to carry out a large size application in a large-scale
environment for a long time, while it is important to pay attention to what
should be done in case of system failures, e.g. hardware failure of computation
hosts. However with MPI, all program executions are terminated if an error
occurs in a single process. In this sense, MPI is not completely failure-resistant</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>GridRPC is a programming model that can
circumvent the above problem. GridRPC does not always require the
co-allocation, and resources can be rather easily added/released dynamically by
the dynamical creation/destruction of function handles. Also, an error in a
computational host has no influence on the computation executed in other hosts,
and therefore one can easily deal with failures by terminating the troubled
computation or by sending the request again.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>MPI is a popular programming model for
parallel computation. Under the current circumstances, however, even the
programs that are not suited for MPI are often written with MPI. The most
suitable programming model should be selected according to the characteristics
of the implemented application. To implement an application that executes more
than one independent computation with distributed resources on grid, GridRPC
should be used. (At least MPI should not be used.) Both advantages of GridRPC
and MPI can be utilized for the implementation of a large-scale application by
combining them to use MIP for computation with frequent detailed communication
and Ninf-G for computation with infrequent communication.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>-------------------------------------------------------------------------</span></p>

<p class=MsoNormal><span lang=EN-US>11. FAQ</span></p>

<p class=MsoNormal><span lang=EN-US>Past questions and cautions are listed
below.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q1. Is the domain name necessary for the serverÅfs
name?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Q. Creating a function handle with grpc_function_handle_init() API
requires the serverÅfs name. Can I omit the domain name in the serverÅfs name, or
do I have to use the domain name?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>A. The domain name is necessary.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>When creating a function
handle and client configuration file, you have to use FQDN (Fully Qualified
Domain Name) to set the serverÅfs name and cannot use &quot;localhost&quot;. If
the serverÅfs name is not properly specified with FQDN, Ninf-G API is terminated
with an error.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>For example when you
use a server of the domain name server.example.org, you cannot specify the
serverÅfs name simply as &quot;server&quot; but have to use
&quot;server.example.org&quot;.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q2. What causes the execution error and log
output? </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Q. I made and executed an Ninf-G based client program, but it hasnÅft
executed properly. It seems the execution of Ninf-G API failed. What is the
cause? </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>A. Ninf-G has a customizable function for log output. By making
log-related settings in the client configuration file and the server
configuration file, you get the output of the information on the error in the
execution of Ninf-G API as well as on debugging. The output can be sent to a
file.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>With this log function
you can check the execution status of Nif-G API and trace the cause of the
failure in the execution of API.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>For details of log
function settings, see Ninf-G UserÅfs Manual in</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>http://ninf.apgrid.org/documents/ng2-manual/user-manual.html</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span>(Log output
setting for client: Section 4.3.9)</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>(Log output setting
for server: Section 3.3.2)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The log output
messages will appear in the following order.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&quot;Date and
time:Client/Server:Host name:Log level: ID of each data structure:Name of
Ninf-G internal function:Log messageÅh</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Every Ninf-G API
returns the value of grpc_error_t that presents success or failure of the
execution. UserÅfs programs should be written to include a function for checking
these values.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>If the computation function
executed with Ninf-G Executable results in Segmentation fault, the coreDumpSize
attribute of the section &lt;SERVER&gt; in the client configuration file might
be enabled.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q3. What does the error message &quot;GRAM
Job failed&quot; mean?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Q. grpc_call() or grpc_call_async() is terminated with an error. What is
the cause? In the error log, the log message &quot;ngcllJobCallback: GRAM Job
failed because ...&quot; appears.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>A. The error message ÅgGRAM job failedÅh indicates an error in GRAM, which
is a job execution module of Globus Toolkit used by Ninf-G.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>There are various
causes of the error in GRAM and it is difficult to identify one. The resolution
varies depending on the error message.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Execute the following
command to check if GRAM can be properly used.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>% globus-job-run
server.example.org /bin/hostname</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The above command
requests GRAM in server.example.org to execute the command /bin/hostname. If
the command is executed successfully the host name is displayed. Sometimes the
error is fixed with the execution of this command.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>For the error in GRAM,
see the web page of Globus.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>GRAM RSL (Resource
Specification Language) that Ninf-G client sends to GRAM can be checked if the
log level of the client is set to Information or Debug.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q4. What is the file
~/gram_job_mgr_[numerics].log on serverÅfs home directory?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Q. When I used Ninf-G, a file Åggram_job_mgr_[numerics].logÅh was created
in the serverÅfs home directory. What is this file?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>A. This file is a log file from GRAM, a job execution module of Globus
Toolkit Ninf-G uses. </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>GRAM activates
jobmanager process in the same timing of job execution.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The jobmanager process
detects the completion and executes forced termination by monitoring the job.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The jobmanager
eliminates the log file if the job ends normally, but does not if any error
occurs or the job execution is canceled. In the latter case, the log file of
GRAM remains in the home directory. </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>If Ninf-G client is
terminated by e.g. ^C key after grpc_function_handle_init() API creates a
function handle and before grpc_function_handle_destruct() destructs the
handle, the job corresponding to the handle is cancelled.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>A file
gram_job_mgr-[numerics].log remains in the home directory of the server as a
result of such abnormal terminations.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>You may delete the
file if you do not need to find the cause of the job termination.</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span></span></p>

<p class=MsoNormal><span lang=EN-US>Q5. Is a sample program for Ninf-G
available?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Q. I would like to create a Ninf-G based program, I donÅft know how to
write. Is a sample program available?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>A. Ninf-G based sample programs are available in the Ninf-G package.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Ninf-G can be
downloaded from the web page:</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>http://ninf.apgrid.org/packages/welcome.shtml</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Download Ninf-G
version 2 package from the web page.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>The package
contains four programs.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>test/samples/pi<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>: <st1:place w:st="on">Monte Carlo</st1:place> calculation for obtaining
circle ratio</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>test/samples/add<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>: Addition of arrays</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>test/samples/pi_mpi : Calculation with the use of MPI</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>test/diag<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>: Exhaustive test to check if Ninf-G can be used with no problem.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q6. Computation time on the server is long.
Is it OK?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>Q. After making a function handle, I would like to use it for more than
a few days. What should I be aware of?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>A. Pay attention to the valid term of the temporary certificate. The
command grid-proxy-init generates the temporary certificate with the valid term
set to 12 hours unless given specifically.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>There are two
ways to use function handles for more than 12 hours.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span>1. Use &#8211;valid option of grid-proxy-init
command.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>2.
Use Refresh Credentials function of Ninf-G and continue the computation while
creating temporary certification periodically.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q7. Which should I use, non-thread flavor
or pthread flavor?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Q. Non-thread flavor and pthread flavor are available in Globus Toolkit,
and both can be compiled with Ninf-G. Which should I use?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>A. Use pthread flavor. Ninf-G client has some features that can be used
only after the compilation with pthread flavor. So the client should use
pthread flavor.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>If you do not need the
features, you can use either flavor. </span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Also either flavor can
be used for Ninf-G Executable.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>If the user-written
program uses pthread, pthread flavor needs to be used in Ninf-G.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;&nbsp;</span>Globus Toolkit can
provide almost the same features with either non-thread flavor or pthread
flavor, although the performance changes depending on the flavor because of the
totally different internal implementation.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q8. What is MDS?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Q. Ninf-G seems to use MDS. What is MDS? Do I need to use it?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>A. MDS is an information service Globus Toolkit provides. Ninf-G can use
MDS. The information of each RPC installed in the computational server can be
acquired with MDS.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>However the
information can also be obtained with a local LDIF file and MDS is not always
necessary.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The following are
cautions for use of MDS.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>- The
installation of the Ninf-G RPC function information into the Globus Toolkit
directory is required for use of MDS. The information is provided by installing
an LDIF file, which LDAP internally implemented in MDS refers to, into
var/gridrpc under the Globus Toolkit directory. However, MDS has a cash and it
sometimes takes about 10 minutes to update the information. So the information
search may fail just after the installation of the LDIF file.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>The command ng_dump_functions of Ninf-G can be used to see which RPC is
installed.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>- The
directory where the LDIF file is installed for use of MDS is a shared directory.
Each user does not have his/her own directory. So, users are not allowed to create
and install RPC functions of the same name in the same server.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>You need to be careful not to disturb other users when using the shared
directory.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>- You
should know the VO_NAME in advance.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>To search information with MDS, you should know the VO_NAME set in the
server from which you request information. Without knowing the VO_NAME you
cannot search for information. If you can login to the MDS server, you can see the
VO_NAME by looking into etc/grid-info-slapd.conf under the Globus Toolkit
directory.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q9. How do I debug?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Q. It is difficult to debug Ninf-G Executable because it is activated
remotely. Is there any convenient method of debugging?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>A. Ninf-G has a debugging function for Ninf-G Executable. Set
debug_busyLoop, debug, and coreDumpSize in the section &lt;SERVER&gt; of the
client configuration file. For details see the UserÅfs Manual.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The log output
function is enabled also in the debugging operation. Both client and Ninf-G
Executable can output a log and can check every change in the operation status
of Ninf-G API </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q10. What does the heartbeat-related
warning mean?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Q. The following message appeared in the log output in Ninf-G client. Is
there any problem?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&quot;... heartbeat
timeout warning (60 seconds) occurred ...&quot;</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>A. It does not always mean a problem.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Heartbeat is a Ninf-G
function to detect if the Ninf-G Executable process is running with no problems,
if the system is not freezing, and if the network has any problems.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Ninf-G Executable
sends the heartbeat periodically to the client. If the network or Ninf-G
Executable freezes, the heartbeat cannot be transferred from Ninf-G Executable
to the client. </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>If the heartbeat does
not reach the Ninf-G client within a certain period of time, the client
considers that the Ninf-G Executable (function handle) has a problem and cannot
be used, and puts out an error. Then the function handle cannot be used any
more. The RPC in execution returns with an error.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>For the sake of this
function, the Ninf-G client can detect failure without freezing, and the users
can make a trouble-resistant, failure-resistant program.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Suppose Ninf-G
Executable transmits the heartbeat every 60 seconds. The warning of the
heartbeat appears if the Ninf-G client does not receive the heartbeat for 60
seconds. So, the warning appears even when a slight delay of Ninf-G Executable
processing causes the delay in periodic heartbeat transmission. It is therefore
not certain that this warning status should be determined as a failure.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>In the default
setting, the interval of the periodic heat-beat transmission is 60 seconds and
the failure judgment is made after the client does not received the heartbeat
for 60 seconds x 5 =300 seconds. (For details see the UserÅfs Manual.)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>If the following
message is displayed after the heartbeat warning, it means the recovery of the
heartbeat transmission.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&quot;... heartbeat
revived again ...&quot;</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q11. Is shared memory available for Ninf-G?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Q. I want to use Ninf-G. Is a shared memory function available in
Ninf-G? Is it possible to share the variables in Ninf-G Excutable</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>A. Ninf-G does not have a shared memory function. A variable sharing
function for Ninf-G Executable is also not available.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q12. Can I set the compiler and linker?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Q. Can I set the compiler and linker?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>A. Yes you can. Compiler, Linker and others are available in IDL file
syntax.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q13. Why are jobs not executed immediately?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Q. I made a function handle but the job is not executed immediately and
grpc_call() API and grpc_call_async() API stop. How could this happen?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>A. It can happen. For example, if the cluster that the job goes to
already has many users and other userÅfs jobs are preferentially executed, your
job has to wait until the other jobs end. So the execution of jobs does not
always starts immediately.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>If you want to place a
limit on the execution time for your job, set the attribution job_startTimeout
in the section &lt;SERVER&gt; of the client configuration file.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q14. What is the workDirectory?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Q. What is the attribution workDirectory that can be set in the client
configuration file?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>A. workDirectory is used to specify the directory in which the Ninf-G
Executable process operates. In default Ninf-G Executable operates in the
directory in which the Ninf-G Executable program is installed. Use
workDirectory to change this directory.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>If a relative file
name is specified in an RPC function or computational function to open a file,
the file is searched starting from the workDirectory and opened.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>In case of a Segmentation
fault due to a computational function failure, a core file, which is a memory
image at abnormal termination, is sometimes created. This core file also goes
to the directory specified in the workDirectory.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The absence of the
specified workDirectory causes an error. So you need to be careful. </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>You may need to be
careful if the job submission node and the job execution computational node are
different in the cluster system. Due to the restriction of Globus Toolkit, an
error occurs if the workDirectory exists in the computational node but not in
the job submission node.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q15. Why arenÅft stdout and stderr are sent
to the client?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Q. Character strings are put out from printf() or fprintf() in IDL files
or computational functions, but the output result is not sent to the client.
There is a setting Ågredirect_outerr trueÅh in the section &lt;SERVER&gt; in the
client configuration file. Why isnÅft it sent?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>A. Ninf-G uses the stdout/stderr transfer function provided by Globus
Toolkit GASS module to send stdout and stderr of the computational functions.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The timing of the GASS
stdout/stderr transfer changes with the jobmanager that Globus Toolkit GRAM
uses. So the transfer timing is not always the same.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>For example, if you
use the jobmanager-fork, every output line is transferred to the clientÅfs
stdout and stderr and displayed within several seconds after the line is
output.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>With some other type
of jobmanager, however, the output is all transferred at the end of the job. In
this case, the output would not be transferred until
grpc_function_handle_destruct() discards the function handle of Ninf-G.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Output is sometimes
not transferred when the job is cancelled. In case of Ninf-G, jobs are
cancelled for safety if an error such as abnormal disconnection occurs in the
connection to the corresponding handle.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Output is also not
transferred if Ninf-G client is terminated by e.g. exit() before the execution
of grpc_function_handle_destruct().</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Q16. How can I create a local LDIF file?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>Q. Login to the GRAM job submission node (e.g. server01.example.org),
which is a designated host for the creation of function handles, is not
permitted in my cluster system, and I cannot compile Ninf-G Executable in
server01.example.org.</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>So the local LDIF file
for server01.example.org is not created. How can I make the file?</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>A. Local LDIF file is a text file and users can rewrite the content.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>For example, you can
obtain a local LDIF file for server01.example.org in the following way.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>- First,
compile the IDL file for RPC on a host (ex. client.example.org) other than
server01.example.org. Then a local LDIF file for client.example.org is created.
</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>- Then,
modify the obtained local LDIF file with a text editor.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Modify all the lines in the local LDIF file that contain the host name</span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>(Change client.example.org to server01.example.org.)</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>- The file
name of the local LDIF file also contains the host name, although it has no
influence on the client execution. To prevent confusion, change the file name
to server01.example.org.</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The local LDIF file
created in the above steps should be specified in the Ninf-G client
configuration file </span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Take full
responsibility for the modification of the local LDIF file. </span></p>

</div>

</body>

</html>
