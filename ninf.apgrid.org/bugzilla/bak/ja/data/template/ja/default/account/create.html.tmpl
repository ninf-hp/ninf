#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.09
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1081929521',
        'name' => 'account/create.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "<!-- 1.0\@bugzilla.org -->\n";
    $output .=  "\n";
    $output .=  $context->process('global/header.html.tmpl', { 'title' => 'アカウントの作成' });
    $output .=  "\n\n<p>\n  新しい Bugzilla アカウントを作成します。\n  アカウント名として、あなたのメールアドレスを入力してください。\n  アカウントが作成され、  パスワードがメールで送信されます。\n  オプションとして、名前を入力することもできます。\n<!--\n  To create a Bugzilla account, all that you need to do is to enter a\n  legitimate e-mail address.  The account will be created, and its\n  password will be mailed to you. Optionally you may enter your real name \n  as well.\n-->\n</p>\n\n<form method=\"get\" action=\"createaccount.cgi\">\n  <table>\n    <tr>\n      <td align=\"right\">\n        <b>メールアドレス:</b>\n      </td>\n      <td>\n        <input size=\"35\" name=\"login\">";
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['Param', [ 'emailsuffix' ]]);
        
        &$filter($output);
    };
    
    $output .=  "\n      </td>\n    </tr>\n    \n    <tr>\n      <td align=\"right\">\n        <b>名前:</b>\n      </td>\n      <td>\n        <input size=\"35\" name=\"realname\">\n      </td>\n    </tr>\n  </table>\n  <br>\n  <input type=\"submit\" value=\"アカウント作成\">\n</form>\n";
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  " \n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
