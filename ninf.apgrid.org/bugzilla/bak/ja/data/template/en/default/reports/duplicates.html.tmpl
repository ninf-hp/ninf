#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.09
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1065824424',
        'name' => 'reports/duplicates.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "<!-- 1.0\@bugzilla.org -->\n";
    $output .=  "\n\n";
    $output .=  "\n";
    if ($stash->get('product')) {
    $stash->set('title', ("Most Frequently Reported Bugs for " . $stash->get('product')));
    }
    else {
    $output .=  "   ";
    $stash->set('title', 'Most Frequently Reported Bugs');
    }
    
    $output .=  "\n";
    $output .=  $context->process('global/header.html.tmpl');
    $output .=  "\n\n<p>\n  <a href=\"#explanation\">What is this data?</a>\n  <br>\n  <a href=\"#params\">Change parameters</a>\n</p>\n";
    $output .=  $context->process('reports/duplicates-table.html.tmpl');
    $output .=  "\n\n<br>\n<br>\n\n";
    $output .=  "\n";
    $stash->set('bug_ids_string', $stash->get(['vis_bug_ids', 0, 'join', [ ',' ]]));
    $output .=  "\n\n<h3><a name=\"params\">Change Parameters</a></h3>\n\n<form method=\"get\" action=\"duplicates.cgi\">\n  <input type=\"hidden\" name=\"sortby\" value=\"";
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('sortby');
        
        &$filter($output);
    };
    
    $output .=  "\">\n  <input type=\"hidden\" name=\"reverse\" value=\"";
    $output .=  $stash->get('reverse');
    $output .=  "\">\n  <input type=\"hidden\" name=\"bug_id\" value=\"";
    $output .=  $stash->get('bug_ids_string');
    $output .=  "\">\n  <table>\n    <tr>\n      <td>When sorting or restricting,\n          work with:</td>\n      <td>\n        <input type=\"radio\" name=\"sortvisible\" id=\"entirelist\" value=\"0\" ";
    if (! $stash->get('sortvisible')) {
    $output .=  'checked';
    }
    
    $output .=  ">         \n        <label for=\"entirelist\">\n          entire list\n        </label>\n        <br>        \n        <input type=\"radio\" name=\"sortvisible\" id=\"visiblelist\" value=\"1\" ";
    if ($stash->get('sortvisible')) {
    $output .=  'checked';
    }
    
    $output .=  "> \n        <label for=\"visiblelist\">\n          currently visible list\n        </label>\n      </td>\n      <td rowspan=\"4\" valign=\"top\">Restrict to products:</td>\n      <td rowspan=\"4\" valign=\"top\">\n        <select name=\"product\" size=\"5\" multiple=\"multiple\">";
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('products');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'p'} = $value;
    $output .=  "\n            <option name=\"";
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('p');
        
        &$filter($output);
    };
    
    $output .=  "\"";
    if ($stash->get('product') eq $stash->get('p')) {
    $output .=  ' selected';
    }
    
    $output .=  ">";
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('p');
        
        &$filter($output);
    };
    
    $output .=  "</option>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n        </select>\n      </td>\n     </tr>\n\n    <tr>\n      <td>Max rows:</td>\n      <td>\n        <input size=\"4\" name=\"maxrows\" value=\"";
    $output .=  $stash->get('maxrows');
    $output .=  "\">\n      </td>\n    </tr>\n\n    <tr>\n      <td>Change column is change in the last:</td>\n      <td>\n        <input size=\"4\" name=\"changedsince\" value=\"";
    $output .=  $stash->get('changedsince');
    $output .=  "\"> days\n      </td>\n    </tr>\n\n    <tr>\n      <td>\n        <label for=\"openonly\">\n          Open bugs only:\n        </label>\n      </td>\n      <td>\n        <input type=\"checkbox\" name=\"openonly\" id=\"openonly\" value=\"1\" ";
    if ($stash->get('openonly')) {
    $output .=  'checked';
    }
    
    $output .=  ">      \n      </td>\n    </tr>\n\n  </table>\n\n  <input type=\"submit\" value=\"Change\"> \n</form>\n\n<form method=\"post\" action=\"buglist.cgi\">\n  <input type=\"hidden\" name=\"bug_id\" value=\"";
    $output .=  $stash->get('bug_ids_string');
    $output .=  "\">\n  <input type=\"hidden\" name=\"order\" value=\"Reuse same sort as last time\">\n  Or just give this to me as a <input type=\"submit\" value=\"bug list\">. \n  (Note: the order may not be the same.)\n</form>\n\n<hr>\n\n<b>\n  <a name=\"explanation\">What are \"Most Frequently Reported Bugs\"?</a>\n</b>\n\n<blockquote>\n  The Most Frequent Bugs page lists the known open bugs which \n  are reported most frequently in recent builds. It is \n  automatically generated from the Bugzilla database every 24 hours, by \n  counting the number of direct and indirect duplicates of bugs.\n  This information is provided in order to assist in minimizing\n  the amount of duplicate bugs entered into Bugzilla which in turn cuts down\n  on development time.\n</blockquote>\n\n<b>How do I use this list?</b>\n\n<ul>\n  <li>Review the most frequent bugs list.</li>\n  <li>If problem is listed:</li>\n\n  <ul>\n    <li>Click on Bug # link to confirm that you have found the same bug and \n      comment if you have additional information. Or move on with your testing\n      of the product.\n    </li>\n  </ul>\n\n  <li>If problem not listed:</li>\n\n  <ul>\n    <li>Go to the <a href=\"query.cgi\">Bugzilla Search</a>\n      page to try and locate a similar bug that has already been written.</li>\n    <li>If you find your bug in Bugzilla, feel free to comment with any new or\n      additional data you may have.</li>\n    <li>If you cannot find your problem already documented in Bugzilla, go to\n      the\n      <a href=\"http://www.mozilla.org/quality/help/bug-form.html\">Bugzilla\n        Helper</a>\n      and post a new bug.</li>\n  </ul>\n</ul>\n";
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
