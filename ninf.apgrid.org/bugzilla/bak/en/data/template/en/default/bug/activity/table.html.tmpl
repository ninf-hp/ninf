#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.09
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1019156198',
        'name' => 'bug/activity/table.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "<!-- 1.0\@bugzilla.org -->\n";
    $output .=  "\n\n";
    $output .=  "\n";
    if ($stash->get('incomplete_data')) {
    $output .=  "\n  <p>\n    There used to be a bug Bugzilla which caused activity data\n    to be lost if there was a large number of cc's or dependencies.  That\n    has been fixed, however, there was some data already lost on this bug\n    that could not be regenerated.  The changes that the script could not\n    reliably determine are prefixed by '?'.\n  </p>";
    }
    
    $output .=  "\n";
    if ($stash->get(['operations', 0, 'size', 0]) > 0) {
    $output .=  "\n  <table border cellpadding=\"4\">\n    <tr>\n      <th>Who</th>\n      <th>When</th>\n      <th>What</th>\n      <th>Removed</th>\n      <th>Added</th>\n    </tr>\n";
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('operations');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'operation'} = $value;
    $output .=  "     \n      <tr>\n        <td rowspan=\"";
    $output .=  $stash->get(['operation', 0, 'changes', 0, 'size', 0]);
    $output .=  "\" valign=\"top\">";
    $output .=  $stash->get(['operation', 0, 'who', 0]);
    $output .=  "\n        </td>\n        <td rowspan=\"";
    $output .=  $stash->get(['operation', 0, 'changes', 0, 'size', 0]);
    $output .=  "\" valign=\"top\">";
    $output .=  $stash->get(['operation', 0, 'when', 0]);
    $output .=  "\n        </td>";
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get(['operation', 0, 'changes', 0]);
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'change'} = $value;
    if ($stash->get(['loop', 0, 'index', 0]) > 0) {
    $output .=  '</tr><tr>';
    }
    
    $output .=  "\n            <td>";
    if ($stash->get(['change', 0, 'attachid', 0])) {
    $output .=  "\n                <a href=\"attachment.cgi?id=";
    $output .=  $stash->get(['change', 0, 'attachid', 0]);
    $output .=  "&amp;action=view\">\n                Attachment #";
    $output .=  $stash->get(['change', 0, 'attachid', 0]);
    $output .=  "</a>         ";
    }
    
    $output .=  $stash->get(['change', 0, 'field', 0]);
    $output .=  "\n            </td>\n            <td>";
    if ($stash->get(['change', 0, 'removed', 0])) {
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['change', 0, 'removed', 0]);
        
        &$filter($output);
    };
    
    }
    else {
    $output .=  "\n                &nbsp;";
    }
    
    $output .=  "\n            </td>\n            <td>";
    if ($stash->get(['change', 0, 'added', 0])) {
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['change', 0, 'added', 0]);
        
        &$filter($output);
    };
    
    }
    else {
    $output .=  "\n                &nbsp;";
    }
    
    $output .=  "\n            </td>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n      </tr>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n  </table>";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
